<?xml version="1.0" encoding="UTF-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" version="1.2">
  <file original="MIGRATION.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Миграция</source>
</trans-unit>
      <trans-unit id="tu2" resname="section-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.0.0</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-bl/</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для версии 1.0.0 миграция подразумевается с использования <bpt id="1">&lt;a href="https://github.com/bem/bem-bl/" [#$tu4]&gt;</bpt>bem-bl<ept id="1">&lt;/a&gt;</ept> на использование <bpt id="2">&lt;a href="https://github.com/bem/bem-core/" [#$tu5]&gt;</bpt>bem-core<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модули</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Весь код теперь пишется в терминах модульной системы <bpt id="1">&lt;a href="https://github.com/ymaps/modules" class="uri" [#$tu8] class="uri"&gt;</bpt>https://github.com/ymaps/modules<ept id="1">&lt;/a&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Все зависимости должны явно указываться в коде, обращения к глобальным объектом необходимо минимизировать, а, по возможности, и полностью исключить.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример:</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'my-module', // имя модуля
    ['module-from-library', 'my-another-module'], // зависимости модуля
    function(provide, moduleFromLibrary, myAnotherModule) { // декларация модуля, вызывается когда все зависимости "разрезолвлены"

// предоставление модуля
provide({
    myModuleMethod : function() {}
});

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">TODO: дописать про изменение сборки (использование специальных технологий для js и как быть с кастомными сборщиками)</source>
</trans-unit>
      <trans-unit id="tu12" resname="jquery--jquery--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">jQuery и jQuery-плагины</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">jQuery представлен модулем-оберткой <bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept>, который использует глобальный объект jQuery,<ph id="2">&lt;br /&gt;</ph>в случае если он уже присутствует на странице, в противном случае загружая его самостоятельно.<ph id="3">&lt;br /&gt;</ph>jQuery теперь используется только для операций, связанных непосредственно с DOM<ph id="4">&lt;br /&gt;</ph>(поиск элементов, подписка на события, установка/получение атрибутов элементов, и т.д.).</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для всех остальных операций написаны соответствующие модули,<ph id="1">&lt;br /&gt;</ph>предоставляющие аналогичный функционал, но, при этом, не зависящие от jQuery:</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>objects<ept id="1">&lt;/code&gt;</ept> для работы с объектами (с методами <bpt id="2">&lt;code&gt;</bpt>extend<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>isEmpty<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>each<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> для работы с функциями (с методами <bpt id="2">&lt;code&gt;</bpt>isFunction<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>noop<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Также, все jQuery-плагины, не связанные непосредственно с jQuery<ph id="1">&lt;br /&gt;</ph>(<bpt id="2">&lt;code&gt;</bpt>$.observable<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>$.inherit<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>$.cookie<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>$.identify<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>$.throttle<ept id="6">&lt;/code&gt;</ept>) стали модулями:</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>events<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.observable<ept id="2">&lt;/code&gt;</ept> для работы с событиями, предоставляющий "классы" <bpt id="3">&lt;code&gt;</bpt>EventsEmitter<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>Event<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.inherit<ept id="2">&lt;/code&gt;</ept> для работы с "классами" и наследованием</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>cookie<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.cookie<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>identify<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.identify<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модули <bpt id="1">&lt;code&gt;</bpt>functions__throttle<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>functions__debounce<ept id="2">&lt;/code&gt;</ept> вместо <bpt id="3">&lt;code&gt;</bpt>$.throttle<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>$.debounce<ept id="4">&lt;/code&gt;</ept>, соответственно</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// код блока
$.throttle(...
// код блока<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>module.define('my-module', ['functions__throttle'], function(provide, throttle) {
// код модуля
throttle(...
// код модуля<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" resname="bem.dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">BEM.DOM-блоки</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Декларация</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо декларации через BEM.DOM.decl необходимо доопределять модуль <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', ...);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', function(provide, BEMDOM) {

BEMDOM.decl('block', ...);

provide(BEMDOM);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Конструктор</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо использовать полную нотацию для обработчика установки модификатора <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> в значение <bpt id="2">&lt;code&gt;</bpt>inited<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod : {
    js : function() {
        // код конструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod : {
    'js' : {
        'inited' : function() {
            // код конструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Деструктор</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> необходимо использовать обработчик установки модификатора <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> в пустое значение (удаление модификатора).<ph id="3">&lt;br /&gt;</ph>Вызывать <bpt id="4">&lt;code&gt;</bpt>__base<ept id="4">&lt;/code&gt;</ept> для того, чтобы у блоков работал базовый деструктор, определенный в <bpt id="5">&lt;code&gt;</bpt>i-bem__dom<ept id="5">&lt;/code&gt;</ept>, больше не нужно.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>destruct : function() {
    this.__base.apply(this, arguments);
    // код деструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod : {
    js : {
        '' : function() {
            // код деструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" resname="-changethis-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept> необходимо использовать либо соответствующий параметр, либо нативный метод <bpt id="2">&lt;code&gt;</bpt>bind<ept id="2">&lt;/code&gt;</ept>, если такой параметр отсутствует.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// код блока
obj.on('event', this.changeThis(this._method);
// код блока<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>obj.on('event', this._method.bind(this));
// или лучше
obj.on('event', this._method, this);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" resname="-aftercurrentevent-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept> необходимо использовать метод <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>,<ph id="3">&lt;br /&gt;</ph>который гарантирует, что блок еще существует в момент исполнения callback'а<ph id="4">&lt;br /&gt;</ph>(если блок уже уничтожен к этому моменту, то callback не исполняется).</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        this.afterCurrentEvent(function() { ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', function(provide, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        this.nextTick(function() { ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" resname="-findelem-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>findElem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Контекст для поиска элемента больше не задается строкой, вместо нее следует передавать jQuery-объект.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var nestedElem = this.findElem('parent-elem', 'nested-elem');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var nestedElem = this.findElem(this.findElem('parent-elem'), 'nested-elem'),
    oneMoreElem = this.findElem(this.elem('another-elem'), 'nested-elem');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" resname="-livebindto-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>liveBindTo<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>liveBindTo<ept id="1">&lt;/code&gt;</ept> больше не поддерживает поле <bpt id="2">&lt;code&gt;</bpt>elemName<ept id="2">&lt;/code&gt;</ept> для передачи имени элемента. Вместо него следует использовать поле <bpt id="3">&lt;code&gt;</bpt>elem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu66" resname="--dom-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Доступ до DOM-элемента в обработчике события</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">DOM-элемент, к которому был подвешен обработчик события теперь доступен<ph id="1">&lt;br /&gt;</ph>как <bpt id="2">&lt;code&gt;</bpt>$(e.currentTarget)<ept id="2">&lt;/code&gt;</ept>вместо <bpt id="3">&lt;code&gt;</bpt>e.data.domElem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onClick : function(e) {
    e.data.domElem.attr(...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onClick : function(e) {
    $(e.currentTarget).attr(...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="-channels-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Каналы (channels)</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каналы больше не являются встроенными в BEM, теперь они являются самостоятельным модулем <bpt id="1">&lt;code&gt;</bpt>events__channels<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        BEM.channel('channel-name').on(....<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', ['events__channels'], function(provide, channels, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        channels('channel-name').on(....<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" resname="-i-system---sys--tick-idle-wakeup-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-system<ept id="1">&lt;/code&gt;</ept> и канал <bpt id="2">&lt;code&gt;</bpt>sys<ept id="2">&lt;/code&gt;</ept> событий <bpt id="3">&lt;code&gt;</bpt>tick<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>idle<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>wakeup<ept id="5">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Этот блок и канал перестали существовать, вместо них появились отдельные модули: <bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept> с событием tick и <bpt id="2">&lt;code&gt;</bpt>idle<ept id="2">&lt;/code&gt;</ept> с событиями idle и wakeup.</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        BEM.channel('sys').on('tick', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', ['tick'], function(provide, tick, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        tick.on('tick', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        BEM.channel('sys').on('wakeup', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', ['idle'], function(provide, idle, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        idle.on('wakeup', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu88" resname="bem--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">BEM-блоки</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Те BEM-блоки, которые использовались как хранилище для каких-то методов, при этом никак не использующие BEM-методологию, теперь<ph id="1">&lt;br /&gt;</ph>могут быть написаны как модули.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.decl('i-router', {
    route : function() { ... }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('router', function(provide) {

provide({
    route : function() { ... }
});

});
<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если же, по каким-то причинам, нужны именно BEM-блоки (не BEM.DOM-блоки), то их можно объявлять, доопределяя модуль <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.decl('my-block', { ... });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem', function(provide, BEM) {

BEM.decl('my-block', { ... });

provide(BEM);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" resname="----b-spin-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Рефакторинг на примере блока <bpt id="1">&lt;code&gt;</bpt>b-spin<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('b-spin', {

    onSetMod : {

        'js' : function() {

            this._size = this.getMod('size') || /[\d]+/.exec(this.getMod('theme'))[0];

            this._bgProp = 'background-position';
            this._posPrefix = '0 -';

            if (this.elem('icon').css('background-position-y')) { /* В IE нельзя получить свойство background-position, только background-position-y, поэтому костыляем */
                this._bgProp = 'background-position-y';
                this._posPrefix = '-';
            }

            this._curFrame = 0;

            this.hasMod('progress') &amp;&amp; this.channel('sys').on('tick', this._onTick, this);

        },

        'progress' : {

            'yes' : function() {

                this.channel('sys').on('tick', this._onTick, this);

            },

            '' : function() {

                this.channel('sys').un('tick', this._onTick, this);

            }

        }
    },

    _onTick: function(){

        var y = ++this._curFrame * this._size;

        (y &gt;= this._size * 36) &amp;&amp; (this._curFrame = y = 0);

        this.elem('icon').css(this._bgProp, this._posPrefix + y +'px');

    },

    destruct : function() {

        this.channel('sys').un('tick', this._onTick, this);
        this.__base.apply(this, arguments);

    }

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'i-bem__dom',
    ['tick'],
    function(provide, tick, BEMDOM) {

var FRAME_COUNT = 36;

BEMDOM.decl('b-spin', {
    onSetMod : {
        'js' : {
            'inited' : function() { // конструктор
                var hasBackgroundPositionY = !!this.elem('icon').css('background-position-y')); /* В IE нельзя получить свойство background-position, только background-position-y */

                this._bgProp = hasBackgroundPositionY? 'background-position-y' : 'background-position';
                this._posPrefix = hasBackgroundPositionY? '-' : '0 -';
                this._curFrame = 0;
                this._size = Number(this.getMod('size') || /[\d]+/.exec(this.getMod('theme'))[0]);

                this.hasMod('progress') &amp;&amp; this._bindToTick();
            },

            '' : function() { // деструктор
                this._unbindFromTick();
            }
        },

        'progress' : {
            'true' : function() {
                this._bindToTick();
            },

            '' : function() {
                this._unbindFromTick();
            }
        }
    },

    _bindToTick : function() {
        tick.on('tick', this._onTick, this);
    },

    _unbindFromTick : function() {
        tick.un('tick', this._onTick, this);
    },

    _onTick : function() {
        var offset;
        this._curFrame++ &gt;= FRAME_COUNT?
            offset = this._curFrame * this._size :
            this._curFrame = offset = 0;

        this.elem('icon').css(this._bgProp, this._posPrefix + offset + 'px');
    }
});

provide(BEMDOM);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="CONTRIBUTORS.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Контрибьюторам</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/graphs/contributors</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Список контрибьютеров данного проекта доступен по ссылке <bpt id="1">&lt;a href="https://github.com/bem/bem-core/graphs/contributors" class="uri" [#$tu3] class="uri"&gt;</bpt>https://github.com/bem/bem-core/graphs/contributors<ept id="1">&lt;/a&gt;</ept>. Вы так же можете получить его с помощью команды <bpt id="2">&lt;code&gt;</bpt>git log --pretty=format:"%an &lt;%ae&gt;" | sort -u<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="CHANGELOG.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="--id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">История изменений</source>
</trans-unit>
      <trans-unit id="tu2" resname="section-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.7.0</source>
</trans-unit>
      <trans-unit id="tu3" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1102</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> добавлен новый метод <bpt id="2">&lt;code&gt;</bpt>detach<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/1102" [#$tu5]&gt;</bpt>#1102<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/873</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> добавлена поддержка вложенных миксов (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/873" [#$tu7]&gt;</bpt>873<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/961</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/980</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/982</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> добавлены незначительные оптимизации, связанные с эскейпингом аттрибутов (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/961" [#$tu9]&gt;</bpt>#961<ept id="2">&lt;/a&gt;</ept>), (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/980" [#$tu10]&gt;</bpt>#980<ept id="3">&lt;/a&gt;</ept>) и (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/982" [#$tu11]&gt;</bpt>#982<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1021</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В BEMHTML-шаблоны добавлена поддержка <bpt id="1">&lt;a href="https://github.com/bem/bem-xjst" [#$tu13]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept> 2.x (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/1021" [#$tu14]&gt;</bpt>#1021<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/722</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>clearfix<ept id="1">&lt;/code&gt;</ept> оптимизирован для работы в поддерживаемых библиотекой браузерах IE (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/722" [#$tu16]&gt;</bpt>#722<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/999</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> обновлен до версий 2.1.4 и 1.11.3 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/999" [#$tu18]&gt;</bpt>#999<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu19" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/583</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, из-за которой метод <bpt id="2">&lt;code&gt;</bpt>findElem<ept id="2">&lt;/code&gt;</ept> не обновлял кэш ранее найденных<ph id="3">&lt;br /&gt;</ph> элементов (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/583" [#$tu21]&gt;</bpt>#583<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1037</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, приводящая к неправильной работе метода <bpt id="2">&lt;code&gt;</bpt>dropElemCache<ept id="2">&lt;/code&gt;</ept> в некоторых граничных<ph id="3">&lt;br /&gt;</ph> случаях (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/1037" [#$tu23]&gt;</bpt>#1037<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1090</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, из-за которой вызов метода <bpt id="2">&lt;code&gt;</bpt>setMod<ept id="2">&lt;/code&gt;</ept> не выставлял CSS-классы блоку в случае, если<ph id="3">&lt;br /&gt;</ph> на DOM-узеле был подмешан блок с пересекающимся окончанием в имени (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/1090" [#$tu25]&gt;</bpt>#1090<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1020</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, из-за которой на touch-уровнях не работало специализированное поле <bpt id="2">&lt;code&gt;</bpt>zoom<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/1020" [#$tu27]&gt;</bpt>#1020<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1002</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>keyboard__codes<ept id="1">&lt;/code&gt;</ept>. Клавиши <bpt id="2">&lt;code&gt;</bpt>insert<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>delete<ept id="3">&lt;/code&gt;</ept> были описаны неправильными<ph id="4">&lt;br /&gt;</ph> кодами (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/1002" [#$tu29]&gt;</bpt>#1002<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/b1dc50c621b5659cff33daa4dd3f210b67cf25e1</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой неверно интерпретировались вложенные вызовы <bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/commit/b1dc50c621b5659cff33daa4dd3f210b67cf25e1" [#$tu31]&gt;</bpt>b1dc50c<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1066</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__events_type_pointernative<ept id="1">&lt;/code&gt;</ept>, из-за которой события работали некорректно<ph id="2">&lt;br /&gt;</ph> в браузерах IE 11 и Edge (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/1066" [#$tu33]&gt;</bpt>#1066<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu34" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена русская докуметация для всех блоков библиотеки. Документация доступна по адресу <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/" class="uri" [#$tu36] class="uri"&gt;</bpt>https://ru.bem.info/libs/bem-core/<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Прочие улучшения в документации к библиотеке.</source>
</trans-unit>
      <trans-unit id="tu38" resname="section-1-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.6.0</source>
</trans-unit>
      <trans-unit id="tu39" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/859</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Предоставление модуля <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> теперь происходит после наступления события DOM ready (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/859" [#$tu41]&gt;</bpt>#859<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/890</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Методы <bpt id="1">&lt;code&gt;</bpt>setMod<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>hasMod<ept id="2">&lt;/code&gt;</ept> модуля <bpt id="3">&lt;code&gt;</bpt>i-bem__dom<ept id="3">&lt;/code&gt;</ept> теперь явно преобразуют параметр <bpt id="4">&lt;code&gt;</bpt>modVal<ept id="4">&lt;/code&gt;</ept> к строке,<ph id="5">&lt;br /&gt;</ph> если переданное значение не типа string или boolean (<bpt id="6">&lt;a href="https://github.com/bem/bem-core/issues/890" [#$tu43]&gt;</bpt>#890<ept id="6">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/882</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В блок <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> добавлена возможность прокидывать атрибут <bpt id="2">&lt;code&gt;</bpt>nonce<ept id="2">&lt;/code&gt;</ept>, для корректной работы инлайн-скриптов, в соответствии<ph id="3">&lt;br /&gt;</ph> со спецификацией Content Security Policy (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/882" [#$tu45]&gt;</bpt>#882<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/511</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлены шаблоны <bpt id="1">&lt;code&gt;</bpt>page__conditional-comment<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/511" [#$tu47]&gt;</bpt>#551<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/837</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> обновлен до версии 0.4.8 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/837" [#$tu49]&gt;</bpt>#837<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu50" resname="------1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/792</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой CSS-класс блока дублировался, в случае микса с этим же блоком<ph id="2">&lt;br /&gt;</ph> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/792" [#$tu52]&gt;</bpt>#792<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/da5fdb9923e7e83e3ef9cd31aefc3967ff55fd3c</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>loader_type_bundle<ept id="1">&lt;/code&gt;</ept>, из-за которой функция-обработчик успешного результата могла выполняться<ph id="2">&lt;br /&gt;</ph> после наступления таймаута (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/commit/da5fdb9923e7e83e3ef9cd31aefc3967ff55fd3c" [#$tu54]&gt;</bpt>67ff55f<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/852</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, в некоторых случаях, приводящая к неправильной интерпретации строковых аргументов<ph id="2">&lt;br /&gt;</ph> в методах <bpt id="3">&lt;code&gt;</bpt>append<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>prepend<ept id="4">&lt;/code&gt;</ept> и др. (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/852" [#$tu56]&gt;</bpt>#852<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/862</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_winresize<ept id="1">&lt;/code&gt;</ept>, из-за которой неправильно определятся браузер MSIE (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/862" [#$tu58]&gt;</bpt>#862<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/910</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>object<ept id="1">&lt;/code&gt;</ept>, из-за которой метод <bpt id="2">&lt;code&gt;</bpt>extend<ept id="2">&lt;/code&gt;</ept> неправильно обрабатывал <bpt id="3">&lt;code&gt;</bpt>null<ept id="3">&lt;/code&gt;</ept> в качестве значения<ph id="4">&lt;br /&gt;</ph> аргумента <bpt id="5">&lt;code&gt;</bpt>target<ept id="5">&lt;/code&gt;</ept> (<bpt id="6">&lt;a href="https://github.com/bem/bem-core/issues/910" [#$tu60]&gt;</bpt>#910<ept id="6">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/794</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>. Из BEMJSON было невозможно отключить добавление meta-тега <bpt id="2">&lt;code&gt;</bpt>x-ua-compatible<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/794" [#$tu62]&gt;</bpt>#794<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu63" resname="------1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/000c6af02bfae4506fa460168de16d4e27422393</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Таймаут в <bpt id="1">&lt;code&gt;</bpt>loader_type_bundle<ept id="1">&lt;/code&gt;</ept> увеличен до 30000 мс (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/commit/000c6af02bfae4506fa460168de16d4e27422393" [#$tu65]&gt;</bpt>4e27422<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены незначительные ошибки в русской документации блоков.</source>
</trans-unit>
      <trans-unit id="tu67" resname="section-2-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.5.1</source>
</trans-unit>
      <trans-unit id="tu68" resname="------2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/792</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__pointerpress<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>jquery__pointerrelease<ept id="2">&lt;/code&gt;</ept> из-за которой события не работали в браузере<ph id="3">&lt;br /&gt;</ph> Internet Explorer 8 (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/792" [#$tu70]&gt;</bpt>#792<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/801</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__pointernative<ept id="1">&lt;/code&gt;</ept>. События <bpt id="2">&lt;code&gt;</bpt>pointerenter<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>pointerleave<ept id="3">&lt;/code&gt;</ept> не должны всплывать<ph id="4">&lt;br /&gt;</ph> по DOM-дереву (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/801" [#$tu72]&gt;</bpt>#801<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/808</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>loader_type_bundle<ept id="1">&lt;/code&gt;</ept>. После загрузки, CSS-бандл добавлялся в самый верх HTML-тега <bpt id="2">&lt;code&gt;</bpt>&lt;head&gt;<ept id="2">&lt;/code&gt;</ept>, из-за чего<ph id="3">&lt;br /&gt;</ph> CSS-правила из содержимого бандла могли работать не корректно (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/808" [#$tu74]&gt;</bpt>#808<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/734</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в BH-шаблоне <bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept>. Шаблон не позволял вставить содержимое блока из входного<ph id="2">&lt;br /&gt;</ph> BEMJSON (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/734" [#$tu76]&gt;</bpt>#734<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/781</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, приводящая к неработоспособности добавленных на страницу условных комментариев для браузера<ph id="2">&lt;br /&gt;</ph> Internet Explorer (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/781" [#$tu78]&gt;</bpt>#781<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu79" resname="------2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/788</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> обновлен до версий 2.1.3 и 1.11.2 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/788" [#$tu81]&gt;</bpt>#778<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена документация на русском языке для модулей: <bpt id="1">&lt;code&gt;</bpt>clearfix<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>cookie<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>identify<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>idle<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>inherit<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>keyboard<ept id="6">&lt;/code&gt;</ept>,<ph id="7">&lt;br /&gt;</ph><bpt id="8">&lt;code&gt;</bpt>loader<ept id="8">&lt;/code&gt;</ept>, <bpt id="9">&lt;code&gt;</bpt>next-tick<ept id="9">&lt;/code&gt;</ept>, <bpt id="10">&lt;code&gt;</bpt>string<ept id="10">&lt;/code&gt;</ept> and <bpt id="11">&lt;code&gt;</bpt>tick<ept id="11">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена документация на русском языке для <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлено руководство на английском языке по технологиям BEMHTML и BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu85" resname="section-3-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.5.0</source>
</trans-unit>
      <trans-unit id="tu86" resname="--2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://www.mozilla.org/MPL/2.0/</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/443</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Код библиотеки переведен на использование лицензии <bpt id="1">&lt;a href="https://www.mozilla.org/MPL/2.0/" [#$tu88]&gt;</bpt>MPL 2.0<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/443" [#$tu89]&gt;</bpt>#443<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/672</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуль <bpt id="1">&lt;code&gt;</bpt>loader_type_js<ept id="1">&lt;/code&gt;</ept> добавлена возможность указывать функцию-обработчик ошибок (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/672" [#$tu91]&gt;</bpt>#672<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/602</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Класс <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> добавлен в export-параметры функции <bpt id="2">&lt;code&gt;</bpt>oninit<ept id="2">&lt;/code&gt;</ept> в базовых шаблонах <bpt id="3">&lt;code&gt;</bpt>i-bem.bemtree<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/602" [#$tu93]&gt;</bpt>#602<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/706</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> BEMTREE добавлен статический метод <bpt id="2">&lt;code&gt;</bpt>reapply<ept id="2">&lt;/code&gt;</ept> по аналогии с BEMHTML (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/706" [#$tu95]&gt;</bpt>#706<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/689</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлены bh-шаблоны блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> для уровней touch (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/689" [#$tu97]&gt;</bpt>#689<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/709</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru">npm-модуль <bpt id="1">&lt;a href="https://github.com/bem/bem-xjst" [#$tu99]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept> обновлен до версии 0.9.0 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/709" [#$tu100]&gt;</bpt>#709<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu101" resname="------3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/699</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, из-за которой метод <bpt id="2">&lt;code&gt;</bpt>findBlocksInside<ept id="2">&lt;/code&gt;</ept> мог возвращать блоки, которые еще не были<ph id="3">&lt;br /&gt;</ph> инициализированы (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/699" [#$tu103]&gt;</bpt>#699<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/694</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept>, позволявшая вызвать метод <bpt id="2">&lt;code&gt;</bpt>stop<ept id="2">&lt;/code&gt;</ept> без освобождения внутреннего таймера (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/694" [#$tu105]&gt;</bpt>#694<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/633</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой на элементы блока добавлялся CSS-класс <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/633" [#$tu107]&gt;</bpt>#633<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/438ebb8f828e26977592e26511e8aad15176d7a4</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в технологии <bpt id="1">&lt;code&gt;</bpt>html-from-bemtree<ept id="1">&lt;/code&gt;</ept>, из-за которой в контексте BEMTREE-шаблонов не было глобальных объектов<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>vow<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>console<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>setTimeout<ept id="5">&lt;/code&gt;</ept> (<bpt id="6">&lt;a href="https://github.com/bem/bem-core/commit/438ebb8f828e26977592e26511e8aad15176d7a4" [#$tu109]&gt;</bpt>#438ebb8<ept id="6">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu110" resname="------3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлено английское руководство по технологии BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена русская документация для i-bem.js. Теперь документация соответсвует текущему API библиотеки.</source>
</trans-unit>
      <trans-unit id="tu113" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена документация для технологий BEMHTML/BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu114" resname="section-4-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.4.0</source>
</trans-unit>
      <trans-unit id="tu115" resname="--3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu118" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bemhtml-compat</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-li" xml:space="preserve">
<source xml:lang="ru">npm-модуль <bpt id="1">&lt;a href="https://github.com/bem/bem-xjst" [#$tu117]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept> обновлен до версии 0.8.0; <bpt id="2">&lt;a href="https://github.com/bem/bemhtml-compat" [#$tu118]&gt;</bpt>bemhtml-compat<ept id="2">&lt;/a&gt;</ept><ph id="3">&lt;br /&gt;</ph> обновлен до 0.0.11.</source>
</trans-unit>
      <trans-unit id="tu119" resname="------4-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/607</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointerpressrelease<ept id="1">&lt;/code&gt;</ept>, из-за которой события <bpt id="2">&lt;code&gt;</bpt>pointerpress<ept id="2">&lt;/code&gt;</ept> / <bpt id="3">&lt;code&gt;</bpt>pointerrelease<ept id="3">&lt;/code&gt;</ept> генерировались<ph id="4">&lt;br /&gt;</ph> на нажатие любой кнопки мыши (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/607" [#$tu121]&gt;</bpt>#607<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/608</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom.js<ept id="1">&lt;/code&gt;</ept>, из-за которой в некоторых случаях не происходил вызов базового метода<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>live<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/608" [#$tu123]&gt;</bpt>#608<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu124" resname="------4-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена английская документация на JS-синтаксис BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu126" resname="section-5-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.3.0</source>
</trans-unit>
      <trans-unit id="tu127" resname="--4-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.polymer-project.org/</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/567</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена новая реализация pointer-событий на основе полифилов из <bpt id="1">&lt;a href="http://www.polymer-project.org/" [#$tu129]&gt;</bpt>Polymer<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/567" [#$tu130]&gt;</bpt>#567<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/568</source>
</trans-unit>
      <trans-unit id="tu131" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom.js<ept id="1">&lt;/code&gt;</ept> указывать дополнительные данные о событии в методах <bpt id="2">&lt;code&gt;</bpt>bindTo*<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/568" [#$tu132]&gt;</bpt>#568<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu133" resname="------5-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/555</source>
</trans-unit>
      <trans-unit id="tu134" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой было невозможно использовать микс в виде одного объекта (не массива) одновременно в BEMJSON и BEMHTML (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/555" [#$tu135]&gt;</bpt>#555<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/516</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в BEMHTML-шаблоне блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, из-за которой не выполнялись стандартные моды, и исправлена регрессия в шаблоне на touch-уровне (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/516" [#$tu137]&gt;</bpt>516<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu138" resname="section-6-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.4</source>
</trans-unit>
      <trans-unit id="tu139" resname="------6-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu141" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/546</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept>, из-за которой событие об изменении модификатора генерировалось,<ph id="2">&lt;br /&gt;</ph> даже если обработчик <bpt id="3">&lt;code&gt;</bpt>beforeSetMod<ept id="3">&lt;/code&gt;</ept> предотвращал изменение (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/pull/546" [#$tu141]&gt;</bpt>#546<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/554</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В случае возникновения ошибки в процессе декодирования строки, модуль <bpt id="1">&lt;code&gt;</bpt>querystring__uri<ept id="1">&lt;/code&gt;</ept> теперь возвращает<ph id="2">&lt;br /&gt;</ph> оригинальную строку (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/554" [#$tu143]&gt;</bpt>#554<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu144" resname="section-7-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.3</source>
</trans-unit>
      <trans-unit id="tu145" resname="------7-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/540</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуле <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> был исправлен процесс удаления блока для предотвращения нежелательной повторной<ph id="2">&lt;br /&gt;</ph> инициализации блока (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/540" [#$tu147]&gt;</bpt>#540<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu149" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/534</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointer<ept id="1">&lt;/code&gt;</ept>, из-за которой нативные события мыши ошибочно замещались<ph id="2">&lt;br /&gt;</ph> на pointer-события (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/534" [#$tu149]&gt;</bpt>#534<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu151" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/533</source>
</trans-unit>
      <trans-unit id="tu150" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>unbindFrom*<ept id="1">&lt;/code&gt;</ept>-методы в модуле <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> теперь поддерживают отписывание от нескольких событий<ph id="3">&lt;br /&gt;</ph> за вызов (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/533" [#$tu151]&gt;</bpt>#533<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/532</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена недостающая зависимость от модуля <bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> в модуле <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/532" [#$tu153]&gt;</bpt>#532<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu154" resname="section-8-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.2</source>
</trans-unit>
      <trans-unit id="tu155" resname="------8-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu157" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/518</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> приводящая к повторной инициализации блока на DOM-узле, отмеченном как<ph id="2">&lt;br /&gt;</ph> удаленный (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/518" [#$tu157]&gt;</bpt>#518<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu159" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/529</source>
</trans-unit>
      <trans-unit id="tu158" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, из-за которой невозможно было подписаться на событие о выставлении модификатора в<ph id="2">&lt;br /&gt;</ph> значение <bpt id="3">&lt;code&gt;</bpt>false<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/529" [#$tu159]&gt;</bpt>#529<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu161" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/515</source>
</trans-unit>
      <trans-unit id="tu160" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> обновлен до версий 2.1.1 и 1.11.1 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/515" [#$tu161]&gt;</bpt>#515<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu162" resname="section-9-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.1</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/505</source>
</trans-unit>
      <trans-unit id="tu163" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointerpressrelease<ept id="1">&lt;/code&gt;</ept>, из-за которой событие <bpt id="2">&lt;code&gt;</bpt>pointerpress<ept id="2">&lt;/code&gt;</ept> генерировалось<ph id="3">&lt;br /&gt;</ph> дважды на каждое событие <bpt id="4">&lt;code&gt;</bpt>mousedown<ept id="4">&lt;/code&gt;</ept> в IE10 (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/505" [#$tu164]&gt;</bpt>#505<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu165" resname="section-10-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.0</source>
</trans-unit>
      <trans-unit id="tu166" resname="--5-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu168" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/431</source>
</trans-unit>
      <trans-unit id="tu167" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен новый модуль <bpt id="1">&lt;code&gt;</bpt>keyboard__codes<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/431" [#$tu168]&gt;</bpt>#431<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu170" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/485</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Класс <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> добавлен в export-параметры функции <bpt id="2">&lt;code&gt;</bpt>oninit<ept id="2">&lt;/code&gt;</ept> в базовых шаблонах <bpt id="3">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/pull/485" [#$tu170]&gt;</bpt>#485<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/481</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность декларировать инстанс элемента используя класс блока (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/481" [#$tu172]&gt;</bpt>#481<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu174" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/432</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлено поведение метода <bpt id="1">&lt;code&gt;</bpt>isSimple<ept id="1">&lt;/code&gt;</ept> класса BEMContext в в базовых шаблонах <bpt id="2">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/432" [#$tu174]&gt;</bpt>#432<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/476</source>
</trans-unit>
      <trans-unit id="tu175" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в методе <bpt id="1">&lt;code&gt;</bpt>liveUnbindFrom<ept id="1">&lt;/code&gt;</ept> модуля <bpt id="2">&lt;code&gt;</bpt>BEMDOM<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/476" [#$tu176]&gt;</bpt>#476<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/501</source>
</trans-unit>
      <trans-unit id="tu177" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в методе <bpt id="1">&lt;code&gt;</bpt>isFocusable<ept id="1">&lt;/code&gt;</ept> модуля <bpt id="2">&lt;code&gt;</bpt>dom<ept id="2">&lt;/code&gt;</ept>, возникающая если переданный <bpt id="3">&lt;code&gt;</bpt>domElem<ept id="3">&lt;/code&gt;</ept> является ссылкой<ph id="4">&lt;br /&gt;</ph> с атрибутом <bpt id="5">&lt;code&gt;</bpt>tabindex<ept id="5">&lt;/code&gt;</ept>, но без атрибута <bpt id="6">&lt;code&gt;</bpt>href<ept id="6">&lt;/code&gt;</ept> (<bpt id="7">&lt;a href="https://github.com/bem/bem-core/issues/501" [#$tu178]&gt;</bpt>#501<ept id="7">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu180" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/479</source>
</trans-unit>
      <trans-unit id="tu179" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка возникающая в процессе декларации БЭМ-блока как модуля, если был подключен<ph id="1">&lt;br /&gt;</ph> модуль <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_elem-instances<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/479" [#$tu180]&gt;</bpt>#479<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu182" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/486</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуле <bpt id="1">&lt;code&gt;</bpt>i-bem__dom_init_auto<ept id="1">&lt;/code&gt;</ept> добавлено временное решение для проблем с производительностью ренедеринга при инициализации блоков<ph id="2">&lt;br /&gt;</ph> в Chrome-браузерах (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/486" [#$tu182]&gt;</bpt>#486<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu184" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/412</source>
</trans-unit>
      <trans-unit id="tu183" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow.js<ept id="1">&lt;/code&gt;</ept> перенесен в <bpt id="2">&lt;code&gt;</bpt>vow.vanilla.js<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/412" [#$tu184]&gt;</bpt>#412<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu185" resname="------5-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/504</source>
</trans-unit>
      <trans-unit id="tu186" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> обновлен до версии 0.4.3 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/504" [#$tu187]&gt;</bpt>#504<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu189" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/500</source>
</trans-unit>
      <trans-unit id="tu188" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена русская документация на технологию BEMTREE (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/pull/500" [#$tu189]&gt;</bpt>#500<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu191" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/471</source>
</trans-unit>
      <trans-unit id="tu190" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена русская документация на JavaScript-синтаксис BEMHTML (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/pull/471" [#$tu191]&gt;</bpt>#471<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu193" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/478</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен референс на API JavaScript-модулей. См. ветку <bpt id="1">&lt;code&gt;</bpt>v2-jsdoc<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/478" [#$tu193]&gt;</bpt>#478<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu194" resname="section-11-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.1.0</source>
</trans-unit>
      <trans-unit id="tu195" resname="--6-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu197" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/454</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept>, из-за которой событие об изменении модификатора происходило до того, как будет<ph id="2">&lt;br /&gt;</ph> вызван обработчик реакции на изменение этого модификатора в <bpt id="3">&lt;code&gt;</bpt>onSetMod<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/454" [#$tu197]&gt;</bpt>#454<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/441</source>
</trans-unit>
      <trans-unit id="tu198" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Свойства <bpt id="1">&lt;code&gt;</bpt>this.mods<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>this.ctx.mods<ept id="2">&lt;/code&gt;</ept> базового шаблона <bpt id="3">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="3">&lt;/code&gt;</ept> теперь используют<ph id="4">&lt;br /&gt;</ph> один и тот же объект (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/441" [#$tu199]&gt;</bpt>#441<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/inherit</source>
</trans-unit>
      <trans-unit id="tu202" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/466</source>
</trans-unit>
      <trans-unit id="tu200" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;a href="https://github.com/dfilatov/inherit" [#$tu201]&gt;</bpt>inherit<ept id="1">&lt;/a&gt;</ept> обновлен до версии 2.2.1 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/466" [#$tu202]&gt;</bpt>#466<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu204" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/465</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлен порядок тегов секции <bpt id="1">&lt;code&gt;</bpt>head<ept id="1">&lt;/code&gt;</ept> в шаблоне <bpt id="2">&lt;code&gt;</bpt>page.bemhtml<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/465" [#$tu204]&gt;</bpt>#465<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu205" resname="------6-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu207" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/461</source>
</trans-unit>
      <trans-unit id="tu206" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В русскую документацию к <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> добавлено описание поля <bpt id="2">&lt;code&gt;</bpt>baseMix<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/461" [#$tu207]&gt;</bpt>#461<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu209" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/444</source>
</trans-unit>
      <trans-unit id="tu208" restype="x-li" xml:space="preserve">
<source xml:lang="ru">CDN-хост внешних ресурсов изменен на <bpt id="1">&lt;code&gt;</bpt>yastatic.net<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/444" [#$tu209]&gt;</bpt>#444<ept id="2">&lt;/a&gt;</ept>).<ph id="3">&lt;br /&gt;</ph> Все ресурсы все так же доступны с хоста <bpt id="4">&lt;code&gt;</bpt>yandex.st<ept id="4">&lt;/code&gt;</ept>. Физически <bpt id="5">&lt;code&gt;</bpt>yandex.st<ept id="5">&lt;/code&gt;</ept> и <bpt id="6">&lt;code&gt;</bpt>yastatic.net<ept id="6">&lt;/code&gt;</ept> находятся на<ph id="7">&lt;br /&gt;</ph> одних и тех же серверах. Различие только в DNS-записях.</source>
</trans-unit>
      <trans-unit id="tu211" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/277</source>
</trans-unit>
      <trans-unit id="tu210" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен базовый BEMHTML-шаблон для команды <bpt id="1">&lt;code&gt;</bpt>bem create<ept id="1">&lt;/code&gt;</ept> технологии <bpt id="2">&lt;code&gt;</bpt>bemhtml<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/277" [#$tu211]&gt;</bpt>#277<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu213" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://travis-ci.com</source>
</trans-unit>
      <trans-unit id="tu214" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/455</source>
</trans-unit>
      <trans-unit id="tu212" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Прекращен автоматический запуск тестов под Node.js 0.8 в <bpt id="1">&lt;a href="http://travis-ci.com" [#$tu213]&gt;</bpt>Travis CI<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/455" [#$tu214]&gt;</bpt>#455<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu216" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://blog.travis-ci.com/2014-03-20-build-status-badges-support-svg/</source>
</trans-unit>
      <trans-unit id="tu215" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Иконка статуса автосборки Travis <bpt id="1">&lt;a href="http://blog.travis-ci.com/2014-03-20-build-status-badges-support-svg/" [#$tu216]&gt;</bpt>заменена на SVG<ept id="1">&lt;/a&gt;</ept> :)</source>
</trans-unit>
      <trans-unit id="tu217" resname="section-12-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.0.0</source>
</trans-unit>
      <trans-unit id="tu218" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Изменения, ломающие обратную совместимость</source>
</trans-unit>
      <trans-unit id="tu219" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu221" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/318</source>
</trans-unit>
      <trans-unit id="tu220" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Из <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>i-bem__dom.js<ept id="2">&lt;/code&gt;</ept> удалены все <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept> методы (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/318" [#$tu221]&gt;</bpt>#318<ept id="4">&lt;/a&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu222" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept>, используйте <bpt id="2">&lt;code&gt;</bpt>onSetMod js ''<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu223" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>extractParams<ept id="1">&lt;/code&gt;</ept>, используйте <bpt id="2">&lt;code&gt;</bpt>elemParams<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu224" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>trigger<ept id="1">&lt;/code&gt;</ept>, используйте <bpt id="2">&lt;code&gt;</bpt>emit<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu225" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept>, используйте модуль <bpt id="2">&lt;code&gt;</bpt>next-tick<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu226" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>channel<ept id="1">&lt;/code&gt;</ept>, используйте модуль <bpt id="2">&lt;code&gt;</bpt>events__channels<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu227" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu228" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept>, используйте нативный <bpt id="2">&lt;code&gt;</bpt>Function.prototype.bind<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu229" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Из <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> убраны события <bpt id="2">&lt;code&gt;</bpt>init<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>destruct<ept id="3">&lt;/code&gt;</ept>. Вместо них следует использовать события об изменении модификатора<ph id="4">&lt;br /&gt;</ph> (см. «Крупные изменения»).</source>
</trans-unit>
      <trans-unit id="tu231" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://github.com/bem/es5-shims</source>
</trans-unit>
      <trans-unit id="tu232" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/230</source>
</trans-unit>
      <trans-unit id="tu230" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>ecma<ept id="1">&lt;/code&gt;</ept> перенесен <bpt id="2">&lt;a href="http://github.com/bem/es5-shims" [#$tu231]&gt;</bpt>в отдельный репозиторий<ept id="2">&lt;/a&gt;</ept>; ES5-shims следует использовать<ph id="3">&lt;br /&gt;</ph> для IE &lt; 9 (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/230" [#$tu232]&gt;</bpt>#230<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu234" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/350</source>
</trans-unit>
      <trans-unit id="tu235" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/vow/blob/0.4.1/CHANGELOG.md</source>
</trans-unit>
      <trans-unit id="tu233" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> обновлен до мажорной версии 0.4.1 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/350" [#$tu234]&gt;</bpt>#350<ept id="2">&lt;/a&gt;</ept>).<ph id="3">&lt;br /&gt;</ph> См. <bpt id="4">&lt;a href="https://github.com/dfilatov/vow/blob/0.4.1/CHANGELOG.md" [#$tu235]&gt;</bpt>изменения в Vow<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu236" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu237" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> добавлена поддержка </source>
</trans-unit>
      <trans-unit id="tu238" xml:space="preserve">
<source xml:lang="ru">vow at 0 dot 4</source>
</trans-unit>
      <trans-unit id="tu240" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/385</source>
</trans-unit>
      <trans-unit id="tu239" xml:space="preserve">
<source xml:lang="ru"> (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/385" [#$tu240]&gt;</bpt>#385<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu241" resname="--7-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu243" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu244" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/382</source>
</trans-unit>
      <trans-unit id="tu242" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность декларировать BEMDOM-блоки как модули <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu243]&gt;</bpt>ym<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/382" [#$tu244]&gt;</bpt>#382<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu246" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/357</source>
</trans-unit>
      <trans-unit id="tu245" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> добавлены события об изменении модификатора (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/357" [#$tu246]&gt;</bpt>#357<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu248" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/419</source>
</trans-unit>
      <trans-unit id="tu249" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/420</source>
</trans-unit>
      <trans-unit id="tu247" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена поддержка использования строковых значений в качестве аргумента в методах <bpt id="1">&lt;code&gt;</bpt>BEMDOM.init<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/419" [#$tu248]&gt;</bpt>#419<ept id="2">&lt;/a&gt;</ept>)<ph id="3">&lt;br /&gt;</ph> и <bpt id="4">&lt;code&gt;</bpt>BEMDOM.update<ept id="4">&lt;/code&gt;</ept> (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/420" [#$tu249]&gt;</bpt>#420<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu251" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/410</source>
</trans-unit>
      <trans-unit id="tu250" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Методы <bpt id="1">&lt;code&gt;</bpt>i-bem__dom.js<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>replace<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>append<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>prepend<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>before<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>after<ept id="6">&lt;/code&gt;</ept> теперь возвращают новый контекст,<ph id="7">&lt;br /&gt;</ph> а <bpt id="8">&lt;code&gt;</bpt>update<ept id="8">&lt;/code&gt;</ept> – изменённый (<bpt id="9">&lt;a href="https://github.com/bem/bem-core/issues/410" [#$tu251]&gt;</bpt>#410<ept id="9">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu253" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/358</source>
</trans-unit>
      <trans-unit id="tu252" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>loader<ept id="1">&lt;/code&gt;</ept> добавлен модификатор <bpt id="2">&lt;code&gt;</bpt>_type_bundle<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/358" [#$tu253]&gt;</bpt>#358<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu255" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/356</source>
</trans-unit>
      <trans-unit id="tu254" restype="x-li" xml:space="preserve">
<source xml:lang="ru">jQuery обновлен до версии 2.1.0. Для IE &lt; 9 — до версии 1.11.0 (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/356" [#$tu255]&gt;</bpt>#356<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu256" resname="------7-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu258" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/401</source>
</trans-unit>
      <trans-unit id="tu257" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Базовые шаблоны в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> используют конкатенацию строк вместо наполнения внутреннего буфера (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/401" [#$tu258]&gt;</bpt>#401<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu260" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/349</source>
</trans-unit>
      <trans-unit id="tu259" restype="x-li" xml:space="preserve">
<source xml:lang="ru">jQuery больше не удаляет себя из глобальной области видимости, если присутствует на странице (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/349" [#$tu260]&gt;</bpt>#349<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu262" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/393</source>
</trans-unit>
      <trans-unit id="tu261" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointerclick.js<ept id="1">&lt;/code&gt;</ept> перемещен с уровня <bpt id="2">&lt;code&gt;</bpt>touch.blocks<ept id="2">&lt;/code&gt;</ept> на уровень <bpt id="3">&lt;code&gt;</bpt>common.blocks<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/393" [#$tu262]&gt;</bpt>#393<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu264" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/352</source>
</trans-unit>
      <trans-unit id="tu263" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модификаторы <bpt id="1">&lt;code&gt;</bpt>i-bem_elem-instances_yes<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_elem-instances_yes<ept id="2">&lt;/code&gt;</ept> приведены к булевому стилю (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/352" [#$tu264]&gt;</bpt>#352<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu266" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/417</source>
</trans-unit>
      <trans-unit id="tu265" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в шаблоне блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, возникающая при использовании development-режима BEMHTML (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/417" [#$tu266]&gt;</bpt>#417<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu268" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/404</source>
</trans-unit>
      <trans-unit id="tu267" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для поддержки Android 2.3 внутри <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> отказались от использований <bpt id="2">&lt;code&gt;</bpt>Function.prototype.bind<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/404" [#$tu268]&gt;</bpt>#404<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu270" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/392</source>
</trans-unit>
      <trans-unit id="tu269" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены ошибки в модуле технологии <bpt id="1">&lt;code&gt;</bpt>browser-js+bemhtml<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/392" [#$tu270]&gt;</bpt>#392<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu272" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules/releases</source>
</trans-unit>
      <trans-unit id="tu273" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/414</source>
</trans-unit>
      <trans-unit id="tu271" restype="x-li" xml:space="preserve">
<source xml:lang="ru">NPM-модуль <bpt id="1">&lt;code&gt;</bpt>ym<ept id="1">&lt;/code&gt;</ept> обновлен до версии <bpt id="2">&lt;a href="https://github.com/ymaps/modules/releases" [#$tu272]&gt;</bpt>0.0.15<ept id="2">&lt;/a&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/414" [#$tu273]&gt;</bpt>#414<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu274" resname="section-13-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.2.0</source>
</trans-unit>
      <trans-unit id="tu275" resname="--8-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu277" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/370</source>
</trans-unit>
      <trans-unit id="tu276" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEM-блоки инициируют событие <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> в процессе удаления (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/370" [#$tu277]&gt;</bpt>#370<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu279" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/354</source>
</trans-unit>
      <trans-unit id="tu278" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены полифилы для <bpt id="1">&lt;code&gt;</bpt>pointerevents<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/354" [#$tu279]&gt;</bpt>#354<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu280" resname="------8-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu282" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/335</source>
</trans-unit>
      <trans-unit id="tu281" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JSDoc блоков исправлен в соответствии с поддержкой <bpt id="1">&lt;a href="github.com/bem/bem-jsd"&gt;</bpt>bem-jsd<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/335" [#$tu282]&gt;</bpt>#335<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu284" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/355</source>
</trans-unit>
      <trans-unit id="tu283" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Референс на BEMHTML обновлен для соответствия JavaScript-синтаксису шаблонизатора (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/pull/355" [#$tu284]&gt;</bpt>#355<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu286" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://bower.io</source>
</trans-unit>
      <trans-unit id="tu287" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/367</source>
</trans-unit>
      <trans-unit id="tu285" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Переход на менеджер зависимостей <bpt id="1">&lt;a href="http://bower.io" [#$tu286]&gt;</bpt>bower<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/367" [#$tu287]&gt;</bpt>#367<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu288" resname="section-14-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.1.0</source>
</trans-unit>
      <trans-unit id="tu289" resname="--9-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu291" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/319</source>
</trans-unit>
      <trans-unit id="tu290" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для современных браузеров <bpt id="1">&lt;code&gt;</bpt>jquery__config<ept id="1">&lt;/code&gt;</ept> подключает jQuery 2.x (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/319" [#$tu291]&gt;</bpt>#319<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu293" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/290</source>
</trans-unit>
      <trans-unit id="tu292" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность использовать произвольный BEMJSON в качестве значения атрибутов в BEMHTML (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/290" [#$tu293]&gt;</bpt>#290<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu295" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/292</source>
</trans-unit>
      <trans-unit id="tu294" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены зависимости в <bpt id="1">&lt;code&gt;</bpt>i-bem__collection<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/292" [#$tu295]&gt;</bpt>#292<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu297" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/306</source>
</trans-unit>
      <trans-unit id="tu296" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Удалены CSS-стили блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> из уровня <bpt id="2">&lt;code&gt;</bpt>touch.blocks<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/306" [#$tu297]&gt;</bpt>#306<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu299" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/309</source>
</trans-unit>
      <trans-unit id="tu298" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в BEMHTML-шаблоне блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, приводящая к зацикливанию шаблонизатора<ph id="2">&lt;br /&gt;</ph> в production-режиме (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/309" [#$tu299]&gt;</bpt>#309<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu301" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/324</source>
</trans-unit>
      <trans-unit id="tu300" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена возможная ошибка в <bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept>, возникающая при вставке скрипта в DOM в IE&lt;9 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/324" [#$tu301]&gt;</bpt>#324<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu303" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/332</source>
</trans-unit>
      <trans-unit id="tu302" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в инициализации плагина <bpt id="1">&lt;code&gt;</bpt>FastClick<ept id="1">&lt;/code&gt;</ept> в модуле <bpt id="2">&lt;code&gt;</bpt>jquery__event_type_pointerclick<ept id="2">&lt;/code&gt;</ept><ph id="3">&lt;br /&gt;</ph> на уровне <bpt id="4">&lt;code&gt;</bpt>touch.blocks<ept id="4">&lt;/code&gt;</ept> (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/332" [#$tu303]&gt;</bpt>#332<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu305" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/274</source>
</trans-unit>
      <trans-unit id="tu304" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в технологии <bpt id="1">&lt;code&gt;</bpt>node.js<ept id="1">&lt;/code&gt;</ept> в Windows (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/274" [#$tu305]&gt;</bpt>#274<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu307" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/340</source>
</trans-unit>
      <trans-unit id="tu306" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>onElemSetMod<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_elem-instances<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/340" [#$tu307]&gt;</bpt>#340<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu309" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu310" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/329</source>
</trans-unit>
      <trans-unit id="tu308" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В технологии <bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept> используется <bpt id="2">&lt;a href="https://github.com/bem/bem-xjst" [#$tu309]&gt;</bpt>bem-xjst<ept id="2">&lt;/a&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/329" [#$tu310]&gt;</bpt>#329<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu311" resname="------9-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu313" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu314" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/326</source>
</trans-unit>
      <trans-unit id="tu312" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu313]&gt;</bpt>ym<ept id="1">&lt;/a&gt;</ept> обновлен до версии 0.0.12 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/326" [#$tu314]&gt;</bpt>#326<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu316" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/285</source>
</trans-unit>
      <trans-unit id="tu315" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В ядре локализации <bpt id="1">&lt;code&gt;</bpt>i-bem__i18n<ept id="1">&lt;/code&gt;</ept> отключен вывод сообщений о неизвестных ключах, если не включен<ph id="2">&lt;br /&gt;</ph> debug-режим (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/285" [#$tu316]&gt;</bpt>#285<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu317" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Инфраструктура сборки тестов и примеров переведена<ph id="1">&lt;br /&gt;</ph> на <it id="2" pos="open">&lt;a href="https://github.com/narqo/bem-pr/blob/0.5.3/HISTORY.md"&gt;</it></source>
</trans-unit>
      <trans-unit id="tu318" xml:space="preserve">
<source xml:lang="ru">bem-pr at v0 dot 5 dot x</source>
</trans-unit>
      <trans-unit id="tu320" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/323</source>
</trans-unit>
      <trans-unit id="tu319" xml:space="preserve">
<source xml:lang="ru"><it id="2" pos="close">&lt;/a&gt;</it> (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/323" [#$tu320]&gt;</bpt>#323<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu322" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/296</source>
</trans-unit>
      <trans-unit id="tu321" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлен jsdoc для метода <bpt id="1">&lt;code&gt;</bpt>dropElemCache()<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/296" [#$tu322]&gt;</bpt>#296<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu323" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Доработана документация для блока <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> на русском языке.</source>
</trans-unit>
      <trans-unit id="tu325" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v1/README.ru.md#%D0%9F%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC%D1%8B%D0%B5-%D0%B1%D1%80%D0%B0%D1%83%D0%B7%D0%B5%D1%80%D1%8B</source>
</trans-unit>
      <trans-unit id="tu324" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В README проекта добавлен <bpt id="1">&lt;a href="https://github.com/bem/bem-core/blob/v1/README.ru.md#%D0%9F%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC%D1%8B%D0%B5-%D0%B1%D1%80%D0%B0%D1%83%D0%B7%D0%B5%D1%80%D1%8B" [#$tu325]&gt;</bpt>список поддерживаемых браузеров<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu326" resname="section-15-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.0.0</source>
</trans-unit>
      <trans-unit id="tu327" resname="--10-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu329" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu328" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Переход на модульную систему <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu329]&gt;</bpt>ym<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu330" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Из <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> убраны все deprecated-методы.</source>
</trans-unit>
      <trans-unit id="tu331" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> больше не зависит от jQuery. <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> продолжает зависеть от jQuery.</source>
</trans-unit>
      <trans-unit id="tu333" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://gist.github.com/veged/6150760</source>
</trans-unit>
      <trans-unit id="tu332" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML-шаблоны можно писать с использованием <bpt id="1">&lt;a href="https://gist.github.com/veged/6150760" [#$tu333]&gt;</bpt>JS-синтаксиса<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu335" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu334" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Новая технология <bpt id="1">&lt;code&gt;</bpt>bemtree<ept id="1">&lt;/code&gt;</ept> (на базе <bpt id="2">&lt;a href="https://github.com/bem/bem-xjst" [#$tu335]&gt;</bpt>bem-xjst<ept id="2">&lt;/a&gt;</ept>) для описания процесса<ph id="3">&lt;br /&gt;</ph> динамического построения БЭМ-дерева.</source>
</trans-unit>
      <trans-unit id="tu336" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Новая технология <bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept> для описания JS-реализации модулей, не зависящей от конкретного JavaScript движка.</source>
</trans-unit>
      <trans-unit id="tu337" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Новые технологии <bpt id="1">&lt;code&gt;</bpt>browser.js<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>node.js<ept id="2">&lt;/code&gt;</ept> для описания JS-реализаций модулей (блоков) в соответствующих движках.<ph id="3">&lt;br /&gt;</ph> Для совместимости с существующим кодом считаем, что файлы с расширением <bpt id="4">&lt;code&gt;</bpt>.js<ept id="4">&lt;/code&gt;</ept> содержат реализацию блоков<ph id="5">&lt;br /&gt;</ph> в технологии <bpt id="6">&lt;code&gt;</bpt>browser.js<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu338" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Система модульного тестирования и примеров для блоков в библиотеке.</source>
</trans-unit>
      <trans-unit id="tu339" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Появились полифилы (<bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointer<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>jquery__event_type_pointerclick<ept id="2">&lt;/code&gt;</ept> как jQuery-плагины),<ph id="3">&lt;br /&gt;</ph> позволяющие использовать универсальные события для десктопных и тач-интерфейсов.</source>
</trans-unit>
      <trans-unit id="tu340" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Плагин для jQuery, позволяющий навешивать обработчик события на нажатие левой кнопки мыши, становится модулем <bpt id="1">&lt;code&gt;</bpt>jquery__pointerclick<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu341" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> и BEMHTML добавлена поддержка простых модификаторов (модификаторов без значений).</source>
</trans-unit>
      <trans-unit id="tu342" resname="------10-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu343" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Все блоки-модули, кроме <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, избавились от префиксов.</source>
</trans-unit>
      <trans-unit id="tu345" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v1/common.bundles/index/blocks/b-square/b-square.js</source>
</trans-unit>
      <trans-unit id="tu344" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept>. Все BEM.DOM-блоки должны теперь доопределять<ph id="3">&lt;br /&gt;</ph> этот модуль (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/blob/v1/common.bundles/index/blocks/b-square/b-square.js" [#$tu345]&gt;</bpt>пример<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu346" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод для декларации блоков (<bpt id="1">&lt;code&gt;</bpt>.decl()<ept id="1">&lt;/code&gt;</ept>) больше не принимает первым параметром объект с полем <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph> Теперь обязательная форма записи с полем <bpt id="4">&lt;code&gt;</bpt>block<ept id="4">&lt;/code&gt;</ept>: <bpt id="5">&lt;code&gt;</bpt>BEM.decl({ block: 'b1', modName: 'm', modVal: 'v' }, ...)<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu347" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept> у блоков появился метод <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>, который проверят существование блока в момент исполнения колбэка. <bpt id="3">&lt;code&gt;</bpt>BEM.afterCurrentEvent<ept id="3">&lt;/code&gt;</ept> теперь <bpt id="4">&lt;strong&gt;</bpt>deprecated<ept id="4">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu348" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо <bpt id="1">&lt;code&gt;</bpt>BEM.channel<ept id="1">&lt;/code&gt;</ept> появился отдельный модуль <bpt id="2">&lt;code&gt;</bpt>channels<ept id="2">&lt;/code&gt;</ept>. <bpt id="3">&lt;code&gt;</bpt>BEM.channel<ept id="3">&lt;/code&gt;</ept> теперь <bpt id="4">&lt;strong&gt;</bpt>deprecated<ept id="4">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu349" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept> помечен как <bpt id="2">&lt;strong&gt;</bpt>deprecated<ept id="2">&lt;/strong&gt;</ept>. Используйте нативный <bpt id="3">&lt;code&gt;</bpt>bind<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu350" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>del<ept id="1">&lt;/code&gt;</ept> удален из блока <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu351" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>getWindowSize<ept id="1">&lt;/code&gt;</ept> удален из блока <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept>. Используйте <bpt id="3">&lt;code&gt;</bpt>BEMDOM.win.width()<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>BEMDOM.win.height()<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu352" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль-обертка <bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept>, предоставляющий jQuery. Модуль либо предоставляет jQuery, уже присутствующий на странице, либо сам его загружает (версию 1.10.1).</source>
</trans-unit>
      <trans-unit id="tu353" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.observable<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu354" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.inherit<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>inherit<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu355" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.identify<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>identify<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu356" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.throttle<ept id="1">&lt;/code&gt;</ept> разбивается на два модуля: <bpt id="2">&lt;code&gt;</bpt>functions__throttle<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>functions__debounce<ept id="3">&lt;/code&gt;</ept>, которые больше не зависят от jQuery.</source>
</trans-unit>
      <trans-unit id="tu357" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.decodeURI<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>$.decodeURIComponent<ept id="2">&lt;/code&gt;</ept> переезжают в модуль <bpt id="3">&lt;code&gt;</bpt>querystring__uri<ept id="3">&lt;/code&gt;</ept> и больше не зависят от jQuery.</source>
</trans-unit>
      <trans-unit id="tu358" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.cookie<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>cookie<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu359" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо <bpt id="1">&lt;code&gt;</bpt>$.browser<ept id="1">&lt;/code&gt;</ept> появился модуль <bpt id="2">&lt;code&gt;</bpt>ua<ept id="2">&lt;/code&gt;</ept> с аналогичным интерфейсом.</source>
</trans-unit>
      <trans-unit id="tu360" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-system<ept id="1">&lt;/code&gt;</ept> разбит на 2 модуля: <bpt id="2">&lt;code&gt;</bpt>idle<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>tick<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu361" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо события <bpt id="1">&lt;code&gt;</bpt>leftclick<ept id="1">&lt;/code&gt;</ept> следует использовать <bpt id="2">&lt;code&gt;</bpt>pointerclick<ept id="2">&lt;/code&gt;</ept> (предоставляемый полифилом <bpt id="3">&lt;code&gt;</bpt>jquery__event_type_pointerclick<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu362" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Триггеры на установку модификаторов теперь разделены на две группы: до установки модификатора (<bpt id="1">&lt;code&gt;</bpt>beforeSetMod<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>beforeElemSetMod<ept id="2">&lt;/code&gt;</ept>) и после (<bpt id="3">&lt;code&gt;</bpt>onSetMod<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>onElemSetMod<ept id="4">&lt;/code&gt;</ept>). Отмена установки модификатора теперь возможна только из триггеров первой группы.</source>
</trans-unit>
      <trans-unit id="tu363" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Использовать конструкцию <bpt id="1">&lt;code&gt;</bpt>{ onSetMod : { js : function() { ... } } }<ept id="1">&lt;/code&gt;</ept> в качестве конструктора теперь <bpt id="2">&lt;strong&gt;</bpt>deprecated<ept id="2">&lt;/strong&gt;</ept>, необходимо использовать <bpt id="3">&lt;code&gt;</bpt>onSetMod: { js : { inited : ... } } }<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu364" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> появился зеркальный метод<ph id="3">&lt;br /&gt;</ph> для <bpt id="4">&lt;code&gt;</bpt>onSetMod: { js : { inited : ... } } }<ept id="4">&lt;/code&gt;</ept> — <bpt id="5">&lt;code&gt;</bpt>{ onSetMod : { js : { '' : ... } } }<ept id="5">&lt;/code&gt;</ept>.<ph id="6">&lt;br /&gt;</ph> Метод <bpt id="7">&lt;code&gt;</bpt>destruct<ept id="7">&lt;/code&gt;</ept> теперь <bpt id="8">&lt;strong&gt;</bpt>deprecated<ept id="8">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu365" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>exractParams<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> теперь <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept>, для доступа к параметрам элементов нужно использовать метод <bpt id="4">&lt;code&gt;</bpt>elemParams<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu366" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>trigger<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> теперь <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept>, нужно использовать <bpt id="4">&lt;code&gt;</bpt>emit<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu367" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>onFirst<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> теперь <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept>, нужно использовать <bpt id="4">&lt;code&gt;</bpt>once<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu368" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Удалено <bpt id="1">&lt;strong&gt;</bpt>deprecated<ept id="1">&lt;/strong&gt;</ept> поле <bpt id="2">&lt;code&gt;</bpt>e.block<ept id="2">&lt;/code&gt;</ept>, представляющее блок-источник события для BEM-событий. Вместо него следует использовать поле <bpt id="3">&lt;code&gt;</bpt>e.target<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu369" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для доступа к DOM-элементу блока в обработчике DOM-событий теперь нужно использовать поле <bpt id="1">&lt;code&gt;</bpt>currentTarget<ept id="1">&lt;/code&gt;</ept>, предоставляемое jQuery. Вместо <bpt id="2">&lt;code&gt;</bpt>e.data.domElem<ept id="2">&lt;/code&gt;</ept>нужно писать <bpt id="3">&lt;code&gt;</bpt>$(e.currentTarget)<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu370" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В методе <bpt id="1">&lt;code&gt;</bpt>findElem<ept id="1">&lt;/code&gt;</ept> добавлен параметр, позволяющий находить элемента блока с учетом вложенных блоков.</source>
</trans-unit>
      <trans-unit id="tu371" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность указывать конкретную функцию для отписки от событий в методах <bpt id="1">&lt;code&gt;</bpt>unbindFrom*<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu372" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>objects<ept id="1">&lt;/code&gt;</ept> для работы с JS-объектами (содержит методы <bpt id="2">&lt;code&gt;</bpt>extend<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>isEmpty<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>each<ept id="4">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu373" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> для работы с JS-функциями (содержит методы <bpt id="2">&lt;code&gt;</bpt>isFunction<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>noop<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu374" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>dom<ept id="1">&lt;/code&gt;</ept> для хелперов при работе с DOM.</source>
</trans-unit>
      <trans-unit id="tu375" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>querystring<ept id="1">&lt;/code&gt;</ept> для работы с урлами.</source>
</trans-unit>
      <trans-unit id="tu376" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>loader_type_js<ept id="1">&lt;/code&gt;</ept> для загрузки JS.</source>
</trans-unit>
      <trans-unit id="tu377" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> для работы с промисами.</source>
</trans-unit>
      <trans-unit id="tu378" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept> для полифила <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>setImmediate<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>setTimeout(0, ...<ept id="4">&lt;/code&gt;</ept> и т.п..</source>
</trans-unit>
      <trans-unit id="tu379" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>strings__escape<ept id="1">&lt;/code&gt;</ept>, содержащий методы для эскейпинга XML, HTML и атрибутов.</source>
</trans-unit>
      <trans-unit id="tu380" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> теперь поддерживает миксины.</source>
</trans-unit>
      <trans-unit id="tu381" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуле <bpt id="1">&lt;code&gt;</bpt>functions__throttle<ept id="1">&lt;/code&gt;</ept> добавлен параметр <bpt id="2">&lt;code&gt;</bpt>invokeAsap<ept id="2">&lt;/code&gt;</ept>, позволяющий отложить первое исполнение.</source>
</trans-unit>
    </body>
  </file>
  <file original="README.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu2" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://travis-ci.org/bem/bem-core</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">Build Status</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/releases</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">GitHub Release</source>
</trans-unit>
      <trans-unit id="tu1" resname="bem-core-library-build-status-github-release-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">bem-core library <bpt id="1">&lt;a href="https://travis-ci.org/bem/bem-core" [#$tu2]&gt;</bpt><ph id="2">&lt;img src="https://travis-ci.org/bem/bem-core.svg?branch=v2" [#$tu3] /&gt;</ph><ept id="1">&lt;/a&gt;</ept> <bpt id="3">&lt;a href="https://github.com/bem/bem-core/releases" [#$tu4]&gt;</bpt><ph id="4">&lt;img src="https://img.shields.io/github/release/bem/bem-core.svg" [#$tu5] /&gt;</ph><ept id="3">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu7" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://en.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">This README is also available <bpt id="1">&lt;a href="https://en.bem.info/libs/bem-core/" [#$tu7]&gt;</bpt>in English<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Что это?</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Базовая библиотека блоков для разработки веб-интерфейсов.<ph id="1">&lt;br /&gt;</ph>Содержит только необходимый минимум для разработки клиентского JS и HTML-шаблонов.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Использование</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/project-stub</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Наиболее простым способом начать проект с использованием <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> является<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://github.com/bem/project-stub" [#$tu12]&gt;</bpt>project-stub<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вы также можете добавить библиотеку к себе в проект любым известным вам способом.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Состав</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Уровни</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>common.blocks<ept id="1">&lt;/code&gt;</ept> — предназначен для любых устройств и браузеров</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>desktop.blocks<ept id="1">&lt;/code&gt;</ept> — следует использовать для всех десктопных браузеров</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>touch.blocks<ept id="1">&lt;/code&gt;</ept> — реализует некоторую специфику для тач-платформ</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Блоки</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> — базовый блок с хелперами для JS и HTML</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>strings<ept id="1">&lt;/code&gt;</ept> — хелперы для JS-строк</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>objects<ept id="1">&lt;/code&gt;</ept> — хелперы для JS-объектов</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> — хелперы для JS-функций</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>events<ept id="1">&lt;/code&gt;</ept> — JS-события</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>querystring<ept id="1">&lt;/code&gt;</ept> — работа со строкой запроса</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept> — глобальный таймер</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>idle<ept id="1">&lt;/code&gt;</ept> — IDLE-событие</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept> — полифил для <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>/<bpt id="3">&lt;code&gt;</bpt>setTimeout(0, ...)<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> — ООП-хелперы</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> — jQuery</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>clearfix<ept id="1">&lt;/code&gt;</ept> — CSS-трюк clearfix</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>identify<ept id="1">&lt;/code&gt;</ept> — идентификация JS-объектов</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>cookie<ept id="1">&lt;/code&gt;</ept> — хелперы для работы с браузерными куками</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> — реализация Promises/A+</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>dom<ept id="1">&lt;/code&gt;</ept> — хелперы для работы с DOM</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>loader<ept id="1">&lt;/code&gt;</ept> — загрузчик для JS-файлов</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept> — определение возможностей браузера</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>keyboard<ept id="1">&lt;/code&gt;</ept> — хелперы для работы с клавиатурой</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> — скелет для html/head/body</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Технологии</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru">vanilla.js + browser.js</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">bemhtml</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru">bemtree</source>
</trans-unit>
      <trans-unit id="tu44" resname="api-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">API</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/tree/v2-jsdoc</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Автосгенерированная документация на JavaScript API блоков (JSDoc) можно посмотреть в отдельной ветке <bpt id="1">&lt;a href="https://github.com/bem/bem-core/tree/v2-jsdoc" [#$tu46]&gt;</bpt>v2-jsdoc<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обратите внимание, содержимое ветки «v2-jsdoc» обновляется автоматически. Любые изменения необходимо отправлять<ph id="1">&lt;br /&gt;</ph>в код соответствующих блоков в ветке «v2», как описано в разделе «Внесение изменений» ниже.</source>
</trans-unit>
      <trans-unit id="tu48" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">История изменений</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/changelog/</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">История изменений доступна на <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/changelog/" [#$tu50]&gt;</bpt>отдельной странице<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Миграция</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/migration/</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Миграция описана на <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/migration/" [#$tu53]&gt;</bpt>отдельной странице<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Разработка</source>
</trans-unit>
      <trans-unit id="tu55" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Рабочая копия</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Получаем исходники нужной версии (например, <bpt id="1">&lt;code&gt;</bpt>v1<ept id="1">&lt;/code&gt;</ept>):<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>shell    $ git clone -b v1 git://github.com/bem/bem-core.git    $ cd bem-core<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Устанавливаем зависимости:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>shell    $ npm install<ept id="2">&lt;/code&gt;</ept><ph id="3">&lt;br /&gt;</ph> Для последующего запуска локально установленных npm-зависимостей нам потребуется<ph id="4">&lt;br /&gt;</ph> <bpt id="5">&lt;code&gt;</bpt>export PATH=./node_modules/.bin:$PATH<ept id="5">&lt;/code&gt;</ept> или любой альтернативный способ.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Устанавливаем зависимые библиотеки:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>shell    $ npm run deps<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Собираем примеры и тесты:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>shell    $ npm test<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Запускаем разработческий сервер:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>$ npm start<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Внесение изменений</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/new</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/new" [#$tu68]&gt;</bpt>Создать issue<ept id="1">&lt;/a&gt;</ept> с описанием сути изменений.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Определить в какую версию необходимо внести изменения.</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Сделать feature-branch с указанием номера issue и версии (<bpt id="1">&lt;code&gt;</bpt>issues/&lt;номер_issue&gt;@v&lt;номер_версии&gt;<ept id="1">&lt;/code&gt;</ept>) на основе ветки версии.<ph id="2">&lt;br /&gt;</ph> Например, для issue с номером 42 и версией 1: <bpt id="3">&lt;code&gt;</bpt>git checkout -b issues/42@v1 v1<ept id="3">&lt;/code&gt;</ept>. Если изменения нужно внести в несколько версий,<ph id="4">&lt;br /&gt;</ph> то для каждой из версий создаётся отдельная ветка.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Сделать изменения, закоммитить и сделать push. Если это необходимо, то нужно сделать rebase от базовой ветки версии.</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Создать pull-request на основе созданной ветки (или несколько pull-request-ов для случая изменений в нескольких версиях).</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Любым способом связать pull-request и issue (например, c помощью комментария).</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Ждать закрытия pull-request и issue ;-)</source>
</trans-unit>
      <trans-unit id="tu75" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модульное тестирование</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сборка дефолтного тестового бандла для <bpt id="1">&lt;code&gt;</bpt>functions__debounce<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ magic make desktop.specs/functions__debounce<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">После сборки тестового бандла вы увидите результаты выполнения тестов в консоли.<ph id="1">&lt;br /&gt;</ph>Их также можно посмотреть в браузере, открыв <bpt id="2">&lt;code&gt;</bpt>desktop.specs/functions__debounce/spec-js+browser-js+bemhtml/spec-js+browser-js+bemhtml.html<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По аналогии можно запустить тесты для других БЭМ-сущностей, имеющих реализацию в технологии <bpt id="1">&lt;code&gt;</bpt>spec.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu80" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Покрытие кода тестами</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы собрать статистику покрытия кода тестами, необходимо добавить переменную окружения <bpt id="1">&lt;code&gt;</bpt>ISTANBUL_COVERAGE=yes<ept id="1">&lt;/code&gt;</ept><ph id="2">&lt;br /&gt;</ph>в сборке тестового бандла:</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ ISTANBUL_COVERAGE=yes magic make desktop.specs &amp;&amp; istanbul report html<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сбор статистики покрытия тестами так же работает для запуска тестов конкретной БЭМ-сущности.<ph id="1">&lt;br /&gt;</ph>Пример для <bpt id="2">&lt;code&gt;</bpt>functions__debounce<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ ISTANBUL_COVERAGE=yes magic make desktop.specs/functions__debounce &amp;&amp; istanbul report html<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">После завершения выполнения тестов, можно посмотреть отчет о покрытии кода тестами, открыв в браузере страницу<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>coverage/index.html<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://coveralls.io/r/bem/bem-core</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://coveralls.io</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Полный отчет и статистику покрытия кода библиотеки тестами можно посмотреть на <bpt id="1">&lt;a href="https://coveralls.io/r/bem/bem-core" [#$tu87]&gt;</bpt>странице профиля bem-core<ept id="1">&lt;/a&gt;</ept> в проекте <bpt id="2">&lt;a href="https://coveralls.io" [#$tu88]&gt;</bpt>Coveralls<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/enb-bem/enb-bem-specs/</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/enb-bem-specs/</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для сборки и запуска тестов используется библиотека <bpt id="1">&lt;a href="https://github.com/enb-bem/enb-bem-specs/" [#$tu90]&gt;</bpt>enb-bem-specs<ept id="1">&lt;/a&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>См. <bpt id="3">&lt;a href="https://ru.bem.info/tools/bem/enb-bem-specs/" [#$tu91]&gt;</bpt>подробную информацию<ept id="3">&lt;/a&gt;</ept> про инфраструктуру тестирования.</source>
</trans-unit>
      <trans-unit id="tu92" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поддерживаемые браузеры</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://company.yandex.ru</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мы поддерживаем браузеры на основе статистики, получаемой на сервисах <bpt id="1">&lt;a href="https://company.yandex.ru" [#$tu94]&gt;</bpt>Яндекса<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Браузеры с долей более 2% пользователей попадают в полную совместимость, с более 0.5% — в частичную,<ph id="1">&lt;br /&gt;</ph>что означает, что данные будут доступны, но возможна деградация. В браузерах с долей менее 0.5% мы прекращаем<ph id="2">&lt;br /&gt;</ph>тестирование.</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Десктопы</source>
</trans-unit>
      <trans-unit id="tu97" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Полная совместимость</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Google Chrome 29+</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Firefox 24+</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Yandex 1.7+</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.16</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-li" xml:space="preserve">
<source xml:lang="ru">MSIE 10.0</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-li" xml:space="preserve">
<source xml:lang="ru">MSIE 9.0</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-li" xml:space="preserve">
<source xml:lang="ru">MSIE 8.0</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.15</source>
</trans-unit>
      <trans-unit id="tu106" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Частичная совместимость</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 17.0</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 16.0</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.14</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.2</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Firefox 23</source>
</trans-unit>
      <trans-unit id="tu112" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Тач-браузеры</source>
</trans-unit>
      <trans-unit id="tu113" resname="--1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Полная совместимость</source>
</trans-unit>
      <trans-unit id="tu114" restype="x-li" xml:space="preserve">
<source xml:lang="ru">iOS 6+</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Android 2.3+</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera Mobile 12+</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Windows Phone 7+</source>
</trans-unit>
      <trans-unit id="tu118" resname="--1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Частичная совместимость</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-li" xml:space="preserve">
<source xml:lang="ru">iOS 5</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Android 2.2</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Лицензия</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">© 2012 YANDEX LLC. Код лицензирован <bpt id="1">&lt;a href="LICENSE.txt"&gt;</bpt>Mozilla Public License 2.0<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/bem-core/bem-core.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu2" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://travis-ci.org/bem/bem-core</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">Build Status</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/releases</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">GitHub Release</source>
</trans-unit>
      <trans-unit id="tu1" resname="bem-core-library-build-status-github-release-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">bem-core library <bpt id="1">&lt;a href="https://travis-ci.org/bem/bem-core" [#$tu2]&gt;</bpt><ph id="2">&lt;img src="https://travis-ci.org/bem/bem-core.svg?branch=v2" [#$tu3] /&gt;</ph><ept id="1">&lt;/a&gt;</ept> <bpt id="3">&lt;a href="https://github.com/bem/bem-core/releases" [#$tu4]&gt;</bpt><ph id="4">&lt;img src="https://img.shields.io/github/release/bem/bem-core.svg" [#$tu5] /&gt;</ph><ept id="3">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu7" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://en.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">This README is also available <bpt id="1">&lt;a href="https://en.bem.info/libs/bem-core/" [#$tu7]&gt;</bpt>in English<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Что это?</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Базовая библиотека блоков для разработки веб-интерфейсов.<ph id="1">&lt;br /&gt;</ph>Содержит только необходимый минимум для разработки клиентского JS и HTML-шаблонов.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Использование</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/project-stub</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Наиболее простым способом начать проект с использованием <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> является<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://github.com/bem/project-stub" [#$tu12]&gt;</bpt>project-stub<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вы также можете добавить библиотеку к себе в проект любым известным вам способом.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Состав</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Уровни</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>common.blocks<ept id="1">&lt;/code&gt;</ept> — предназначен для любых устройств и браузеров</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>desktop.blocks<ept id="1">&lt;/code&gt;</ept> — следует использовать для всех десктопных браузеров</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>touch.blocks<ept id="1">&lt;/code&gt;</ept> — реализует некоторую специфику для тач-платформ</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Блоки</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> — базовый блок с хелперами для JS и HTML</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>strings<ept id="1">&lt;/code&gt;</ept> — хелперы для JS-строк</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>objects<ept id="1">&lt;/code&gt;</ept> — хелперы для JS-объектов</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> — хелперы для JS-функций</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>events<ept id="1">&lt;/code&gt;</ept> — JS-события</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>querystring<ept id="1">&lt;/code&gt;</ept> — работа со строкой запроса</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept> — глобальный таймер</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>idle<ept id="1">&lt;/code&gt;</ept> — IDLE-событие</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept> — полифил для <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>/<bpt id="3">&lt;code&gt;</bpt>setTimeout(0, ...)<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> — ООП-хелперы</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> — jQuery</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>clearfix<ept id="1">&lt;/code&gt;</ept> — CSS-трюк clearfix</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>identify<ept id="1">&lt;/code&gt;</ept> — идентификация JS-объектов</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>cookie<ept id="1">&lt;/code&gt;</ept> — хелперы для работы с браузерными куками</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> — реализация Promises/A+</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>dom<ept id="1">&lt;/code&gt;</ept> — хелперы для работы с DOM</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>loader<ept id="1">&lt;/code&gt;</ept> — загрузчик для JS-файлов</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept> — определение возможностей браузера</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>keyboard<ept id="1">&lt;/code&gt;</ept> — хелперы для работы с клавиатурой</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> — скелет для html/head/body</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Технологии</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru">vanilla.js + browser.js</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">bemhtml</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru">bemtree</source>
</trans-unit>
      <trans-unit id="tu44" resname="api-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">API</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/tree/v2-jsdoc</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Автосгенерированная документация на JavaScript API блоков (JSDoc) можно посмотреть в отдельной ветке <bpt id="1">&lt;a href="https://github.com/bem/bem-core/tree/v2-jsdoc" [#$tu46]&gt;</bpt>v2-jsdoc<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обратите внимание, содержимое ветки «v2-jsdoc» обновляется автоматически. Любые изменения необходимо отправлять<ph id="1">&lt;br /&gt;</ph>в код соответствующих блоков в ветке «v2», как описано в разделе «Внесение изменений» ниже.</source>
</trans-unit>
      <trans-unit id="tu48" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">История изменений</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/changelog/</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">История изменений доступна на <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/changelog/" [#$tu50]&gt;</bpt>отдельной странице<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Миграция</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/migration/</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Миграция описана на <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/migration/" [#$tu53]&gt;</bpt>отдельной странице<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Разработка</source>
</trans-unit>
      <trans-unit id="tu55" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Рабочая копия</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Получаем исходники нужной версии (например, <bpt id="1">&lt;code&gt;</bpt>v1<ept id="1">&lt;/code&gt;</ept>):<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>shell    $ git clone -b v1 git://github.com/bem/bem-core.git    $ cd bem-core<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Устанавливаем зависимости:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>shell    $ npm install<ept id="2">&lt;/code&gt;</ept><ph id="3">&lt;br /&gt;</ph> Для последующего запуска локально установленных npm-зависимостей нам потребуется<ph id="4">&lt;br /&gt;</ph> <bpt id="5">&lt;code&gt;</bpt>export PATH=./node_modules/.bin:$PATH<ept id="5">&lt;/code&gt;</ept> или любой альтернативный способ.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Устанавливаем зависимые библиотеки:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>shell    $ npm run deps<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Собираем примеры и тесты:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>shell    $ npm test<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Запускаем разработческий сервер:<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code&gt;</bpt>$ npm start<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Внесение изменений</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/new</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/new" [#$tu68]&gt;</bpt>Создать issue<ept id="1">&lt;/a&gt;</ept> с описанием сути изменений.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Определить в какую версию необходимо внести изменения.</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Сделать feature-branch с указанием номера issue и версии (<bpt id="1">&lt;code&gt;</bpt>issues/&lt;номер_issue&gt;@v&lt;номер_версии&gt;<ept id="1">&lt;/code&gt;</ept>) на основе ветки версии.<ph id="2">&lt;br /&gt;</ph> Например, для issue с номером 42 и версией 1: <bpt id="3">&lt;code&gt;</bpt>git checkout -b issues/42@v1 v1<ept id="3">&lt;/code&gt;</ept>. Если изменения нужно внести в несколько версий,<ph id="4">&lt;br /&gt;</ph> то для каждой из версий создаётся отдельная ветка.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Сделать изменения, закоммитить и сделать push. Если это необходимо, то нужно сделать rebase от базовой ветки версии.</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Создать pull-request на основе созданной ветки (или несколько pull-request-ов для случая изменений в нескольких версиях).</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Любым способом связать pull-request и issue (например, c помощью комментария).</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Ждать закрытия pull-request и issue ;-)</source>
</trans-unit>
      <trans-unit id="tu75" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модульное тестирование</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сборка дефолтного тестового бандла для <bpt id="1">&lt;code&gt;</bpt>functions__debounce<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ magic make desktop.specs/functions__debounce<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">После сборки тестового бандла вы увидите результаты выполнения тестов в консоли.<ph id="1">&lt;br /&gt;</ph>Их также можно посмотреть в браузере, открыв <bpt id="2">&lt;code&gt;</bpt>desktop.specs/functions__debounce/spec-js+browser-js+bemhtml/spec-js+browser-js+bemhtml.html<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По аналогии можно запустить тесты для других БЭМ-сущностей, имеющих реализацию в технологии <bpt id="1">&lt;code&gt;</bpt>spec.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu80" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Покрытие кода тестами</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы собрать статистику покрытия кода тестами, необходимо добавить переменную окружения <bpt id="1">&lt;code&gt;</bpt>ISTANBUL_COVERAGE=yes<ept id="1">&lt;/code&gt;</ept><ph id="2">&lt;br /&gt;</ph>в сборке тестового бандла:</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ ISTANBUL_COVERAGE=yes magic make desktop.specs &amp;&amp; istanbul report html<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сбор статистики покрытия тестами так же работает для запуска тестов конкретной БЭМ-сущности.<ph id="1">&lt;br /&gt;</ph>Пример для <bpt id="2">&lt;code&gt;</bpt>functions__debounce<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ ISTANBUL_COVERAGE=yes magic make desktop.specs/functions__debounce &amp;&amp; istanbul report html<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">После завершения выполнения тестов, можно посмотреть отчет о покрытии кода тестами, открыв в браузере страницу<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>coverage/index.html<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://coveralls.io/r/bem/bem-core</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://coveralls.io</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Полный отчет и статистику покрытия кода библиотеки тестами можно посмотреть на <bpt id="1">&lt;a href="https://coveralls.io/r/bem/bem-core" [#$tu87]&gt;</bpt>странице профиля bem-core<ept id="1">&lt;/a&gt;</ept> в проекте <bpt id="2">&lt;a href="https://coveralls.io" [#$tu88]&gt;</bpt>Coveralls<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/enb-bem/enb-bem-specs/</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/enb-bem-specs/</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для сборки и запуска тестов используется библиотека <bpt id="1">&lt;a href="https://github.com/enb-bem/enb-bem-specs/" [#$tu90]&gt;</bpt>enb-bem-specs<ept id="1">&lt;/a&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>См. <bpt id="3">&lt;a href="https://ru.bem.info/tools/bem/enb-bem-specs/" [#$tu91]&gt;</bpt>подробную информацию<ept id="3">&lt;/a&gt;</ept> про инфраструктуру тестирования.</source>
</trans-unit>
      <trans-unit id="tu92" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поддерживаемые браузеры</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://company.yandex.ru</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мы поддерживаем браузеры на основе статистики, получаемой на сервисах <bpt id="1">&lt;a href="https://company.yandex.ru" [#$tu94]&gt;</bpt>Яндекса<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Браузеры с долей более 2% пользователей попадают в полную совместимость, с более 0.5% — в частичную,<ph id="1">&lt;br /&gt;</ph>что означает, что данные будут доступны, но возможна деградация. В браузерах с долей менее 0.5% мы прекращаем<ph id="2">&lt;br /&gt;</ph>тестирование.</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Десктопы</source>
</trans-unit>
      <trans-unit id="tu97" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Полная совместимость</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Google Chrome 29+</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Firefox 24+</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Yandex 1.7+</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.16</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-li" xml:space="preserve">
<source xml:lang="ru">MSIE 10.0</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-li" xml:space="preserve">
<source xml:lang="ru">MSIE 9.0</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-li" xml:space="preserve">
<source xml:lang="ru">MSIE 8.0</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.15</source>
</trans-unit>
      <trans-unit id="tu106" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Частичная совместимость</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 17.0</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 16.0</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.14</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera 12.2</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Firefox 23</source>
</trans-unit>
      <trans-unit id="tu112" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Тач-браузеры</source>
</trans-unit>
      <trans-unit id="tu113" resname="--1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Полная совместимость</source>
</trans-unit>
      <trans-unit id="tu114" restype="x-li" xml:space="preserve">
<source xml:lang="ru">iOS 6+</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Android 2.3+</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Opera Mobile 12+</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Windows Phone 7+</source>
</trans-unit>
      <trans-unit id="tu118" resname="--1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Частичная совместимость</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-li" xml:space="preserve">
<source xml:lang="ru">iOS 5</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Android 2.2</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Лицензия</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">© 2012 YANDEX LLC. Код лицензирован <bpt id="1">&lt;a href="LICENSE.txt"&gt;</bpt>Mozilla Public License 2.0<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/bemtree-reference/bemtree-reference.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="----bemtree-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Справочное руководство по шаблонизатору BEMTREE</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Введение</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Данный документ<ept id="1">&lt;/strong&gt;</ept> представляет собой справочное руководство по шаблонизатору BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В документе описаны:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">основные особенности BEMTREE, отличающие его от других шаблонизаторов;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">порядок обработки входных данных и генерации BEMJSON;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">примеры решения типовых задач средствами BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Целевая аудитория документа<ept id="1">&lt;/strong&gt;</ept> — веб-разработчики и HTML-верстальщики, использующие <bpt id="2">&lt;a href="https://ru.bem.info/method/" [#$tu10]&gt;</bpt>БЭМ-методологию<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предполагается, что читатель знаком с:</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">HTML</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JavaScript</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru">CSS</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/" [#$tu16]&gt;</bpt>BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu18]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/method/" [#$tu20]&gt;</bpt>БЭМ<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>В документе не описаны<ept id="1">&lt;/strong&gt;</ept> настройка среды сборки и процедура сборки шаблонов, процесс получения данных от бэкенда.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemtree"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" resname="--bemtree-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Особенности шаблонизатора BEMTREE</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="arch"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Архитектура шаблонизатора</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/templating-engines/bemxjst/</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemtree</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для обработки BEMTREE-шаблонов, используется модуль <bpt id="1">&lt;a href="https://ru.bem.info/tools/templating-engines/bemxjst/" [#$tu27]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept>, расширенный логикой из базового шаблона BEMTREE – <bpt id="2">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemtree" [#$tu28]&gt;</bpt>i-bem.bemtree<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Специфическая для BEMTREE логика при этом реализована на уровне базового шаблона <bpt id="1">&lt;code&gt;</bpt>i-bem.bemtree<ept id="1">&lt;/code&gt;</ept>. Базовый шаблон определяет:</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru">набор и порядок вызова стандартных мод;</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru">доступные поля контекста.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#bemx_arch</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подробнее об особенностях архитектуры BEMTREE читайте в соответствующей секции <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#bemx_arch" [#$tu33]&gt;</bpt>документа по шаблонизации данных в <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="uts"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu35" resname="-bem-xjst--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Поддержка BEM-XJST-шаблонизации</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#bemx_intro</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE – <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#bemx_intro" [#$tu37]&gt;</bpt>BEM-XJST-шаблонизатор<ept id="1">&lt;/a&gt;</ept>. Иначе говоря, BEMTREE использует <bpt id="2">&lt;strong&gt;</bpt>синтаксис-BEM-XJST<ept id="2">&lt;/strong&gt;</ept> и сохраняет все особенности BEM-XJST-шаблонизаторов, такие как:</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#bem_area</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#bem_area" [#$tu39]&gt;</bpt>привязка к БЭМ-предметной области<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#decl_templatе</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#decl_templatе" [#$tu41]&gt;</bpt>декларативные шаблоны<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#language</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#language" [#$tu43]&gt;</bpt>язык описания и исполнения шаблонов – JavaScript<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#restrictions</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#restrictions" [#$tu45]&gt;</bpt>ограничения на уровне соглашений<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="basic"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Основные понятия</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="template"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Кратко о шаблонизации</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE – шаблонизатор, рассчитанный на использование в связке с шаблонизатором BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML поэлементно преобразует входное БЭМ-дерево в выходной HTML-документ.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Структура входного БЭМ-дерева должна быть максимально ориентирована на <bpt id="1">&lt;strong&gt;</bpt>представление<ept id="1">&lt;/strong&gt;</ept> (view), чтобы при генерации HTML-дерева не требовалось изменять набор и порядок блоков и элементов.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Приведение БЭМ-дерева к такому развернутому виду и является задачей технологии BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="data"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Схемы работы с данными</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Технология BEMTREE не привязана к конкретной архитектуре взаимодействия с бэкендом.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На практике в BEMTREE-проектах обычно используются следующие подходы к работе с поставщиками данных:</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru">централизованный;</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru">работа на уровне BEMTREE-шаблонов блока.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каждый из подходов обладает рядом особенностей, которые стоит учитывать при выборе схемы работы с бэкендом.</source>
</trans-unit>
      <trans-unit id="tu61" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Централизованное получение данных</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При таком подходе взаимодействие с бэкендом осуществляет отдельный модуль – <bpt id="1">&lt;strong&gt;</bpt>контроллер<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Контроллер по запросу от браузера (или другому событию) отправляет запрос к бэкенду и сохраняет полученный ответ. Сохранение может производиться в глобальную переменную, в свойство глобального объекта или иным образом.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE-шаблон блока устанавливает соответствие между полями глобального объекта или переменной и БЭМ-сущностями в результирующем BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Таким образом, шаблон не содержит никаких сведений о том, как были получены данные. Равно как и контроллер не заботится об их дальнейшем представлении.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При таком подходе наиболее четко реализуется принцип отделения контроллера от представления данных. Это удобно для случаев, когда:</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Структура и содержимое страницы известны на момент ее формирования.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блоки не должны зависеть от схемы получения данных (например, для использования во внешних проектах, библиотеках и т.д.).</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Данные поставляются небольшим постоянным числом источников. Например, одной СУБД.</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Обратите внимание, что при централизованном подходе к работе с данными объект данных, полученный от бэкенда, должен быть полностью сформирован на момент выполнения BEMTREE-шаблона.</source>
</trans-unit>
      <trans-unit id="tu71" resname="---bemtree---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Получение данных внутри BEMTREE-шаблона блока</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Использование такой схемы оправданно в случае, если блок получает данные от источника, которым пользуется только он сам. Тогда теряется смысл в отделении контроллера, т.к. его функциональность не востребована в других блоках.</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примером могут послужить разнообразные виджеты: прогноз погоды, счетчики, свежие посты в блоге, курсы валют и т.д.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Основное преимущество такой схемы – высокая автономность блоков. В них содержится логика как для получения, так и для представления данных.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inputdata"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu76" resname="----bemjson-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Входные и результирующие данные: BEMJSON</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поскольку BEMTREE основан на JavaScript, стандартным форматом представления БЭМ-дерева выбрана структура данных (объект) JavaScript с набором дополнительных соглашений о представлении БЭМ-сущностей — BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMJSON служит входными и выходными данными для шаблонизатора BEMTREE. Входное БЭМ-дерево представляет собой каркас веб-страницы, который в процессе работы шаблонизатора поэлементно наполняется данными.</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входной BEMJSON может состоять из описания всего одной БЭМ-сущности, с которой начинается выполнение BEMTREE-шаблонов проекта – <bpt id="1">&lt;strong&gt;</bpt>точки входа<ept id="1">&lt;/strong&gt;</ept>. Например, мы вызываем BEMTREE-шаблон для блока <bpt id="2">&lt;code&gt;</bpt>page<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMTREE.apply({ block: 'page' })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тогда в BEMTREE-шаблон для БЭМ-сущности – точки входа – включаются ссылки на другие БЭМ-сущности. Например:</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('page').content()([{ block: 'header' }, { block: 'main' }, ...])<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В ходе обработки шаблона, шаблонизатор рекурсивно вызовет BEMTREE-шаблоны, на которые тот ссылался. Например:</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('header').content()([{ block: 'logo' }, { block: 'menu', content: { elem: 'item' }}])<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Таким образом поэлементно выстраивается БЭМ-дерево всего документа.</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="templatebemjson"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Шаблон, мода и контекст</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Понятия <bpt id="1">&lt;strong&gt;</bpt>шаблона<ept id="1">&lt;/strong&gt;</ept>, <bpt id="2">&lt;strong&gt;</bpt>моды<ept id="2">&lt;/strong&gt;</ept> и <bpt id="3">&lt;strong&gt;</bpt>контекста<ept id="3">&lt;/strong&gt;</ept> являются базовыми для BEM-XJST и полностью применимы к BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вы можете ознакомиться с подробной информацией о них в соответствующих разделах документации по шаблонизации в bem-core:</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#template_ingeneral</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#template_ingeneral" [#$tu91]&gt;</bpt>Шаблон<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu93" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#moda</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#moda" [#$tu93]&gt;</bpt>Мода<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu95" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#context</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#context" [#$tu95]&gt;</bpt>Контекст<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu96" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="syntax"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Синтаксис шаблонов</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#unity</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE-шаблоны создаются с помощью <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#unity" [#$tu99]&gt;</bpt>BEM-XJST-синтаксиса шаблонов<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На практике это означает, что в BEMTREE-шаблонах могут быть использованы все те же синтаксические конструкции, которые доступны в BEMHTML-шаблонах.</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все синтаксические отличия от BEMHTML заключается в доступных наборах полей контекста и стандартных мод (включая хелперы для их записи).</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="standardmoda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu103" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Стандартные моды</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В базовом шаблоне BEMTREE определен набор стандартных мод, которые задают порядок обхода входного БЭМ-дерева (BEMJSON) и генерации выходного BEMJSON, используемый BEMTREE по умолчанию.</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По функциональности моды разделяются на два класса:</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>«Пустая» мода<ept id="1">&lt;/strong&gt;</ept> определяет алгоритм обхода узлов входного BEMJSON и вызова остальных мод.</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Все остальные моды определяют порядок генерации выходного BEMJSON. В каждой из таких мод формируется тот или иной фрагмент выходного BEMJSON-дерева.</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для генерации BEMJSON в каждой моде вызывается процедура выбора и выполнения подходящего шаблона (предикат которого истинен в данном контексте). Результат вычисления тела выбранного шаблона подставляется в тот фрагмент BEMJSON-дерева (БЭМ-сущность), за генерацию которого отвечает данная мода.</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данная логика работы накладывает следующие ограничения на шаблоны:</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Если шаблон выводит какие-то данные в BEMJSON, в его предикате должна быть указана мода.</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В предикате шаблона может быть указано не более одной моды.</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В результате вычисления тела шаблона должен возвращаться тот тип объекта, который ожидается в рамках данной моды.</source>
</trans-unit>
      <trans-unit id="tu113" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В последующих разделах моды перечислены в порядке их вызова при обработке элемента входного BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu114" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Моды BEMTREE полностью аналогичны модам BEMHTML, за тем исключением, что в BEMTREE отсутствуют моды, отвечающие за генерацию фрагментов HTML-элемента (классов, атрибутов и т.п.).</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Таким образом, в BEMTREE-шаблонах помимо пустой моды, определяющей алгоритм обхода входного БЭМ-дерева и вызова остальных мод, доступны только две моды:</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-li" xml:space="preserve">
<source xml:lang="ru">мода <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept>, которая отвечает за генерацию элемента БЭМ-дерева в<ph id="2">&lt;br /&gt;</ph> целом. Обычно используется для замены контекстной сущности (например, чтобы <bpt id="3">&lt;a href="#wrappingunit"&gt;</bpt>обернуть блок в другой блок<ept id="3">&lt;/a&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-li" xml:space="preserve">
<source xml:lang="ru">мода <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>, описывающая содержимое текущего элемента БЭМ-дерева.</source>
</trans-unit>
      <trans-unit id="tu118" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="empty_moda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu119" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">«Пустая» мода (<bpt id="1">&lt;code&gt;</bpt>""<ept id="1">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона:<ept id="1">&lt;/em&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>не используется<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пустая (не определенная) мода соответствует моменту, когда значение поля контекста <bpt id="1">&lt;code&gt;</bpt>this._mode<ept id="1">&lt;/code&gt;</ept> равно пустой стоке (<bpt id="2">&lt;code&gt;</bpt>""<ept id="2">&lt;/code&gt;</ept>). Это значение выставляется:</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-li" xml:space="preserve">
<source xml:lang="ru">перед началом обработки входного дерева;</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-li" xml:space="preserve">
<source xml:lang="ru">в момент рекурсивного вызова процедуры обхода дерева в моде <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu124" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Действие, выполняемое в рамках пустой моды, зависит от типа контекстного (текущего) элемента входного BEMJSON-дерева.</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип элемента</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Действие</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;b&gt;</bpt>БЭМ-сущность<ept id="1">&lt;/b&gt;</ept>(блок или элемент)</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Выставление значений в служебных полях контекста (<bpt id="1">&lt;code preserve="1"&gt;</bpt>block elem mods elemMods ctx position<ept id="1">&lt;/code&gt;</ept>)
    и вызов шаблонов по моде <bpt id="2">&lt;code preserve="1"&gt;</bpt>default<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-th" xml:space="preserve">
<source xml:lang="ru">строка/число</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Вывод значения, приведенного к строке, в буфер BEMJSON-результата.</source>
</trans-unit>
      <trans-unit id="tu131" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Boolean, undefined, null</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Вывод пустой строки в буфер BEMJSON-результата.</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-th" xml:space="preserve">
<source xml:lang="ru">массив</source>
</trans-unit>
      <trans-unit id="tu134" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Итерация по массиву с рекурсивным вызовом шаблонов по пустой моде.</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по пустой моде (подпредикат <bpt id="1">&lt;code&gt;</bpt>mode(this._mode === '')<ept id="1">&lt;/code&gt;</ept>) имеет смысл только в том случае, если необходимо<ph id="2">&lt;br /&gt;</ph>переопределить принцип обхода входного дерева.</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вызов шаблонов по пустой моде (конструкция <bpt id="1">&lt;code&gt;</bpt>apply('')<ept id="1">&lt;/code&gt;</ept> в теле шаблона) необходим, если требуется отклониться от однозначного соответствия «входная БЭМ-сущность — выходной BEMJSON-элемент» и, например, сгенерировать более одного элемента на одну входную сущность. В частности, такой вызов осуществляется автоматически при использовании<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu137]&gt;</bpt>конструкции applyCtx<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu138" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu139" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#wrappingunit"&gt;</bpt>Оборачивание блока в другой блок<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu140" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="default"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu141" resname="default-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">default</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона:<ept id="1">&lt;/em&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>не используется<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu143" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках моды <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept> полностью формируется выходной BEMJSON-элемент, соответствующий входной БЭМ-сущности.</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В ходе выполнения моды <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept> происходит:</source>
</trans-unit>
      <trans-unit id="tu145" restype="x-li" xml:space="preserve">
<source xml:lang="ru">вызов всех остальных стандартных мод, отвечающих за формирование отдельных аспектов BEMJSON-элемента;</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru">объединение результатов выполнения всех вызываемых мод в результирующий BEMJSON;</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-li" xml:space="preserve">
<source xml:lang="ru">рекурсивный вызов шаблонов на результат выполнения моды <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu149" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/page/page.bemhtml</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>def()<ept id="2">&lt;/code&gt;</ept>) необходимо в тех случаях, когда нужно переопределить процедуру генерации выходного фрагмента BEMJSON. Для примера, создадим BEMTREE-шаблон для блока <bpt id="3">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/page/page.bemhtml" [#$tu149]&gt;</bpt>page<ept id="3">&lt;/a&gt;</ept> с уровня переопределения <bpt id="4">&lt;code&gt;</bpt>common.blocks<ept id="4">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu150" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('page').def()(function() {
    return applyCtx({
        block: this.block,
        title: this.ctx.title,
        head: [{ elem: 'js', url: this.ctx.js }],
        content: {
            block: 'foo',
            content: this.ctx.foo
        }
    });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu151" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь для модификации объекта входных данных <bpt id="1">&lt;code&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept> используется конструкция <bpt id="2">&lt;code&gt;</bpt>applyCtx<ept id="2">&lt;/code&gt;</ept>. С ее помощью присваиваются значения различным полям объекта в момент вызова по моде <bpt id="3">&lt;code&gt;</bpt>default<ept id="3">&lt;/code&gt;</ept>, а затем автоматически осуществляется вызов процедуры выбора и применения шаблона <bpt id="4">&lt;code&gt;</bpt>apply()<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон формирует в контексте произвольные поля <bpt id="1">&lt;code&gt;</bpt>title<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>head<ept id="2">&lt;/code&gt;</ept>, значения которых в дальнейшем используются BEMHTML-шаблоном блока.</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="content"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu154" resname="content-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">content</source>
</trans-unit>
      <trans-unit id="tu155" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона:<ept id="1">&lt;/em&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>BEMJSON<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu156" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию:<ept id="1">&lt;/em&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>this.ctx.content<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu157" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках моды <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> вычисляется содержимое BEMJSON-элемента, в качестве которого может выступать произвольный BEMJSON (как строка или число, так и дерево БЭМ-сущностей). В качестве значения по умолчанию используется значение поля <bpt id="2">&lt;code&gt;</bpt>content<ept id="2">&lt;/code&gt;</ept> контекстной БЭМ-сущности (<bpt id="3">&lt;code&gt;</bpt>this.ctx.content<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu158" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>content()<ept id="2">&lt;/code&gt;</ept>) необходимо, если:</source>
</trans-unit>
      <trans-unit id="tu159" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Необходимо на уровне шаблонизатора добавить содержимое для сущности, у которой отсутствует <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> во входном BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu160" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Необходимо подменить содержимое сущности на уровне шаблонизатора.</source>
</trans-unit>
      <trans-unit id="tu161" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu162" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu163" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Результирующий BEMJSON</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu165" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu166" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu167" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').content()({
  block: 'b2'
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu168" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu169" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{ block: 'b1', content: { block: 'b2' } }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu170" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#inheritage"&gt;</bpt>Наследование<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu172" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#additionbem"&gt;</bpt>Добавление БЭМ-сущностей к БЭМ-дереву<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu173" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context_field"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu174" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поля контекста</source>
</trans-unit>
      <trans-unit id="tu175" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе работы шаблонизатор строит структуру данных, содержащую сведения об обрабатываемом узле BEMJSON и о состоянии процесса обработки. Помимо этого в контексте доступен ряд вспомогательных функций.</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В момент выполнения шаблона контекст доступен в виде объекта, обозначаемого ключевым словом <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>. Обращение к контексту возможно как в предикате, так и в теле шаблона.</source>
</trans-unit>
      <trans-unit id="tu177" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Автор шаблонов имеет возможность определить любые дополнительные поля в контексте.</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все поля контекста можно разделить на две категории:</source>
</trans-unit>
      <trans-unit id="tu179" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Контекстно-зависимые<ept id="1">&lt;/strong&gt;</ept>, значение которых изменяется в зависимости от обрабатываемого узла и фазы процесса обработки.</source>
</trans-unit>
      <trans-unit id="tu180" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Контекстно-независимые<ept id="1">&lt;/strong&gt;</ept>, значение которых постоянно.</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu183" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#context</source>
</trans-unit>
      <trans-unit id="tu182" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#context" [#$tu183]&gt;</bpt>Контекст<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu184" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="contextdependent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu185" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекстно-зависимые поля</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#contextdependent</source>
</trans-unit>
      <trans-unit id="tu186" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Базовый шаблон технологии BEMTREE не добавляет никаких контекстно-зависимых полей помимо, <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#contextdependent" [#$tu187]&gt;</bpt>общих для BEM-XJST<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu188" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context_independent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu189" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекстно-независимые поля</source>
</trans-unit>
      <trans-unit id="tu190" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все контекстно-независимые поля сгруппированы в объекте <bpt id="1">&lt;code&gt;</bpt>this._<ept id="1">&lt;/code&gt;</ept> и представляют собой вспомогательные функции, используемые при работе шаблонизатора. Автор шаблонов также может пользоваться этими функциями как в теле шаблонов, так и в предикатах.</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#context_independent</source>
</trans-unit>
      <trans-unit id="tu191" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE расширяет набор <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#context_independent" [#$tu192]&gt;</bpt>контекстно-независимых полей BEM-XJST<ept id="1">&lt;/a&gt;</ept> только одним методом – <bpt id="2">&lt;code&gt;</bpt>this.doAsync<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu193" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu194" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu195" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.doAsync(Function)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu197" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Function<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu198" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Асинхронно выполняет функцию, переданную в качестве аргумента. Обычно используется для отправки асинхронных запросов к бэкенду. Функция возвращает промис, объект результата которого содержит поля с информацией о контекстной БЭМ-сущности.</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="examples"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu200" resname="---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Примеры и рецепты</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bringing_input"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu202" resname="--------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Приведение входных данных к формату, ориентированному на представление</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu204" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сформировать входное БЭМ-дерево для страницы френдленты (список постов с указанием информации об авторе), удобное для обработки в терминах шаблонов BEMHTML. Такое дерево должно быть ориентировано на представление, т.е. набор и порядок БЭМ-сущностей должен соответствовать набору и порядку DOM-узлов выходного HTML.</source>
</trans-unit>
      <trans-unit id="tu205" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu206" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Бэкенд обычно работает с нормализованными данными (data-ориентированный формат). В случае френдленты формат исходных данных может быть таким:</source>
</trans-unit>
      <trans-unit id="tu207" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    posts: [ { text: 'post text 1', author: 'login1' },  { text: 'post text 2', author: 'login2' }… ],
    users:  { 'login1': { userpic: 'URL', name: 'Full Name 1' }, 'login2': { userpic: 'URL', name: 'Full Name 2' } … },
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu208" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данные представлены в нормализованном виде. В списке постов используется только идентификатор пользователя, а полная информация о пользователе находится в соответствующем хеше в списке пользователей. Один пользователь может быть автором нескольких постов.</source>
</trans-unit>
      <trans-unit id="tu209" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Формат данных, ориентированный на представление, предполагает денормализацию данных, т.е. развертывание списка постов таким образом, чтобы в каждом посте содержалась полная информация об авторе, даже если в списке присутствует несколько постов одного автора. В BEMJSON подобный формат может выглядеть так:</source>
</trans-unit>
      <trans-unit id="tu210" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'posts',
    content: [
        {
            block: 'post',
            content: [
                { block: 'userpic', content: 'URL' },
                { block: 'user', content: 'Full Name 1' },
                { elem: 'text', content: 'post text 1' }
            ]
        },
        {
            block: 'post',
            content: [
                { block: 'userpic', content: 'URL' },
                { block: 'user', content: 'Full Name 2' },
                { elem: 'text', content: 'post text 2' }
            ]
        },
        …
    ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu211" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предположим, что исходные данные сохранены в поле контекста <bpt id="1">&lt;code&gt;</bpt>this.ctx.data<ept id="1">&lt;/code&gt;</ept>. Тогда BEMTREE-шаблон, осуществляющий нужное преобразование, может иметь такой вид:</source>
</trans-unit>
      <trans-unit id="tu212" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt> block('posts').content()(function() {
    var data = this.ctx.data;

    return data.posts.map(function(post) {
        var user = data.users[post.author];

        return {
            block: 'post',
            content: [
                { block: 'userpic', content: user.userpic },
                { block: 'user', content: user.name },
                { elem: 'text', content: post.text }
            ]
        };
    });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu213" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inheritage"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu214" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Наследование</source>
</trans-unit>
      <trans-unit id="tu215" resname="-1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu217" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/filesystem/#levels</source>
</trans-unit>
      <trans-unit id="tu216" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На разных <bpt id="1">&lt;a href="https://ru.bem.info/method/filesystem/#levels" [#$tu217]&gt;</bpt>уровнях переопределения<ept id="1">&lt;/a&gt;</ept><ph id="2">&lt;br /&gt;</ph>определены два различных шаблона на одну и ту же БЭМ-сущность (<bpt id="3">&lt;code&gt;</bpt>block b1<ept id="3">&lt;/code&gt;</ept>). Каждый из шаблонов определяет своё содержимое по моде <bpt id="4">&lt;code&gt;</bpt>content<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu218" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо на втором уровне переопределения <bpt id="1">&lt;strong&gt;</bpt>унаследовать<ept id="1">&lt;/strong&gt;</ept> содержимое, определённое на первом уровне, и добавить дополнительное. Требуется аналог <bpt id="2">&lt;code&gt;</bpt>&lt;xsl:apply-imports/&gt;<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu219" resname="-1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu220" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMTREE есть аналог <bpt id="1">&lt;code&gt;</bpt>&lt;xsl:apply-imports/&gt;<ept id="1">&lt;/code&gt;</ept>. Реализация основывается на возможности заново запустить в шаблоне процедуру применения шаблонов к текущему контексту (<bpt id="2">&lt;code&gt;</bpt>apply()<ept id="2">&lt;/code&gt;</ept>). Таким образом можно вызвать тот шаблон, который был определен для данного контекста (БЭМ-сущности, моды и т.п.) ранее или на другом уровне переопределения.</source>
</trans-unit>
      <trans-unit id="tu221" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вычислении выражения <bpt id="1">&lt;code&gt;</bpt>apply()<ept id="1">&lt;/code&gt;</ept> возвращается результат, полученный в ходе применения ранее определенного шаблона.<ph id="2">&lt;br /&gt;</ph>Для избежания бесконечного цикла необходимо добавить подпредикат проверки наличия в контексте какого-то флага (например, <bpt id="3">&lt;code&gt;</bpt>_myGuard<ept id="3">&lt;/code&gt;</ept>), который будет выставлен при выполнении <bpt id="4">&lt;code&gt;</bpt>apply()<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu222" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// шаблон на первом уровне переопределения
block('b1').content()('text1');

// шаблон на втором уровне переопределения
block('b1').match(!this._myGuard).content()(function() {
    return [
        apply({ _myGuard: true }),  // получаем предыдущее значение content
        'text2'
    ];
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu223" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В результате применения шаблонов к блоку <bpt id="1">&lt;code&gt;</bpt>b1<ept id="1">&lt;/code&gt;</ept> будет получен BEMJSON:</source>
</trans-unit>
      <trans-unit id="tu224" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'b1', content: 'text1text2' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu225" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве более простого решения можно использовать конструкцию <bpt id="1">&lt;code&gt;</bpt>applyNext<ept id="1">&lt;/code&gt;</ept>, которая автоматически генерирует уникальное имя флага против зацикливания.</source>
</trans-unit>
      <trans-unit id="tu226" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').content()('text1');

block('b1').content()(function() {
    return [
        applyNext(), // получаем предыдущее значение content
        'text2'
    ];
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu227" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu229" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applynext</source>
</trans-unit>
      <trans-unit id="tu228" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applynext" [#$tu229]&gt;</bpt>Конструкция applyNext<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu230" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="wrappingunit"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu231" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Оборачивание блока в другой блок</source>
</trans-unit>
      <trans-unit id="tu232" resname="-2-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu233" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо вложить блок (<bpt id="1">&lt;code&gt;</bpt>b-inner<ept id="1">&lt;/code&gt;</ept>) в другой блок (<bpt id="2">&lt;code&gt;</bpt>b-wrapper<ept id="2">&lt;/code&gt;</ept>) при выполнении шаблона. Таким образом, одному входному блоку будет соответствовать два вложенных друг в друга блока.</source>
</trans-unit>
      <trans-unit id="tu234" resname="-2-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu235" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При обработке блока <bpt id="1">&lt;code&gt;</bpt>b-inner<ept id="1">&lt;/code&gt;</ept> в шаблоне по моде <bpt id="2">&lt;code&gt;</bpt>default<ept id="2">&lt;/code&gt;</ept> (генерация целого элемента) следует модифицировать фрагмент входного дерева <bpt id="3">&lt;code&gt;</bpt>this.ctx<ept id="3">&lt;/code&gt;</ept> (добавить блок <bpt id="4">&lt;code&gt;</bpt>b-wrapper<ept id="4">&lt;/code&gt;</ept>). Для этого используется конструкция <bpt id="5">&lt;code&gt;</bpt>applyCtx()<ept id="5">&lt;/code&gt;</ept>, которая присваивает <bpt id="6">&lt;code&gt;</bpt>this.ctx<ept id="6">&lt;/code&gt;</ept> и применяет шаблоны по пустой моде.</source>
</trans-unit>
      <trans-unit id="tu236" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-inner').def()(function() {
    return applyCtx({ block: 'b-wrapper', content: this.ctx });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu237" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Конструкцию <bpt id="2">&lt;code&gt;</bpt>applyCtx()<ept id="2">&lt;/code&gt;</ept> можно применять для <bpt id="3">&lt;strong&gt;</bpt>замены<ept id="3">&lt;/strong&gt;</ept> БЭМ-сущности в исходном дереве, если не использовать исходное содержимое блока (<bpt id="4">&lt;code&gt;</bpt>this.ctx<ept id="4">&lt;/code&gt;</ept>) в аргументе <bpt id="5">&lt;code&gt;</bpt>applyCtx()<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu238" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu240" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu239" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu240]&gt;</bpt>Конструкция applyCtx<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu241" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="additionbem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu242" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Добавление БЭМ-сущностей к БЭМ-дереву</source>
</trans-unit>
      <trans-unit id="tu243" resname="-3-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu244" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо сверстать блок с закруглёнными уголками, работающий во всех браузерах (без использования CSS3).</source>
</trans-unit>
      <trans-unit id="tu245" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входной BEMJSON может быть таким:</source>
</trans-unit>
      <trans-unit id="tu246" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'box', content: 'text' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu247" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Реализация уголков требует добавления к блоку четырех дополнительных элементов. Финальное БЭМ-дерево должно выглядеть так:</source>
</trans-unit>
      <trans-unit id="tu248" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'box',
    content: {
        elem: 'left-top',
        content: {
            elem: 'right-top',
            content: {
                elem: 'right-bottom',
                content: {
                    elem: 'left-bottom',
                    content: 'text'
                }
            }
        }
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu249" resname="-3-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu250" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для модификации входного БЭМ-дерева на уровне BEMTREE потребуется написать шаблон по моде <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> для блока <bpt id="2">&lt;code&gt;</bpt>box<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Подмена фрагмента входного БЭМ-дерева (добавление необходимых элементов) выполняется с помощью конструкции <bpt id="4">&lt;code&gt;</bpt>applyCtx()<ept id="4">&lt;/code&gt;</ept>, а подстановка исходного содержимого — с помощью конструкции <bpt id="5">&lt;code&gt;</bpt>applyNext()<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu251" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE-шаблон, выполняющий это преобразование:</source>
</trans-unit>
      <trans-unit id="tu252" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('box').content()(function() {
    return applyCtx({
        elem: 'left-top',
        content: {
            elem: 'right-top',
            content: {
                elem: 'right-bottom',
                content: {
                    elem: 'left-bottom',
                    content: applyNext()
                }
            }
        }
    });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu253" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Хеш с переменной <bpt id="2">&lt;code&gt;</bpt>ctx._processed<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>true<ept id="3">&lt;/code&gt;</ept> передается методу <bpt id="4">&lt;code&gt;</bpt>applyCtx<ept id="4">&lt;/code&gt;</ept> первым параметром, чтобы выполнить метод в модифицированном контексте.</source>
</trans-unit>
      <trans-unit id="tu254" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu256" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#apply</source>
</trans-unit>
      <trans-unit id="tu255" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#apply" [#$tu256]&gt;</bpt>Конструкция apply<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu258" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applynext</source>
</trans-unit>
      <trans-unit id="tu257" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applynext" [#$tu258]&gt;</bpt>Конструкция applyNext<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu260" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu259" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu260]&gt;</bpt>Конструкция applyCtx<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu261" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="check_predicate"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu262" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Проверка подпредикатов в определенном порядке</source>
</trans-unit>
      <trans-unit id="tu263" resname="-4-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu264" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо проверять подпредикаты шаблона в строго определенном порядке, например, сначала проверить наличие в контексте объекта <bpt id="1">&lt;code&gt;</bpt>this.world<ept id="1">&lt;/code&gt;</ept>, а затем проверить значение поля в этом объекте <bpt id="2">&lt;code&gt;</bpt>this.world.answer<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu265" resname="-4-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu266" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Воспользуемся тем, что подпредикат шаблона BEMTREE может быть произвольным JavaScript-выражением и запишем его в следующей форме:</source>
</trans-unit>
      <trans-unit id="tu267" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.world &amp;&amp; this.world.answer === 42 })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu268" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Недостаток этого решения в том, что при компиляции это выражение не будет оптимизировано, что отрицательно скажется на скорости работы шаблона. В большинстве случаев можно и нужно избегать необходимости в строгом порядке проверки подпредикатов.</source>
</trans-unit>
      <trans-unit id="tu269" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="binding_html"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu270" resname="-html---id-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Связывание HTML-элементов по id</source>
</trans-unit>
      <trans-unit id="tu271" resname="-5-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu272" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо для входного блока <bpt id="1">&lt;code&gt;</bpt>input<ept id="1">&lt;/code&gt;</ept> сгенерировать пару HTML-элементов <bpt id="2">&lt;code&gt;</bpt>&lt;label&gt;<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>&lt;input&gt;<ept id="3">&lt;/code&gt;</ept>, так чтобы значение атрибута <bpt id="4">&lt;code&gt;</bpt>input@id<ept id="4">&lt;/code&gt;</ept> было сгенерировано автоматически, уникально и совпадало со значением атрибута <bpt id="5">&lt;code&gt;</bpt>label@for<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu273" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входные данные могут выглядеть так:</source>
</trans-unit>
      <trans-unit id="tu274" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'input',
  label: 'My Input',
  content: 'my value'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu275" resname="-5-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu276" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для генерации уникального идентификатора, подходящего в качестве значения атрибута <bpt id="1">&lt;code&gt;</bpt>id<ept id="1">&lt;/code&gt;</ept>, воспользуемся вспомогательной функцией контекста <bpt id="2">&lt;code&gt;</bpt>this.generateId()<ept id="2">&lt;/code&gt;</ept>. Чтобы сгенерировать два HTML-элемента внутри одного входного блока, потребуется шаблон по моде <bpt id="3">&lt;code&gt;</bpt>content<ept id="3">&lt;/code&gt;</ept>, в котором будут сформированы два необходимых элемента и их атрибуты.</source>
</trans-unit>
      <trans-unit id="tu277" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('input')(
  content()(function() {
    return [
        {
          tag: 'label',
          attrs: { 'for': this.generateId() },
          content: this.ctx.label
        },
        {
          tag: 'input',
          attrs: {
            id: this.generateId(),
            value: applyNext()
          }
        }
      ];
  })
);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu278" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Послесловие</source>
</trans-unit>
      <trans-unit id="tu279" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При создании BEMTREE-шаблонов можно использовать те же приемы, что и в BEMHTML. Если вы встретили интересное решение в BEMHTML-шаблоне – не стесняйтесь экспериментировать. Скорее всего, это решение может быть применено и к BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu280" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu282" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://tech.yandex.ru/events/bemup/29-november-2013/talks/1413/</source>
</trans-unit>
      <trans-unit id="tu281" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Мастер-класс <bpt id="1">&lt;a href="https://tech.yandex.ru/events/bemup/29-november-2013/talks/1413/" [#$tu282]&gt;</bpt>Динамический БЭМ-сайт на Node.js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu284" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://tech.yandex.ru/events/bemup/yac-bemup/talks/1354/</source>
</trans-unit>
      <trans-unit id="tu283" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://tech.yandex.ru/events/bemup/yac-bemup/talks/1354/" [#$tu284]&gt;</bpt>BEMTREE — генерируй дерево<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu286" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#examples</source>
</trans-unit>
      <trans-unit id="tu285" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#examples" [#$tu286]&gt;</bpt>Примеры и рецепты BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu288" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/</source>
</trans-unit>
      <trans-unit id="tu287" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/" [#$tu288]&gt;</bpt>Шаблонизация данных в bem-core<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu290" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/</source>
</trans-unit>
      <trans-unit id="tu289" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/" [#$tu290]&gt;</bpt>BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu292" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu291" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu292]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/reference/reference.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="----bemhtml-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Справочное руководство по шаблонизатору BEMHTML</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Введение</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Данный документ<ept id="1">&lt;/strong&gt;</ept> представляет собой справочное руководство по шаблонизатору BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В документе описаны:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">основные особенности BEMHTML, отличающие его от других шаблонизаторов;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">примеры решения типовых задач средствами BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Целевая аудитория документа<ept id="1">&lt;/strong&gt;</ept> — веб-разработчики и HTML-верстальщики, использующие<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://ru.bem.info/method/" [#$tu9]&gt;</bpt>БЭМ-методологию<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предполагается, что читатель знаком с:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru">HTML;</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JavaScript;</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru">CSS;</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru">БЭМ;</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu16]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>В документе не описаны<ept id="1">&lt;/strong&gt;</ept> настройка среды разработки и процедуры компиляции шаблонов, синтаксис BEM-XJST-шаблонизаторов, синтаксис BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemhtml"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" resname="--bemhtml-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Особенности шаблонизатора BEMHTML</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="arch"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Архитектура шаблонизатора</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/templating-engines/bemxjst/</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemhtml</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для обработки BEMHTML-шаблонов используется модуль <bpt id="1">&lt;a href="https://ru.bem.info/tools/templating-engines/bemxjst/" [#$tu23]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept>, расширенный логикой из базового шаблона BEMHTML – <bpt id="2">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemhtml" [#$tu24]&gt;</bpt>i-bem.bemhtml<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Специфическая для BEMHTML логика при этом реализована на уровне базового шаблона <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>. Базовый шаблон определяет:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru">набор и порядок вызова <bpt id="1">&lt;a href="#standardmoda"&gt;</bpt>стандартных мод<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru">доступные <bpt id="1">&lt;a href="#context_field"&gt;</bpt>поля контекста<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#bemx_arch</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подробнее об особенностях архитектуры BEMHTML читайте в соответствующем разделе документа по <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#bemx_arch" [#$tu29]&gt;</bpt>шаблонизации данных в bem-core<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="uts"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" resname="-bem-xjst--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Поддержка BEM-XJST-синтаксиса</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#bemx_intro</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML – <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#bemx_intro" [#$tu33]&gt;</bpt>BEM-XJST-шаблонизатор<ept id="1">&lt;/a&gt;</ept>. Иначе говоря, BEMHTML использует <bpt id="2">&lt;strong&gt;</bpt>BEM-XJST-синтаксис<ept id="2">&lt;/strong&gt;</ept> и сохраняет все особенности BEM-XJST-шаблонизаторов, такие как:</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#bem_area</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#bem_area" [#$tu35]&gt;</bpt>привязка к БЭМ-предметной области<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#decl_templatе</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#decl_templatе" [#$tu37]&gt;</bpt>декларативные шаблоны<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#language</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#language" [#$tu39]&gt;</bpt>язык описания и исполнения шаблонов — JavaScript<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#restrictions</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#restrictions" [#$tu41]&gt;</bpt>ограничения на уровне соглашений<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="basic"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Основные понятия</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inputdata"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" resname="--bemjson-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Входные данные: BEMJSON</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поскольку BEMHTML основан на JavaScript, стандартным форматом представления БЭМ-дерева выбрана структура данных (объект) JavaScript, с набором дополнительных соглашений о представлении БЭМ-сущностей — BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Задача шаблонизатора BEMHTML — преобразовать входное БЭМ-дерево в выходной HTML-документ. В целях сохранения гибкости<ph id="1">&lt;br /&gt;</ph>и поддерживаемости, на уровне шаблонизатора не следует производить сложных преобразований входных данных. Шаблоны должны<ph id="2">&lt;br /&gt;</ph>быть максимально простыми утверждениями, сопоставляющими каждому типу БЭМ-сущности нужное HTML-оформление.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поэтому структура входного БЭМ-дерева должна быть ориентирована на <bpt id="1">&lt;strong&gt;</bpt>представление<ept id="1">&lt;/strong&gt;</ept> (view), чтобы при генерации<ph id="2">&lt;br /&gt;</ph>HTML-дерева не требовалось изменять набор и порядок блоков и элементов. Приведение БЭМ-дерева к такому развернутому виду должно производиться на уровне бэкенда, предшествующего шаблонизатору (например, с помощью технологии <bpt id="3">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/" [#$tu49]&gt;</bpt>BEMTREE<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/#bringing_input</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Иллюстрацией view-ориентированного формата<ph id="1">&lt;br /&gt;</ph>данных может служить пример френдленты, разобранный в разделе <bpt id="2">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/#bringing_input" [#$tu51]&gt;</bpt>Приведение входных данных к формату, ориентированному на представление<ept id="2">&lt;/a&gt;</ept> документации по BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В то же время детали организации HTML-страницы, которые являются зоной ответственности верстальщика, должны определяться<ph id="1">&lt;br /&gt;</ph>только на уровне шаблонизатора. Пример такого решения приведен в разделе <bpt id="2">&lt;a href="#additionbem"&gt;</bpt>Добавление БЭМ-сущностей для задач верстки<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu55]&gt;</bpt>Синтаксис BEMJSON<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="templatebemjson"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Единицей программы на BEMHTML является <bpt id="1">&lt;strong&gt;</bpt>шаблон<ept id="1">&lt;/strong&gt;</ept>. Шаблон BEMHTML связывает входную БЭМ-сущность (заданную именем<ph id="2">&lt;br /&gt;</ph>сущности, элемента, именем и значением модификатора) и соответствующий этой сущности HTML-элемент.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон состоит из:</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>предиката<ept id="1">&lt;/strong&gt;</ept> — набора условий, при выполнении которых применяется шаблон. Типичный предикат описывает свойства<ph id="2">&lt;br /&gt;</ph> входной БЭМ-сущности;</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-li" xml:space="preserve">
<source xml:lang="ru">и <bpt id="1">&lt;strong&gt;</bpt>тела<ept id="1">&lt;/strong&gt;</ept> — инструкций по генерации выходного HTML.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#unity</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#unity" [#$tu64]&gt;</bpt>Синтаксис BEM-XJST<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="moda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Мода</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе работы шаблонизатор последовательно обходит узлы входного БЭМ-дерева. Для каждого узла — БЭМ-сущности —<ph id="1">&lt;br /&gt;</ph>выполняется цикл генерации выходного HTML-элемента. Для вложенных сущностей цикл генерации HTML-элементов выполняется<ph id="2">&lt;br /&gt;</ph>рекурсивно. Таким образом, выходное HTML-дерево формируется поэлементно в процессе обхода входного БЭМ-дерева.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Цикл генерации каждого элемента последовательно проходит ряд фаз, называемых <bpt id="1">&lt;strong&gt;</bpt>модами<ept id="1">&lt;/strong&gt;</ept>. Каждая мода отвечает<ph id="2">&lt;br /&gt;</ph>за определенный фрагмент генерируемого HTML-элемента — тег, атрибуты, класс и т.п. В каждой моде вызывается процедура выбора и выполнения подходящего шаблона.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Моды позволяют разделить выходной элемент на фрагменты, каждый из которых может быть описан простым типом данных:<ph id="1">&lt;br /&gt;</ph>тег и класс — строкой, атрибуты — словарем, необходимость в БЭМ-классах — логическим значением и т.п. Благодаря этому<ph id="2">&lt;br /&gt;</ph>возможно написание декларативных шаблонов, в предикате которых указана мода, а в теле содержатся данные соответствующего<ph id="3">&lt;br /&gt;</ph>этой моде простого типа. В этом случае полное представление HTML-элемента может быть задано несколькими шаблонами.</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Особый статус имеет <bpt id="1">&lt;strong&gt;</bpt><bpt id="2">&lt;a href="#default"&gt;</bpt>мода default<ept id="2">&lt;/a&gt;</ept><ept id="1">&lt;/strong&gt;</ept>, которая отвечает за генерацию целого HTML-элемента. В рамках этой<ph id="3">&lt;br /&gt;</ph>моды задан набор и порядок прохождения остальных мод, соответствующих фрагментам HTML-элемента, а также определена<ph id="4">&lt;br /&gt;</ph>процедура сборки финального представления HTML-элемента из фрагментов, сгенерированных в остальных модах. Написание<ph id="5">&lt;br /&gt;</ph>шаблона, который переопределяет поведение в данной моде, позволяет полностью контролировать генерацию элемента<ph id="6">&lt;br /&gt;</ph>из BEMHTML, не пользуясь стандартными модами, позволяющими генерировать выходной элемент по частям.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#standardmoda"&gt;</bpt>Стандартные моды<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu74" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекст</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе обхода входного BEMJSON-дерева шаблонизатор строит <bpt id="1">&lt;strong&gt;</bpt>контекст<ept id="1">&lt;/strong&gt;</ept> — структуру данных, которая доступна в момент применения шаблонов. Контекст соответствует текущему элементу (узлу) входного БЭМ-дерева и включает:</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-li" xml:space="preserve">
<source xml:lang="ru">нормализованные сведения о текущей БЭМ-сущности;</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-li" xml:space="preserve">
<source xml:lang="ru">фрагмент входных данных без модификаций (текущий элемент BEMJSON-дерева и его потомки);</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-li" xml:space="preserve">
<source xml:lang="ru">строковый буфер, в который записывается HTML-результат;</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-li" xml:space="preserve">
<source xml:lang="ru">служебные поля, содержащие сведения о текущем состоянии (мода, позиция во входном БЭМ-дереве и т.п.);</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru">вспомогательные функции.</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущность, описываемая текущим контекстом, называется <bpt id="1">&lt;strong&gt;</bpt>контекстной сущностью<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#context_field"&gt;</bpt>Поля контекста<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#extensionbem</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#extensionbem" [#$tu85]&gt;</bpt>Достраивание БЭМ-сущностей по контексту<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="standardmoda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Стандартные моды</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В базовом шаблоне BEMHTML определен набор стандартных мод, которые задают порядок обхода входного БЭМ-дерева (BEMJSON) и генерации выходного HTML, используемый BEMHTML по умолчанию.</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По функциональности моды разделяются на два класса:</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>«Пустая» мода<ept id="1">&lt;/strong&gt;</ept> определяет алгоритм обхода узлов входного BEMJSON и вызова остальных мод;</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Все остальные моды определяют порядок генерации выходного HTML. В каждой из таких мод формируется тот или иной<ph id="1">&lt;br /&gt;</ph>фрагмент выходного HTML-дерева.</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для генерации HTML в каждой моде вызывается процедура выбора и выполнения подходящего шаблона (предикат которого истинен<ph id="1">&lt;br /&gt;</ph>в данном контексте). Результат вычисления тела выбранного шаблона подставляется в тот фрагмент HTML-дерева (HTML-элемента), за генерацию которого отвечает данная мода.</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данная логика работы накладывает следующие ограничения на шаблоны:</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Если шаблон выводит какие-то данные в HTML, в его предикате должна быть указана мода.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В предикате шаблона может быть указано не более одной моды.</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В результате вычисления тела шаблона должен возвращаться тот тип объекта, который ожидается в рамках данной моды.</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В последующих разделах моды перечислены в порядке их вызова при обработке элемента входного BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="empty_moda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">«Пустая» мода (<bpt id="1">&lt;code&gt;</bpt>""<ept id="1">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>не используется<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пустая (не определенная) мода соответствует моменту, когда значение поля контекста <bpt id="1">&lt;code&gt;</bpt>this._mode<ept id="1">&lt;/code&gt;</ept> равно пустой стоке<ph id="2">&lt;br /&gt;</ph>(<bpt id="3">&lt;code&gt;</bpt>""<ept id="3">&lt;/code&gt;</ept>). Это значение выставляется:</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-li" xml:space="preserve">
<source xml:lang="ru">перед началом обработки входного дерева;</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-li" xml:space="preserve">
<source xml:lang="ru">в момент рекурсивного вызова процедуры обхода дерева в моде <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Действие, выполняемое в рамках пустой моды, зависит от типа контекстного (текущего) элемента входного BEMJSON-дерева.</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип элемента</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Действие</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;b&gt;</bpt>БЭМ-сущность<ept id="1">&lt;/b&gt;</ept> (блок или элемент)</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Выставление значений в служебных полях контекста (<bpt id="1">&lt;code preserve="1"&gt;</bpt>block elem mods elemMods ctx position<ept id="1">&lt;/code&gt;</ept>)
    и вызов шаблонов по моде <bpt id="2">&lt;code preserve="1"&gt;</bpt>default<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-th" xml:space="preserve">
<source xml:lang="ru">строка/число</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Вывод значения, приведенного к строке, в буфер HTML-результата.</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Boolean, undefined, null</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Вывод пустой строки в буфер HTML-результата.</source>
</trans-unit>
      <trans-unit id="tu113" restype="x-th" xml:space="preserve">
<source xml:lang="ru">массив</source>
</trans-unit>
      <trans-unit id="tu114" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Итерация по массиву с рекурсивным вызовом шаблонов по пустой моде.</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по пустой моде (подпредикат <bpt id="1">&lt;code&gt;</bpt>mode(this._mode === "")<ept id="1">&lt;/code&gt;</ept>) имеет смысл только в том случае, если необходимо<ph id="2">&lt;br /&gt;</ph>переопределить принцип обхода входного дерева.</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вызов шаблонов по пустой моде (конструкция <bpt id="1">&lt;code&gt;</bpt>apply('')<ept id="1">&lt;/code&gt;</ept> в теле шаблона) необходим, если требуется отклониться<ph id="2">&lt;br /&gt;</ph>от однозначного соответствия «входная БЭМ-сущность — выходной HTML-элемент» и сгенерировать более одного элемента на одну входную сущность. В частности, такой вызов осуществляется автоматически при использовании<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu117]&gt;</bpt>конструкции applyCtx<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu118" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#wrappingunit"&gt;</bpt>Оборачивание блока в другой блок<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="default"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu121" resname="default-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">default</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>не используется<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu123" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках моды <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept> полностью формируется выходной HTML-элемент, соответствующий входной БЭМ-сущности.</source>
</trans-unit>
      <trans-unit id="tu124" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В ходе выполнения моды <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept> происходит:</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-li" xml:space="preserve">
<source xml:lang="ru">вызов всех остальных стандартных мод, отвечающих за формирование отдельных аспектов HTML-элемента;</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-li" xml:space="preserve">
<source xml:lang="ru">объединение результатов выполнения всех вызываемых мод в результирующую HTML-строку;</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-li" xml:space="preserve">
<source xml:lang="ru">рекурсивный вызов шаблонов на результат выполнения моды <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На рисунке ниже схематически отражено, в каких модах генерируются различные фрагменты выходного HTML-элемента.</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-default</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_default.png" [#$tu130] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu131" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Схема отражает вариант обработки элемента, имеющего пару открывающий—закрывающий тег и вложенное содержимое. Обработка<ph id="1">&lt;br /&gt;</ph>коротких (самозакрытых) элементов аналогична и отличается только отсутствием закрывающего тега и рекурсии. Следует<ph id="2">&lt;br /&gt;</ph>ли обрабатывать данный элемент как короткий, определяет вспомогательная функция контекста <bpt id="3">&lt;code&gt;</bpt>this._.isShortTag<ept id="3">&lt;/code&gt;</ept><ph id="4">&lt;br /&gt;</ph>на основании имени элемента (тега).</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>default<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>def()<ept id="2">&lt;/code&gt;</ept>) необходимо в тех случаях, когда нужно переопределить<ph id="3">&lt;br /&gt;</ph>процедуру генерации выходного HTML-элемента, например, добавить DOCTYPE к тегу HTML:</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block ('b-page')(
  def()(function() {
    this._buf.push('&lt;!DOCTYPE html&gt;');
    return applyNext();
  }),
  tag()('html')
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu134" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="tag"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu135" resname="tag-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">tag</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>String<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu137" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>'div'<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu138" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept> задает имя выходного HTML-элемента (тег). По умолчанию имя элемента равно <bpt id="2">&lt;code&gt;</bpt>div<ept id="2">&lt;/code&gt;</ept>. Фрагменты HTML, за генерацию<ph id="3">&lt;br /&gt;</ph>которых отвечает мода <bpt id="4">&lt;code&gt;</bpt>tag<ept id="4">&lt;/code&gt;</ept>, выделены на рисунке:</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-tag</source>
</trans-unit>
      <trans-unit id="tu139" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_tag.png" [#$tu140] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu141" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если в качестве значения <bpt id="2">&lt;code&gt;</bpt>tag<ept id="2">&lt;/code&gt;</ept> указать пустую строку, для данной сущности будет пропущен этап генерации<ph id="3">&lt;br /&gt;</ph>HTML-элемента (тега и всех атрибутов), но содержимое элемента (<bpt id="4">&lt;code&gt;</bpt>content<ept id="4">&lt;/code&gt;</ept>) будет обработано обычным образом.</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>tag()<ept id="2">&lt;/code&gt;</ept>) необходимо, если:</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для данной сущности следует сгенерировать HTML-элемент с именем, отличным от <bpt id="1">&lt;code&gt;</bpt>div<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-li" xml:space="preserve">
<source xml:lang="ru">отказаться от генерации HTML-элемента для данной сущности, но обработать вложенные сущности.</source>
</trans-unit>
      <trans-unit id="tu145" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu149" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1',
  content: 'text'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu150" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu151" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').tag()('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu152" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu153" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;span class="b1"&gt;text&lt;/span&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu154" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu155" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1',
  content: {
    block: 'b2'
  }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu156" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu157" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').tag()('')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu158" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu159" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b2"&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu160" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="js"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu161" resname="js-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">js</source>
</trans-unit>
      <trans-unit id="tu162" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>Boolean|Object<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu163" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>false<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu164" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> указывает, есть ли у обрабатываемого блока клиентский JavaScript. В случае наличия JavaScript в моде <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept><ph id="3">&lt;br /&gt;</ph>могут быть переданы параметры клиентского JavaScript (записываются в атрибут HTML-элемента, имя которого определяется<ph id="4">&lt;br /&gt;</ph><bpt id="5">&lt;a href="#jsAttr"&gt;</bpt>модой <bpt id="6">&lt;code&gt;</bpt>jsAttr<ept id="6">&lt;/code&gt;</ept><ept id="5">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu165" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> допускает два типа значения тела шаблона:</source>
</trans-unit>
      <trans-unit id="tu166" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept> — Флаг, указывающий, имеет ли данный блок клиентский JavaScript.</source>
</trans-unit>
      <trans-unit id="tu167" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>Object<ept id="1">&lt;/code&gt;</ept> — Хэш, содержащий параметры JavaScript (подразумевается, что данный блок имеет клиентский JavaScript).</source>
</trans-unit>
      <trans-unit id="tu168" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фрагменты HTML, за генерацию которых отвечает мода <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept>, выделены на рисунке:</source>
</trans-unit>
      <trans-unit id="tu170" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-js</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_js.png" [#$tu170] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu171" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>js()<ept id="2">&lt;/code&gt;</ept>) имеет смысл только в том случае, если у блока имеется клиентский<ph id="3">&lt;br /&gt;</ph>JavaScript.</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu174" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu175" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu176" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{block: 'b1'}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu177" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu178" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').js()(true)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu179" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu180" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1 i-bem"
    data-bem="{ 'b1': {} }"&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu181" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu182" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{block: 'b1'}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu183" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu184" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').js()({param: 'value'})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu185" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu186" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1 i-bem"
    data-bem="{ 'b1': { 'param': 'value' } }"&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu187" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu189" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-bl/current/desktop/i-bem/</source>
</trans-unit>
      <trans-unit id="tu188" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-bl/current/desktop/i-bem/" [#$tu189]&gt;</bpt>JS-реализация блока i-bem<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu190" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu191" resname="bem-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">bem</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>Boolean<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu193" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu194" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>bem<ept id="1">&lt;/code&gt;</ept> указывает, нужно ли при формировании HTML-атрибута <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept> включать автоматически сгенерированные имена<ph id="3">&lt;br /&gt;</ph>классов, описывающие данную БЭМ-сущность. По умолчанию генерация БЭМ-классов выполняется. Фрагмент HTML, за генерацию<ph id="4">&lt;br /&gt;</ph>которого отвечает мода <bpt id="5">&lt;code&gt;</bpt>bem<ept id="5">&lt;/code&gt;</ept>, выделен на рисунке:</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-bem</source>
</trans-unit>
      <trans-unit id="tu195" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_bem.png" [#$tu196] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu197" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>bem<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>bem()<ept id="2">&lt;/code&gt;</ept>) имеет смысл только в том случае, если для данной сущности<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;strong&gt;</bpt>не нужно<ept id="4">&lt;/strong&gt;</ept> генерировать HTML-классы, относящиеся к БЭМ-предметной области. Это может быть необходимо для соблюдения<ph id="5">&lt;br /&gt;</ph>синтаксических требований HTML. Например, теги <bpt id="6">&lt;code&gt;</bpt>html<ept id="6">&lt;/code&gt;</ept>, <bpt id="7">&lt;code&gt;</bpt>meta<ept id="7">&lt;/code&gt;</ept>, <bpt id="8">&lt;code&gt;</bpt>link<ept id="8">&lt;/code&gt;</ept>, <bpt id="9">&lt;code&gt;</bpt>script<ept id="9">&lt;/code&gt;</ept>, <bpt id="10">&lt;code&gt;</bpt>style<ept id="10">&lt;/code&gt;</ept> не могут иметь атрибута <bpt id="11">&lt;code&gt;</bpt>class<ept id="11">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu198" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu200" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu202" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b-page'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu203" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu204" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b-page')(
  tag()('html'),
  bem()(false)
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu205" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu206" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;html&gt;&lt;/html&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu207" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="cls"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu208" resname="cls-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">cls</source>
</trans-unit>
      <trans-unit id="tu209" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>String<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu210" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>''<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu211" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>cls<ept id="1">&lt;/code&gt;</ept> позволяет определить произвольную строку, добавляемую в значение атрибута <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept> помимо автоматически<ph id="3">&lt;br /&gt;</ph>генерируемых значений. Фрагмент HTML, за генерацию которого отвечает мода <bpt id="4">&lt;code&gt;</bpt>cls<ept id="4">&lt;/code&gt;</ept>, выделен на рисунке:</source>
</trans-unit>
      <trans-unit id="tu213" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-cls</source>
</trans-unit>
      <trans-unit id="tu212" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_cls.png" [#$tu213] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu214" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>cls<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>cls()<ept id="2">&lt;/code&gt;</ept>) имеет смысл в том случае, если для данного элемента необходимы<ph id="3">&lt;br /&gt;</ph>специфические HTML-классы, не относящиеся к предметной области БЭМ.</source>
</trans-unit>
      <trans-unit id="tu215" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu216" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu217" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu218" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu219" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu220" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu221" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').cls()('custom')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu222" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu223" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1 custom"&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu224" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="mix"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu225" resname="mix-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">mix</source>
</trans-unit>
      <trans-unit id="tu226" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>Array|Object<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu227" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>[]<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu228" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>mix<ept id="1">&lt;/code&gt;</ept> задает список БЭМ-сущностей, которые необходимо <bpt id="2">&lt;strong&gt;</bpt>примешать<ept id="2">&lt;/strong&gt;</ept> к данной сущности. Сущность, в рамках которой<ph id="3">&lt;br /&gt;</ph>выполняется примешивание, называется <bpt id="4">&lt;strong&gt;</bpt>базовой<ept id="4">&lt;/strong&gt;</ept>, а добавляемая сущность — <bpt id="5">&lt;strong&gt;</bpt>примешиваемой<ept id="5">&lt;/strong&gt;</ept>. Имеет смысл примешивание<ph id="6">&lt;br /&gt;</ph>блоков и элементов.</source>
</trans-unit>
      <trans-unit id="tu229" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Технически примешивание сводится к следующим операциям:</source>
</trans-unit>
      <trans-unit id="tu230" restype="x-li" xml:space="preserve">
<source xml:lang="ru">БЭМ-классы примешиваемой сущности добавляются в значение атрибута <bpt id="1">&lt;code&gt;</bpt>class<ept id="1">&lt;/code&gt;</ept> текущего элемента наряду с классами<ph id="2">&lt;br /&gt;</ph>базовой сущности;</source>
</trans-unit>
      <trans-unit id="tu231" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Если примешиваемая сущность имеет JavaScript-параметры, они добавляются в значение атрибута, заданного модой<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>jsAttr<ept id="2">&lt;/code&gt;</ept>. JavaScript-параметры передаются в виде хэша, ключом является имя примешиваемой сущности.</source>
</trans-unit>
      <trans-unit id="tu232" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все прочие составляющие HTML-элемента (тег, атрибуты и под.) генерируются на основании шаблонов для базовой сущности.</source>
</trans-unit>
      <trans-unit id="tu233" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значением тела шаблона для данной моды может быть:</source>
</trans-unit>
      <trans-unit id="tu234" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Массив<ept id="1">&lt;/strong&gt;</ept>, в котором содержится список объектов (хэшей), каждый из которых описывает БЭМ-сущности, которые<ph id="2">&lt;br /&gt;</ph>необходимо подмешать.</source>
</trans-unit>
      <trans-unit id="tu235" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Объект<ept id="1">&lt;/strong&gt;</ept>, описывающий примешиваемую БЭМ-сущность. Интерпретируется как массив, состоящий из одного элемента.</source>
</trans-unit>
      <trans-unit id="tu236" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фрагмент HTML, за генерацию которого отвечает мода <bpt id="1">&lt;code&gt;</bpt>mix<ept id="1">&lt;/code&gt;</ept>, выделен на рисунке:</source>
</trans-unit>
      <trans-unit id="tu238" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-mix</source>
</trans-unit>
      <trans-unit id="tu237" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_mix.png" [#$tu238] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu239" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>mix<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>mix()<ept id="2">&lt;/code&gt;</ept>) требуется, когда необходимо выполнить примешивание блока<ph id="3">&lt;br /&gt;</ph>или элемента на уровне шаблонизатора.</source>
</trans-unit>
      <trans-unit id="tu240" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Примешивание БЭМ-сущностей выполняется рекурсивно. Иными словами, если для примешиваемой сущности определен<ph id="2">&lt;br /&gt;</ph>шаблон, в котором к ней примешиваются еще какие-либо сущности, все такие сущности добавляются рекурсивно и классы<ph id="3">&lt;br /&gt;</ph>для них появятся в атрибуте <bpt id="4">&lt;code&gt;</bpt>class<ept id="4">&lt;/code&gt;</ept> базовой сущности (см. пример ниже).</source>
</trans-unit>
      <trans-unit id="tu241" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu242" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu243" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu244" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu245" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1'
  js: { p: 1 }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu246" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu247" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').mix()({
  block: 'b2',
  js: { p: 2 }
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu248" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu249" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1 b2 i-bem"
    data-bem="{
        'b1': { 'p': 1 },
        'b2': { 'p': 2 }
    }"&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu250" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu251" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu252" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu253" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').mix()([ { block: 'b2' } ])
block('b2').mix()([ { block: 'b3' } ])
block('b3').mix()([ { block: 'b4' } ])
block('b4').mix()([ { block: 'b1' } ])<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu254" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu255" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1 b2 b3 b4"&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu256" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="jsAttr"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu257" resname="jsattr-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">jsAttr</source>
</trans-unit>
      <trans-unit id="tu258" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>String<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu259" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>'data-bem'<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu260" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>jsAttr<ept id="1">&lt;/code&gt;</ept> определяет имя HTML-атрибута, в значении которого будут переданы параметры клиентского JavaScript для<ph id="2">&lt;br /&gt;</ph>данного блока. По умолчанию используется атрибут <bpt id="3">&lt;code&gt;</bpt>data-bem<ept id="3">&lt;/code&gt;</ept>. Фрагмент HTML, за генерацию которого отвечает мода <bpt id="4">&lt;code&gt;</bpt>jsAttr<ept id="4">&lt;/code&gt;</ept>,<ph id="5">&lt;br /&gt;</ph>выделен на рисунке:</source>
</trans-unit>
      <trans-unit id="tu262" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-jsattr</source>
</trans-unit>
      <trans-unit id="tu261" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_jsattr.png" [#$tu262] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu263" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>jsAttr<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>jsAttr()<ept id="2">&lt;/code&gt;</ept>) необходимо в том случае, если требуется передавать параметры JavaScript в нестандартном атрибуте.</source>
</trans-unit>
      <trans-unit id="tu264" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu265" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu266" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu267" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu268" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1',
  js: true
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu269" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu270" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').jsAttr()('ondblclick')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu271" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu272" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1 i-bem"
    ondblclick="{'b1': {} }"&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu273" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="attrs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu274" resname="attrs-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">attrs</source>
</trans-unit>
      <trans-unit id="tu275" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>Object<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu276" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>{}<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu277" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мода <bpt id="1">&lt;code&gt;</bpt>attrs<ept id="1">&lt;/code&gt;</ept> позволяет задать имена и значения произвольных HTML-атрибутов для данного элемента. По умолчанию<ph id="2">&lt;br /&gt;</ph>дополнительные атрибуты не генерируются. Фрагмент HTML, за генерацию которого отвечает мода <bpt id="3">&lt;code&gt;</bpt>attrs<ept id="3">&lt;/code&gt;</ept>, выделен на рисунке:</source>
</trans-unit>
      <trans-unit id="tu279" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-attrs</source>
</trans-unit>
      <trans-unit id="tu278" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_attrs.png" [#$tu279] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu280" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значением тела шаблона для данной моды должен быть объект (хеш), содержащий имена и значения атрибутов в качестве<ph id="1">&lt;br /&gt;</ph>пар ключ—значение. В качестве ключа должен выступать валидный идентификатор HTML-атрибута, а в качестве значения — строка или число. При выводе HTML специальные символы в значениях атрибутов экранируются вспомогательной функцией <bpt id="2">&lt;code&gt;</bpt>this._.attrEscape()<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu281" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если в качестве значения атрибута указать <bpt id="2">&lt;code&gt;</bpt>undefined<ept id="2">&lt;/code&gt;</ept>, этот атрибут не будет выведен в HTML-элементе.</source>
</trans-unit>
      <trans-unit id="tu282" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>attrs<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>attrs()<ept id="2">&lt;/code&gt;</ept>) необходимо во всех случаях, когда требуется:</source>
</trans-unit>
      <trans-unit id="tu283" restype="x-li" xml:space="preserve">
<source xml:lang="ru">добавить произвольные HTML-атрибуты на уровне шаблонизатора;</source>
</trans-unit>
      <trans-unit id="tu284" restype="x-li" xml:space="preserve">
<source xml:lang="ru">исключить указанные атрибуты из вывода, даже если они были определены во входном BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu285" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu286" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu287" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu288" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu289" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'logo',
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu290" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu291" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('logo')(
  tag()('img'),
  attrs()({ alt: 'logo', href: 'http://...' })
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu292" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu293" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;img alt="logo"
    href="http://..." /&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu294" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu295" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'input',
  disabled: true
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu296" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu297" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('input')(
  tag()('input'),
  attrs()({
    disabled: this.ctx.disabled ? 'disabled' : undefined
  })
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu298" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu299" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;input class="input"
    disabled="disabled"/&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu300" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        <bpt id="1">&lt;code preserve="1"&gt;</bpt>{ block: 'input' }<ept id="1">&lt;/code&gt;</ept>
    </source>
</trans-unit>
      <trans-unit id="tu301" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тот же шаблон</source>
</trans-unit>
      <trans-unit id="tu302" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu303" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;input class="input"/&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu304" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="content"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu305" resname="content-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">content</source>
</trans-unit>
      <trans-unit id="tu306" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Тип значения тела шаблона: <bpt id="2">&lt;code&gt;</bpt>BEMJSON<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu307" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;em&gt;</bpt>Значение по умолчанию: <bpt id="2">&lt;code&gt;</bpt>this.ctx.content<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/em&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu308" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках моды <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> вычисляется содержимое HTML-элемента, в качестве которого может выступать произвольный BEMJSON<ph id="2">&lt;br /&gt;</ph>(как строка или число, так и дерево БЭМ-сущностей). В качестве значения по умолчанию используется значение поля<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;code&gt;</bpt>content<ept id="4">&lt;/code&gt;</ept> контекстной БЭМ-сущности (<bpt id="5">&lt;code&gt;</bpt>this.ctx.content<ept id="5">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu309" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фрагмент HTML, за генерацию которого отвечает мода <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>, выделен на рисунке:</source>
</trans-unit>
      <trans-unit id="tu311" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">mode-content</source>
</trans-unit>
      <trans-unit id="tu310" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.github.com/bem/bem-core/v1/common.docs/reference/reference_mode_content.png" [#$tu311] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu312" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Определение шаблона по моде <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> (подпредикат <bpt id="2">&lt;code&gt;</bpt>content()<ept id="2">&lt;/code&gt;</ept>) необходимо, если:</source>
</trans-unit>
      <trans-unit id="tu313" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Необходимо на уровне шаблонизатора добавить содержимое для сущности, у которой отсутствует <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> во входном<ph id="2">&lt;br /&gt;</ph>BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu314" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Необходимо подменить содержимое сущности на уровне шаблонизатора.</source>
</trans-unit>
      <trans-unit id="tu315" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu316" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu317" restype="x-th" xml:space="preserve">
<source xml:lang="ru">HTML-результат</source>
</trans-unit>
      <trans-unit id="tu318" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu319" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'b1'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu320" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu321" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b1').content()({
  block: 'b2'
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu322" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu323" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>&lt;div class="b1"&gt;&lt;div class="b2"&gt;&lt;/div&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu324" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu325" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#inheritage"&gt;</bpt>Наследование<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu326" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#additionbem"&gt;</bpt>Добавление БЭМ-сущностей для задач верстки<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu327" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context_field"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu328" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поля контекста</source>
</trans-unit>
      <trans-unit id="tu329" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе работы шаблонизатор BEMHTML строит структуру данных, содержащую сведения об обрабатываемом узле BEMJSON<ph id="1">&lt;br /&gt;</ph>и о состоянии процесса обработки. Помимо этого в контексте доступен ряд вспомогательных функций BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu330" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В момент выполнения шаблона контекст доступен в виде объекта, обозначаемого ключевым словом <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>. Обращение<ph id="2">&lt;br /&gt;</ph>к контексту возможно как в предикате, так и в теле шаблона.</source>
</trans-unit>
      <trans-unit id="tu331" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Автор шаблонов имеет возможность определить любые дополнительные поля в контексте.</source>
</trans-unit>
      <trans-unit id="tu332" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все поля контекста можно разделить на две категории:</source>
</trans-unit>
      <trans-unit id="tu333" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Контекстно-зависимые<ept id="1">&lt;/strong&gt;</ept>, значение которых изменяется в зависимости от обрабатываемого узла и фазы процесса обработки.</source>
</trans-unit>
      <trans-unit id="tu334" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Контекстно-независимые<ept id="1">&lt;/strong&gt;</ept>, значение которых постоянно.</source>
</trans-unit>
      <trans-unit id="tu335" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu336" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#context"&gt;</bpt>Контекст<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu337" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="contextdependent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu338" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекстно-зависимые поля</source>
</trans-unit>
      <trans-unit id="tu340" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#contextdependent</source>
</trans-unit>
      <trans-unit id="tu339" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML расширяет набор <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#contextdependent" [#$tu340]&gt;</bpt>контекстно-зависимых полей BEM-XJST<ept id="1">&lt;/a&gt;</ept> следующими:<ph id="2">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu341" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu342" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu343" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu344" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu345" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu346" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu347" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu348" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu349" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu350" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu351" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.position<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu352" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu353" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Number<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu354" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu355" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Номер позиции текущей сущности среди ее сиблингов во входном BEMJSON-дереве (начиная с 1).</source>
</trans-unit>
      <trans-unit id="tu356" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu357" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu358" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu359" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this._buf<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu360" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu361" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Array<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu362" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu363" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Буфер HTML-результата. Обычно используется только для записи готовых HTML-фрагментов с использованием метода<ph id="1">&lt;br /&gt;</ph> <bpt id="2">&lt;code preserve="1"&gt;</bpt>this._buf.push()<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu364" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu365" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu366" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu367" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.isFirst()<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu368" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu369" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu370" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph> </source>
</trans-unit>
      <trans-unit id="tu371" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, является ли данная БЭМ-сущность первой среди сиблингов во входном БЭМ-дереве..</source>
</trans-unit>
      <trans-unit id="tu372" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu373" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.isLast()<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu374" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu375" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, является ли данная БЭМ-сущность последней среди сиблингов во входном БЭМ-дереве. Подробнее
    см. <bpt id="1">&lt;a preserve="1" href="#algorithmbem"&gt;</bpt>Алгоритм вычисления позиции БЭМ-сущности<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu376" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="algorithmbem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu377" resname="-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Алгоритм вычисления позиции БЭМ-сущности</source>
</trans-unit>
      <trans-unit id="tu378" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позиция в БЭМ-дереве (поле контекста <bpt id="1">&lt;code&gt;</bpt>this.position<ept id="1">&lt;/code&gt;</ept>) представляет собой натуральное число, соответствующее порядковому<ph id="2">&lt;br /&gt;</ph>номеру текущей (контекстной) БЭМ-сущности среди ее сиблингов в БЭМ-дереве (одноранговых сущностей).</source>
</trans-unit>
      <trans-unit id="tu379" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вычислении позиции:</source>
</trans-unit>
      <trans-unit id="tu380" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Нумеруются только те узлы обрабатываемого BEMJSON, которые соответствуют БЭМ-сущностям, прочим узлам<ph id="1">&lt;br /&gt;</ph>не соответствует никакой номер позиции.</source>
</trans-unit>
      <trans-unit id="tu381" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Позиции нумеруются начиная с 1.</source>
</trans-unit>
      <trans-unit id="tu382" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Нумерация производится в порядке обхода дерева (уплощенный список иерархического представления BEMJSON).</source>
</trans-unit>
      <trans-unit id="tu383" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример нумерации позиций во входном БЭМ-дереве:</source>
</trans-unit>
      <trans-unit id="tu384" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'page',          // this.position === 1
  content: [
    { block: 'head' },    // this.position === 1
    'text',               // this.position === undefined
    {
      block: 'menu',      // this.position === 2
      content: [
        { elem: 'item' }, // this.position === 1
        { elem: 'item' }, // this.position === 2
        { elem: 'item' }  // this.position === 3
      ]
    }
  ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu385" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> БЭМ-дерево может быть достроено в процессе выполнения шаблонов с помощью шаблонов по моде <bpt id="2">&lt;code&gt;</bpt>content<ept id="2">&lt;/code&gt;</ept> и шаблонов<ph id="3">&lt;br /&gt;</ph>по пустой моде. Такое динамическое изменение БЭМ-дерева учитывается при вычислении позиции.</source>
</trans-unit>
      <trans-unit id="tu386" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Функция определения последней БЭМ-сущности среди сиблингов <bpt id="1">&lt;code&gt;</bpt>this.isLast()<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;strong&gt;</bpt>не сработает<ept id="2">&lt;/strong&gt;</ept> в том случае, если<ph id="3">&lt;br /&gt;</ph>в массиве, содержащем одноранговые БЭМ-сущности, последний элемент не является БЭМ-сущностью. Например:</source>
</trans-unit>
      <trans-unit id="tu387" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>  block('b1')(
    content()([
        { block: 'b2' },
        { block: 'b3' }, // this.isLast() === false
        'text'
    ])
  )<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu388" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такое поведение объясняется тем, что в целях оптимизации BEMHTML не выполняет предварительного полного обхода<ph id="1">&lt;br /&gt;</ph>БЭМ-дерева. Поэтому в момент обработки блока <bpt id="2">&lt;code&gt;</bpt>b3<ept id="2">&lt;/code&gt;</ept> уже известна длина массива (<bpt id="3">&lt;code&gt;</bpt>b3<ept id="3">&lt;/code&gt;</ept> не является последним элементом),<ph id="4">&lt;br /&gt;</ph>но еще не известно, что последний элемент не является БЭМ-сущностью и не получит номера позиции.</source>
</trans-unit>
      <trans-unit id="tu389" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На практике описанный случай некорректного срабатывания <bpt id="1">&lt;code&gt;</bpt>this.isLast()<ept id="1">&lt;/code&gt;</ept> не должен порождать ошибок, так как проверка<ph id="2">&lt;br /&gt;</ph>на первую/последнюю БЭМ-сущность обычно применяется к автоматически сгенерированным спискам сущностей, в которые<ph id="3">&lt;br /&gt;</ph>не имеет смысла включать данные других типов.</source>
</trans-unit>
      <trans-unit id="tu390" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context_independent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu391" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекстно-независимые поля</source>
</trans-unit>
      <trans-unit id="tu392" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все контекстно-независимые поля сгруппированы в объекте <bpt id="1">&lt;code&gt;</bpt>this._<ept id="1">&lt;/code&gt;</ept> и представляют собой вспомогательные функции,<ph id="2">&lt;br /&gt;</ph>используемые при работе шаблонизатора. Автор шаблонов также может пользоваться этими функциями как в теле шаблонов, так и в предикатах.</source>
</trans-unit>
      <trans-unit id="tu394" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#context_independent</source>
</trans-unit>
      <trans-unit id="tu393" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML расширяет набор <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#context_independent" [#$tu394]&gt;</bpt>контекстно-независимых полей BEM-XJST<ept id="1">&lt;/a&gt;</ept> следующими:</source>
</trans-unit>
      <trans-unit id="tu395" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu396" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu397" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu398" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this._.isShortTag(String)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu399" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu400" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, принадлежит ли указанное имя тега к списку коротких тегов (не требующих закрывающего элемента  и рекурсивной обработки). Полный список коротких тегов:<bpt id="1">&lt;code preserve="1"&gt;</bpt>area<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code preserve="1"&gt;</bpt>base<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code preserve="1"&gt;</bpt>br<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code preserve="1"&gt;</bpt>col<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code preserve="1"&gt;</bpt>command<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code preserve="1"&gt;</bpt>embed<ept id="6">&lt;/code&gt;</ept>, <bpt id="7">&lt;code preserve="1"&gt;</bpt>hr<ept id="7">&lt;/code&gt;</ept>, <bpt id="8">&lt;code preserve="1"&gt;</bpt>img<ept id="8">&lt;/code&gt;</ept>, <bpt id="9">&lt;code preserve="1"&gt;</bpt>input<ept id="9">&lt;/code&gt;</ept>,
    <bpt id="10">&lt;code preserve="1"&gt;</bpt>keygen<ept id="10">&lt;/code&gt;</ept>, <bpt id="11">&lt;code preserve="1"&gt;</bpt>link<ept id="11">&lt;/code&gt;</ept>, <bpt id="12">&lt;code preserve="1"&gt;</bpt>meta<ept id="12">&lt;/code&gt;</ept>, <bpt id="13">&lt;code preserve="1"&gt;</bpt>param<ept id="13">&lt;/code&gt;</ept>, <bpt id="14">&lt;code preserve="1"&gt;</bpt>source<ept id="14">&lt;/code&gt;</ept>, <bpt id="15">&lt;code preserve="1"&gt;</bpt>wbr<ept id="15">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu401" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="examples"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu402" resname="---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Примеры и рецепты</source>
</trans-unit>
      <trans-unit id="tu403" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="select_template"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu404" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Выбор шаблона по условию</source>
</trans-unit>
      <trans-unit id="tu405" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu406" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>b-link<ept id="1">&lt;/code&gt;</ept> встречается в двух разновидностях:</source>
</trans-unit>
      <trans-unit id="tu407" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'b-link', content: 'ссылка без URL' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu408" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'b-link', url: '//ya.ru', content: 'ссылка с URL' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu409" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо по-разному оформить выходной HTML-элемент в зависимости от наличия/отсутствия поля <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept> в данных блока.</source>
</trans-unit>
      <trans-unit id="tu410" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu411" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Следует сделать проверку на наличие поля <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept> подпредикатом шаблона: выражение <bpt id="2">&lt;code&gt;</bpt>this.ctx.url<ept id="2">&lt;/code&gt;</ept> будет истинным, только<ph id="3">&lt;br /&gt;</ph>если поле <bpt id="4">&lt;code&gt;</bpt>url<ept id="4">&lt;/code&gt;</ept> определено.</source>
</trans-unit>
      <trans-unit id="tu412" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-link')(
  tag()('span'),
  match(function() { return this.ctx.url; })(
    tag()('a'),
    attrs()(function() { return { href: this.ctx.url }; })
  )
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu413" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Неправильно<ept id="1">&lt;/strong&gt;</ept> использовать для решения этой задачи условные конструкции JavaScript в теле шаблона:</source>
</trans-unit>
      <trans-unit id="tu414" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-link').tag()(function() { return this.ctx.url ? 'a' : 'span'; })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu415" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При компиляции это выражение не будет оптимизировано, что отрицательно скажется на скорости работы шаблона.</source>
</trans-unit>
      <trans-unit id="tu416" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu418" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#template</source>
</trans-unit>
      <trans-unit id="tu417" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#template" [#$tu418]&gt;</bpt>Синтаксис шаблонов<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu419" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inheritage"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu420" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Наследование</source>
</trans-unit>
      <trans-unit id="tu421" resname="-1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu423" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/filesystem/#levels</source>
</trans-unit>
      <trans-unit id="tu422" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На разных <bpt id="1">&lt;a href="https://ru.bem.info/method/filesystem/#levels" [#$tu423]&gt;</bpt>уровнях переопределения<ept id="1">&lt;/a&gt;</ept><ph id="2">&lt;br /&gt;</ph>определены два различных шаблона на одну и ту же БЭМ-сущность (<bpt id="3">&lt;code&gt;</bpt>block b1<ept id="3">&lt;/code&gt;</ept>). Каждый из шаблонов определяет своё<ph id="4">&lt;br /&gt;</ph>содержимое по моде <bpt id="5">&lt;code&gt;</bpt>content<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu424" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо на втором уровне переопределения <bpt id="1">&lt;strong&gt;</bpt>унаследовать<ept id="1">&lt;/strong&gt;</ept> содержимое, определённое на первом уровне, и добавить<ph id="2">&lt;br /&gt;</ph>дополнительное. Требуется аналог <bpt id="3">&lt;code&gt;</bpt>&lt;xsl:apply-imports/&gt;<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu425" resname="-1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu426" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMHTML есть аналог <bpt id="1">&lt;code&gt;</bpt>&lt;xsl:apply-imports/&gt;<ept id="1">&lt;/code&gt;</ept>. Реализация основывается на возможности заново запустить в шаблоне<ph id="2">&lt;br /&gt;</ph>процедуру применения шаблонов к текущему контексту (<bpt id="3">&lt;code&gt;</bpt>apply()<ept id="3">&lt;/code&gt;</ept>). Таким образом можно вызвать тот шаблон, который был<ph id="4">&lt;br /&gt;</ph>определен для данного контекста (БЭМ-сущности, моды и т.п.) ранее или на другом уровне переопределения.</source>
</trans-unit>
      <trans-unit id="tu427" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вычислении выражения <bpt id="1">&lt;code&gt;</bpt>apply()<ept id="1">&lt;/code&gt;</ept> возвращается результат, полученный в ходе применения ранее определенного шаблона.<ph id="2">&lt;br /&gt;</ph>Для избежания бесконечного цикла необходимо добавить подпредикат проверки наличия в контексте какого-то флага (например,<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;code&gt;</bpt>_myGuard<ept id="4">&lt;/code&gt;</ept>), который будет выставлен при выполнении <bpt id="5">&lt;code&gt;</bpt>apply()<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu428" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// шаблон на первом уровне переопределения
block('b1').content()('text1')

// шаблон на втором уровне переопределения
block('b1').match(function() { return !this._myGuard; }).content()(function() {
  return [
    apply({ _myGuard: true }),  // получаем предыдущее значение content
    'text2'
  ];
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu429" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В результате применения шаблонов к блоку <bpt id="1">&lt;code&gt;</bpt>b1<ept id="1">&lt;/code&gt;</ept> будет получен HTML:</source>
</trans-unit>
      <trans-unit id="tu430" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="b1"&gt;text1text2&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu431" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве альтернативного решения можно использовать конструкцию <bpt id="1">&lt;code&gt;</bpt>applyNext<ept id="1">&lt;/code&gt;</ept>, которая автоматически генерирует уникальное имя флага против<ph id="2">&lt;br /&gt;</ph>зацикливания.</source>
</trans-unit>
      <trans-unit id="tu432" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').content()('text1');

block('b1').content()(function() {
  return [
      applyNext(), // получаем предыдущее значение content
      'text2'
  ];
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu433" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu435" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applynext</source>
</trans-unit>
      <trans-unit id="tu434" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applynext" [#$tu435]&gt;</bpt>Конструкция applyNext<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu436" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="parentblock"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu437" resname="-------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Выбор шаблона в зависимости от родительского элемента</source>
</trans-unit>
      <trans-unit id="tu438" resname="-2-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu439" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для реализации языка разметки, аналогичного DocBook, нужны разные шаблоны для блока <bpt id="1">&lt;code&gt;</bpt>para<ept id="1">&lt;/code&gt;</ept> в зависимости от контекста, в котором встречается данный блок. В частности, если блок <bpt id="2">&lt;code&gt;</bpt>para<ept id="2">&lt;/code&gt;</ept> вложен в блок <bpt id="3">&lt;code&gt;</bpt>listitem<ept id="3">&lt;/code&gt;</ept>, для него не нужно генерировать тег <bpt id="4">&lt;code&gt;</bpt>&lt;p&gt;<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu440" resname="-2-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu441" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMHTML (а точнее, в XJST) нет неявного сохранения контекста для использования в предикатах — это сделано из соображений производительности.</source>
</trans-unit>
      <trans-unit id="tu442" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы реализовать в BEMHTML контекстную зависимость, необходимо явным образом сохранить информацию о контексте, которая потребуется при обработке вложенных блоков.</source>
</trans-unit>
      <trans-unit id="tu443" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сохранение информации о контексте нужно реализовать в шаблоне для блока <bpt id="1">&lt;code&gt;</bpt>listitem<ept id="1">&lt;/code&gt;</ept>. Используем флаг <bpt id="2">&lt;code&gt;</bpt>inListItem<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu444" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('listitem').match(function() { return !this.inListItem; })(function() { return apply({ inListItem: true }); });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu445" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обратите внимание, на подпредикат <bpt id="1">&lt;code&gt;</bpt>!this.inListItem<ept id="1">&lt;/code&gt;</ept>, позволяющий избежать зацикливания при рекурсивном вызове процедуры применения шаблонов в модифицированном контексте (<bpt id="2">&lt;code&gt;</bpt>apply({inListItem:true})<ept id="2">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu446" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для обработки <bpt id="1">&lt;code&gt;</bpt>para<ept id="1">&lt;/code&gt;</ept>, вложенного в <bpt id="2">&lt;code&gt;</bpt>listitem<ept id="2">&lt;/code&gt;</ept>, достаточно проверить наличие в контексте флага <bpt id="3">&lt;code&gt;</bpt>inListItem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu447" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('para').match(function() { return this.inListItem; }).tag()('');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu448" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пустая строка в качестве значения шаблона по моде <bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept> означает — не генерировать HTML-элемента для этого блока.</source>
</trans-unit>
      <trans-unit id="tu449" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="wrappingunit"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu450" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Оборачивание блока в другой блок</source>
</trans-unit>
      <trans-unit id="tu451" resname="-3-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu452" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо вложить блок (<bpt id="1">&lt;code&gt;</bpt>b-inner<ept id="1">&lt;/code&gt;</ept>) в другой блок (<bpt id="2">&lt;code&gt;</bpt>b-wrapper<ept id="2">&lt;/code&gt;</ept>) при выполнении шаблона. Таким образом, одному входному<ph id="3">&lt;br /&gt;</ph>блоку будет соответствовать два вложенных друг в друга блока.</source>
</trans-unit>
      <trans-unit id="tu453" resname="-3-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu454" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При обработке блока <bpt id="1">&lt;code&gt;</bpt>b-inner<ept id="1">&lt;/code&gt;</ept> в шаблоне по моде <bpt id="2">&lt;code&gt;</bpt>default<ept id="2">&lt;/code&gt;</ept> (генерация целого элемента) следует модифицировать фрагмент<ph id="3">&lt;br /&gt;</ph>входного дерева <bpt id="4">&lt;code&gt;</bpt>this.ctx<ept id="4">&lt;/code&gt;</ept> (добавить блок <bpt id="5">&lt;code&gt;</bpt>b-wrapper<ept id="5">&lt;/code&gt;</ept>). Для этого используется конструкция <bpt id="6">&lt;code&gt;</bpt>applyCtx()<ept id="6">&lt;/code&gt;</ept>, которая присваивает <bpt id="7">&lt;code&gt;</bpt>this.ctx<ept id="7">&lt;/code&gt;</ept> и применяет шаблоны по пустой моде.</source>
</trans-unit>
      <trans-unit id="tu455" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-inner').def()(function() {
    return applyCtx({ block: 'b-wrapper', content: this.ctx });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu456" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для избежания бесконечного цикла необходимо при вызове выражения <bpt id="1">&lt;code&gt;</bpt>applyCtx()<ept id="1">&lt;/code&gt;</ept> проверять наличие в контексте специального флага (<bpt id="2">&lt;code&gt;</bpt>_wrapped<ept id="2">&lt;/code&gt;</ept>), который будет выставлен при выполнении <bpt id="3">&lt;code&gt;</bpt>applyCtx()<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu457" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Конструкцию <bpt id="2">&lt;code&gt;</bpt>applyCtx()<ept id="2">&lt;/code&gt;</ept> можно применять для <bpt id="3">&lt;strong&gt;</bpt>замены<ept id="3">&lt;/strong&gt;</ept> БЭМ-сущности в исходном дереве, если не использовать<ph id="4">&lt;br /&gt;</ph>исходное содержимое блока (<bpt id="5">&lt;code&gt;</bpt>this.ctx<ept id="5">&lt;/code&gt;</ept>) в аргументе <bpt id="6">&lt;code&gt;</bpt>applyCtx()<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu458" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu460" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu459" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu460]&gt;</bpt>Конструкция applyCtx<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu461" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="additionbem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu462" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Добавление БЭМ-сущностей для задач вёрстки</source>
</trans-unit>
      <trans-unit id="tu463" resname="-4-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu464" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо сверстать блок с закруглёнными уголками, работающий во всех браузерах (без использования CSS3).</source>
</trans-unit>
      <trans-unit id="tu465" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входной BEMJSON может быть таким:</source>
</trans-unit>
      <trans-unit id="tu466" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'box', content: 'text' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu467" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Реализация уголков требует добавления к блоку четырех дополнительных элементов. Поскольку данные элементы отражают<ph id="1">&lt;br /&gt;</ph>детали HTML-верстки, ими не следует загромождать входное БЭМ-дерево. Добавить эти элементы следует на уровне<ph id="2">&lt;br /&gt;</ph>BEMHTML-шаблона. Финальное БЭМ-дерево должно выглядеть так:</source>
</trans-unit>
      <trans-unit id="tu468" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'box',
    content: {
        elem: 'left-top',
        content: {
            elem: 'right-top',
            content: {
                elem: 'right-bottom',
                content: {
                    elem: 'left-bottom',
                    content: 'text'
                }
            }
        }
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu469" resname="-4-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu470" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для модификации входного БЭМ-дерева на уровне BEMHTML потребуется написать шаблон по моде <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> для блока <bpt id="2">&lt;code&gt;</bpt>box<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Подмена фрагмента входного БЭМ-дерева (добавление необходимых элементов) выполняется с помощью конструкции <bpt id="4">&lt;code&gt;</bpt>applyCtx()<ept id="4">&lt;/code&gt;</ept>,<ph id="5">&lt;br /&gt;</ph>а подстановка исходного содержимого — с помощью конструкции <bpt id="6">&lt;code&gt;</bpt>applyNext()<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu471" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML-шаблон, выполняющий это преобразование:</source>
</trans-unit>
      <trans-unit id="tu472" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('box').content()(function() {
  return applyCtx({
    elem: 'left-top',
      content: {
          elem: 'right-top',
          content: {
              elem: 'right-bottom',
              content: {
                  elem: 'left-bottom',
                  content: applyNext()
              }
          }
      }
  });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu473" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Хеш с переменной <bpt id="2">&lt;code&gt;</bpt>ctx._processed<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>true<ept id="3">&lt;/code&gt;</ept> передается методу <bpt id="4">&lt;code&gt;</bpt>applyCtx<ept id="4">&lt;/code&gt;</ept> первым параметром, чтобы выполнить метод в модифицированном контексте.</source>
</trans-unit>
      <trans-unit id="tu474" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu476" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#apply</source>
</trans-unit>
      <trans-unit id="tu475" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#apply" [#$tu476]&gt;</bpt>Конструкция apply<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu478" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applynext</source>
</trans-unit>
      <trans-unit id="tu477" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applynext" [#$tu478]&gt;</bpt>Конструкция applyNext<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu480" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu479" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu480]&gt;</bpt>Конструкция applyCtx<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu481" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="use_bem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu482" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Использование позиции БЭМ-сущности</source>
</trans-unit>
      <trans-unit id="tu483" resname="-5-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu484" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо пронумеровать пункты меню, начиная с 1. В текст каждого элемента меню нужно добавить его порядковый номер<ph id="1">&lt;br /&gt;</ph>с точкой.</source>
</trans-unit>
      <trans-unit id="tu485" resname="-5-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu486" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Используем механизм вычисления позиции БЭМ-сущности среди сиблингов (поле контекста <bpt id="1">&lt;code&gt;</bpt>this.position<ept id="1">&lt;/code&gt;</ept>).<ph id="2">&lt;br /&gt;</ph>Входные данные могут выглядеть так:</source>
</trans-unit>
      <trans-unit id="tu487" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'menu',
  content: [
    { elem: 'item', content: 'aaa' },
    { elem: 'item', content: 'bbb' },
    { elem: 'item', content: 'ccc' }
  ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu488" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для выполнения нумерации следует написать шаблон по моде <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> на пункт меню, в котором содержание элемента будет<ph id="2">&lt;br /&gt;</ph>составлено из номера позиции, разделителя (точки с пробелом) и исходного текста элемента (полученного с помощью<ph id="3">&lt;br /&gt;</ph>конструкции <bpt id="4">&lt;code&gt;</bpt>applyNext()<ept id="4">&lt;/code&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu489" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('menu')(
  tag()('ul'),
  elemMatch('item')(
    tag()('li'),
    content()(function() {
      return [
        this.position, '. ',
        applyNext()
      ];
    })
));<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu490" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu491" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#content"&gt;</bpt>Мода content<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu493" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applynext</source>
</trans-unit>
      <trans-unit id="tu492" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applynext" [#$tu493]&gt;</bpt>Конструкция applyNext<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu494" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="check_predicate"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu495" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Проверка подпредикатов в определенном порядке</source>
</trans-unit>
      <trans-unit id="tu496" resname="-6-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu497" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо проверять подпредикаты шаблона в строго определенном порядке, например, сначала проверить наличие в контексте<ph id="1">&lt;br /&gt;</ph>объекта <bpt id="2">&lt;code&gt;</bpt>this.world<ept id="2">&lt;/code&gt;</ept>, а затем проверить значение поля в этом объекте <bpt id="3">&lt;code&gt;</bpt>this.world.answer<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu498" resname="-6-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu499" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Воспользуемся тем, что подпредикат шаблона BEMHTML может быть произвольным JavaScript-выражением и запишем его<ph id="1">&lt;br /&gt;</ph>в следующей форме:</source>
</trans-unit>
      <trans-unit id="tu500" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.world &amp;&amp; this.world.answer === 42; })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu501" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Недостаток этого решения в том, что при компиляции это выражение не будет оптимизировано, что отрицательно скажется<ph id="1">&lt;br /&gt;</ph>на скорости работы шаблона. В большинстве случаев можно и нужно избегать необходимости в строгом порядке проверки<ph id="2">&lt;br /&gt;</ph>подпредикатов.</source>
</trans-unit>
      <trans-unit id="tu502" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="binding_html"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu503" resname="-html---id-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Связывание HTML-элементов по id</source>
</trans-unit>
      <trans-unit id="tu504" resname="-7-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Задача</source>
</trans-unit>
      <trans-unit id="tu505" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо для входного блока <bpt id="1">&lt;code&gt;</bpt>input<ept id="1">&lt;/code&gt;</ept> сгенерировать пару HTML-элементов <bpt id="2">&lt;code&gt;</bpt>&lt;label&gt;<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>&lt;input&gt;<ept id="3">&lt;/code&gt;</ept>, так чтобы значение<ph id="4">&lt;br /&gt;</ph>атрибута <bpt id="5">&lt;code&gt;</bpt>input@id<ept id="5">&lt;/code&gt;</ept> было сгенерировано автоматически, уникально и совпадало со значением атрибута <bpt id="6">&lt;code&gt;</bpt>label@for<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu506" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входные данные могут выглядеть так:</source>
</trans-unit>
      <trans-unit id="tu507" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'input',
  label: 'My Input',
  content: 'my value'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu508" resname="-7-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Решение</source>
</trans-unit>
      <trans-unit id="tu509" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для генерации уникального идентификатора, подходящего в качестве значения атрибута <bpt id="1">&lt;code&gt;</bpt>id<ept id="1">&lt;/code&gt;</ept>, воспользуемся вспомогательной<ph id="2">&lt;br /&gt;</ph>функцией контекста <bpt id="3">&lt;code&gt;</bpt>this.generateId()<ept id="3">&lt;/code&gt;</ept>. Чтобы сгенерировать два HTML-элемента на основании одного входного блока, потребуется два шаблона:</source>
</trans-unit>
      <trans-unit id="tu510" restype="x-li" xml:space="preserve">
<source xml:lang="ru">шаблон по моде <bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept>, указывающий пустую строку, чтобы отменить генерацию HTML-элемента для данного блока,<ph id="2">&lt;br /&gt;</ph>но обработать содержимое;</source>
</trans-unit>
      <trans-unit id="tu511" restype="x-li" xml:space="preserve">
<source xml:lang="ru">шаблон по моде <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>, в котором будут сформированы два необходимых элемента и их атрибуты.</source>
</trans-unit>
      <trans-unit id="tu512" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('input')(
  tag()(''),
  content()(function() {
    return [
      {
        tag: 'label',
        attrs: { 'for': this.generateId() },
        content: this.ctx.label
      },
      {
        tag: 'input',
        attrs: {
          id: this.generateId(),
          value: this.ctx.content
        }
      }
    ];
  })
);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu513" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="links"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu514" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Смотрите также</source>
</trans-unit>
      <trans-unit id="tu516" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/#examples</source>
</trans-unit>
      <trans-unit id="tu515" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/#examples" [#$tu516]&gt;</bpt>Примеры и рецепты BEMTREE<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu518" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://tech.yandex.ru/events/bemup/29-november-2013/talks/1413/</source>
</trans-unit>
      <trans-unit id="tu517" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Мастер-класс <bpt id="1">&lt;a href="https://tech.yandex.ru/events/bemup/29-november-2013/talks/1413/" [#$tu518]&gt;</bpt>Динамический БЭМ-сайт на Node.js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu520" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/</source>
</trans-unit>
      <trans-unit id="tu519" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/" [#$tu520]&gt;</bpt>Шаблонизация данных в bem-core<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu522" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/</source>
</trans-unit>
      <trans-unit id="tu521" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/" [#$tu522]&gt;</bpt>BEMTREE<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu524" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu523" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu524]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/changelog/changelog.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="--id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">История изменений</source>
</trans-unit>
      <trans-unit id="tu2" resname="section-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.7.0</source>
</trans-unit>
      <trans-unit id="tu3" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1102</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> добавлен новый метод <bpt id="2">&lt;code&gt;</bpt>detach<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/1102" [#$tu5]&gt;</bpt>#1102<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/873</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> добавлена поддержка вложенных миксов (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/873" [#$tu7]&gt;</bpt>873<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/961</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/980</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/982</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> добавлены незначительные оптимизации, связанные с эскейпингом аттрибутов (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/961" [#$tu9]&gt;</bpt>#961<ept id="2">&lt;/a&gt;</ept>), (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/980" [#$tu10]&gt;</bpt>#980<ept id="3">&lt;/a&gt;</ept>) и (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/982" [#$tu11]&gt;</bpt>#982<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1021</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В BEMHTML-шаблоны добавлена поддержка <bpt id="1">&lt;a href="https://github.com/bem/bem-xjst" [#$tu13]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept> 2.x (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/1021" [#$tu14]&gt;</bpt>#1021<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/722</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>clearfix<ept id="1">&lt;/code&gt;</ept> оптимизирован для работы в поддерживаемых библиотекой браузерах IE (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/722" [#$tu16]&gt;</bpt>#722<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/999</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> обновлен до версий 2.1.4 и 1.11.3 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/999" [#$tu18]&gt;</bpt>#999<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu19" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/583</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, из-за которой метод <bpt id="2">&lt;code&gt;</bpt>findElem<ept id="2">&lt;/code&gt;</ept> не обновлял кэш ранее найденных<ph id="3">&lt;br /&gt;</ph> элементов (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/583" [#$tu21]&gt;</bpt>#583<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1037</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, приводящая к неправильной работе метода <bpt id="2">&lt;code&gt;</bpt>dropElemCache<ept id="2">&lt;/code&gt;</ept> в некоторых граничных<ph id="3">&lt;br /&gt;</ph> случаях (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/1037" [#$tu23]&gt;</bpt>#1037<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1090</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, из-за которой вызов метода <bpt id="2">&lt;code&gt;</bpt>setMod<ept id="2">&lt;/code&gt;</ept> не выставлял CSS-классы блоку в случае, если<ph id="3">&lt;br /&gt;</ph> на DOM-узеле был подмешан блок с пересекающимся окончанием в имени (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/1090" [#$tu25]&gt;</bpt>#1090<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1020</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, из-за которой на touch-уровнях не работало специализированное поле <bpt id="2">&lt;code&gt;</bpt>zoom<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/1020" [#$tu27]&gt;</bpt>#1020<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1002</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>keyboard__codes<ept id="1">&lt;/code&gt;</ept>. Клавиши <bpt id="2">&lt;code&gt;</bpt>insert<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>delete<ept id="3">&lt;/code&gt;</ept> были описаны неправильными<ph id="4">&lt;br /&gt;</ph> кодами (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/1002" [#$tu29]&gt;</bpt>#1002<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/b1dc50c621b5659cff33daa4dd3f210b67cf25e1</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой неверно интерпретировались вложенные вызовы <bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/commit/b1dc50c621b5659cff33daa4dd3f210b67cf25e1" [#$tu31]&gt;</bpt>b1dc50c<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/1066</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__events_type_pointernative<ept id="1">&lt;/code&gt;</ept>, из-за которой события работали некорректно<ph id="2">&lt;br /&gt;</ph> в браузерах IE 11 и Edge (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/1066" [#$tu33]&gt;</bpt>#1066<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu34" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена русская докуметация для всех блоков библиотеки. Документация доступна по адресу <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/" class="uri" [#$tu36] class="uri"&gt;</bpt>https://ru.bem.info/libs/bem-core/<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Прочие улучшения в документации к библиотеке.</source>
</trans-unit>
      <trans-unit id="tu38" resname="section-1-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.6.0</source>
</trans-unit>
      <trans-unit id="tu39" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/859</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Предоставление модуля <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> теперь происходит после наступления события DOM ready (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/859" [#$tu41]&gt;</bpt>#859<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/890</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Методы <bpt id="1">&lt;code&gt;</bpt>setMod<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>hasMod<ept id="2">&lt;/code&gt;</ept> модуля <bpt id="3">&lt;code&gt;</bpt>i-bem__dom<ept id="3">&lt;/code&gt;</ept> теперь явно преобразуют параметр <bpt id="4">&lt;code&gt;</bpt>modVal<ept id="4">&lt;/code&gt;</ept> к строке,<ph id="5">&lt;br /&gt;</ph> если переданное значение не типа string или boolean (<bpt id="6">&lt;a href="https://github.com/bem/bem-core/issues/890" [#$tu43]&gt;</bpt>#890<ept id="6">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/882</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В блок <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> добавлена возможность прокидывать атрибут <bpt id="2">&lt;code&gt;</bpt>nonce<ept id="2">&lt;/code&gt;</ept>, для корректной работы инлайн-скриптов, в соответствии<ph id="3">&lt;br /&gt;</ph> со спецификацией Content Security Policy (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/882" [#$tu45]&gt;</bpt>#882<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/511</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлены шаблоны <bpt id="1">&lt;code&gt;</bpt>page__conditional-comment<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/511" [#$tu47]&gt;</bpt>#551<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/837</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> обновлен до версии 0.4.8 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/837" [#$tu49]&gt;</bpt>#837<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu50" resname="------1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/792</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой CSS-класс блока дублировался, в случае микса с этим же блоком<ph id="2">&lt;br /&gt;</ph> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/792" [#$tu52]&gt;</bpt>#792<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/da5fdb9923e7e83e3ef9cd31aefc3967ff55fd3c</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>loader_type_bundle<ept id="1">&lt;/code&gt;</ept>, из-за которой функция-обработчик успешного результата могла выполняться<ph id="2">&lt;br /&gt;</ph> после наступления таймаута (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/commit/da5fdb9923e7e83e3ef9cd31aefc3967ff55fd3c" [#$tu54]&gt;</bpt>67ff55f<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/852</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, в некоторых случаях, приводящая к неправильной интерпретации строковых аргументов<ph id="2">&lt;br /&gt;</ph> в методах <bpt id="3">&lt;code&gt;</bpt>append<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>prepend<ept id="4">&lt;/code&gt;</ept> и др. (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/852" [#$tu56]&gt;</bpt>#852<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/862</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_winresize<ept id="1">&lt;/code&gt;</ept>, из-за которой неправильно определятся браузер MSIE (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/862" [#$tu58]&gt;</bpt>#862<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/910</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>object<ept id="1">&lt;/code&gt;</ept>, из-за которой метод <bpt id="2">&lt;code&gt;</bpt>extend<ept id="2">&lt;/code&gt;</ept> неправильно обрабатывал <bpt id="3">&lt;code&gt;</bpt>null<ept id="3">&lt;/code&gt;</ept> в качестве значения<ph id="4">&lt;br /&gt;</ph> аргумента <bpt id="5">&lt;code&gt;</bpt>target<ept id="5">&lt;/code&gt;</ept> (<bpt id="6">&lt;a href="https://github.com/bem/bem-core/issues/910" [#$tu60]&gt;</bpt>#910<ept id="6">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/794</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>. Из BEMJSON было невозможно отключить добавление meta-тега <bpt id="2">&lt;code&gt;</bpt>x-ua-compatible<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/794" [#$tu62]&gt;</bpt>#794<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu63" resname="------1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/000c6af02bfae4506fa460168de16d4e27422393</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Таймаут в <bpt id="1">&lt;code&gt;</bpt>loader_type_bundle<ept id="1">&lt;/code&gt;</ept> увеличен до 30000 мс (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/commit/000c6af02bfae4506fa460168de16d4e27422393" [#$tu65]&gt;</bpt>4e27422<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены незначительные ошибки в русской документации блоков.</source>
</trans-unit>
      <trans-unit id="tu67" resname="section-2-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.5.1</source>
</trans-unit>
      <trans-unit id="tu68" resname="------2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/792</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__pointerpress<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>jquery__pointerrelease<ept id="2">&lt;/code&gt;</ept> из-за которой события не работали в браузере<ph id="3">&lt;br /&gt;</ph> Internet Explorer 8 (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/792" [#$tu70]&gt;</bpt>#792<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/801</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__pointernative<ept id="1">&lt;/code&gt;</ept>. События <bpt id="2">&lt;code&gt;</bpt>pointerenter<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>pointerleave<ept id="3">&lt;/code&gt;</ept> не должны всплывать<ph id="4">&lt;br /&gt;</ph> по DOM-дереву (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/801" [#$tu72]&gt;</bpt>#801<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/808</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>loader_type_bundle<ept id="1">&lt;/code&gt;</ept>. После загрузки, CSS-бандл добавлялся в самый верх HTML-тега <bpt id="2">&lt;code&gt;</bpt>&lt;head&gt;<ept id="2">&lt;/code&gt;</ept>, из-за чего<ph id="3">&lt;br /&gt;</ph> CSS-правила из содержимого бандла могли работать не корректно (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/808" [#$tu74]&gt;</bpt>#808<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/734</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в BH-шаблоне <bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept>. Шаблон не позволял вставить содержимое блока из входного<ph id="2">&lt;br /&gt;</ph> BEMJSON (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/734" [#$tu76]&gt;</bpt>#734<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/781</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, приводящая к неработоспособности добавленных на страницу условных комментариев для браузера<ph id="2">&lt;br /&gt;</ph> Internet Explorer (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/781" [#$tu78]&gt;</bpt>#781<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu79" resname="------2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/788</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> обновлен до версий 2.1.3 и 1.11.2 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/788" [#$tu81]&gt;</bpt>#778<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена документация на русском языке для модулей: <bpt id="1">&lt;code&gt;</bpt>clearfix<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>cookie<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>identify<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>idle<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>inherit<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>keyboard<ept id="6">&lt;/code&gt;</ept>,<ph id="7">&lt;br /&gt;</ph><bpt id="8">&lt;code&gt;</bpt>loader<ept id="8">&lt;/code&gt;</ept>, <bpt id="9">&lt;code&gt;</bpt>next-tick<ept id="9">&lt;/code&gt;</ept>, <bpt id="10">&lt;code&gt;</bpt>string<ept id="10">&lt;/code&gt;</ept> and <bpt id="11">&lt;code&gt;</bpt>tick<ept id="11">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена документация на русском языке для <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлено руководство на английском языке по технологиям BEMHTML и BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu85" resname="section-3-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.5.0</source>
</trans-unit>
      <trans-unit id="tu86" resname="--2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://www.mozilla.org/MPL/2.0/</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/443</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Код библиотеки переведен на использование лицензии <bpt id="1">&lt;a href="https://www.mozilla.org/MPL/2.0/" [#$tu88]&gt;</bpt>MPL 2.0<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/443" [#$tu89]&gt;</bpt>#443<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/672</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуль <bpt id="1">&lt;code&gt;</bpt>loader_type_js<ept id="1">&lt;/code&gt;</ept> добавлена возможность указывать функцию-обработчик ошибок (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/672" [#$tu91]&gt;</bpt>#672<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/602</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Класс <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> добавлен в export-параметры функции <bpt id="2">&lt;code&gt;</bpt>oninit<ept id="2">&lt;/code&gt;</ept> в базовых шаблонах <bpt id="3">&lt;code&gt;</bpt>i-bem.bemtree<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/602" [#$tu93]&gt;</bpt>#602<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/706</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> BEMTREE добавлен статический метод <bpt id="2">&lt;code&gt;</bpt>reapply<ept id="2">&lt;/code&gt;</ept> по аналогии с BEMHTML (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/706" [#$tu95]&gt;</bpt>#706<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/689</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлены bh-шаблоны блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> для уровней touch (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/689" [#$tu97]&gt;</bpt>#689<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/709</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru">npm-модуль <bpt id="1">&lt;a href="https://github.com/bem/bem-xjst" [#$tu99]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept> обновлен до версии 0.9.0 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/709" [#$tu100]&gt;</bpt>#709<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu101" resname="------3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/699</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>, из-за которой метод <bpt id="2">&lt;code&gt;</bpt>findBlocksInside<ept id="2">&lt;/code&gt;</ept> мог возвращать блоки, которые еще не были<ph id="3">&lt;br /&gt;</ph> инициализированы (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/699" [#$tu103]&gt;</bpt>#699<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/694</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept>, позволявшая вызвать метод <bpt id="2">&lt;code&gt;</bpt>stop<ept id="2">&lt;/code&gt;</ept> без освобождения внутреннего таймера (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/694" [#$tu105]&gt;</bpt>#694<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/633</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой на элементы блока добавлялся CSS-класс <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/633" [#$tu107]&gt;</bpt>#633<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/commit/438ebb8f828e26977592e26511e8aad15176d7a4</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в технологии <bpt id="1">&lt;code&gt;</bpt>html-from-bemtree<ept id="1">&lt;/code&gt;</ept>, из-за которой в контексте BEMTREE-шаблонов не было глобальных объектов<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>vow<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>console<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>setTimeout<ept id="5">&lt;/code&gt;</ept> (<bpt id="6">&lt;a href="https://github.com/bem/bem-core/commit/438ebb8f828e26977592e26511e8aad15176d7a4" [#$tu109]&gt;</bpt>#438ebb8<ept id="6">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu110" resname="------3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлено английское руководство по технологии BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена русская документация для i-bem.js. Теперь документация соответсвует текущему API библиотеки.</source>
</trans-unit>
      <trans-unit id="tu113" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена документация для технологий BEMHTML/BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu114" resname="section-4-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.4.0</source>
</trans-unit>
      <trans-unit id="tu115" resname="--3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu118" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bemhtml-compat</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-li" xml:space="preserve">
<source xml:lang="ru">npm-модуль <bpt id="1">&lt;a href="https://github.com/bem/bem-xjst" [#$tu117]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept> обновлен до версии 0.8.0; <bpt id="2">&lt;a href="https://github.com/bem/bemhtml-compat" [#$tu118]&gt;</bpt>bemhtml-compat<ept id="2">&lt;/a&gt;</ept><ph id="3">&lt;br /&gt;</ph> обновлен до 0.0.11.</source>
</trans-unit>
      <trans-unit id="tu119" resname="------4-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/607</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointerpressrelease<ept id="1">&lt;/code&gt;</ept>, из-за которой события <bpt id="2">&lt;code&gt;</bpt>pointerpress<ept id="2">&lt;/code&gt;</ept> / <bpt id="3">&lt;code&gt;</bpt>pointerrelease<ept id="3">&lt;/code&gt;</ept> генерировались<ph id="4">&lt;br /&gt;</ph> на нажатие любой кнопки мыши (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/607" [#$tu121]&gt;</bpt>#607<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/608</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom.js<ept id="1">&lt;/code&gt;</ept>, из-за которой в некоторых случаях не происходил вызов базового метода<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>live<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/608" [#$tu123]&gt;</bpt>#608<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu124" resname="------4-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена английская документация на JS-синтаксис BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu126" resname="section-5-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.3.0</source>
</trans-unit>
      <trans-unit id="tu127" resname="--4-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.polymer-project.org/</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/567</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена новая реализация pointer-событий на основе полифилов из <bpt id="1">&lt;a href="http://www.polymer-project.org/" [#$tu129]&gt;</bpt>Polymer<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/567" [#$tu130]&gt;</bpt>#567<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/568</source>
</trans-unit>
      <trans-unit id="tu131" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность в <bpt id="1">&lt;code&gt;</bpt>i-bem__dom.js<ept id="1">&lt;/code&gt;</ept> указывать дополнительные данные о событии в методах <bpt id="2">&lt;code&gt;</bpt>bindTo*<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/568" [#$tu132]&gt;</bpt>#568<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu133" resname="------5-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/555</source>
</trans-unit>
      <trans-unit id="tu134" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept>, из-за которой было невозможно использовать микс в виде одного объекта (не массива) одновременно в BEMJSON и BEMHTML (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/555" [#$tu135]&gt;</bpt>#555<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/516</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в BEMHTML-шаблоне блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, из-за которой не выполнялись стандартные моды, и исправлена регрессия в шаблоне на touch-уровне (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/516" [#$tu137]&gt;</bpt>516<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu138" resname="section-6-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.4</source>
</trans-unit>
      <trans-unit id="tu139" resname="------6-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu141" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/546</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept>, из-за которой событие об изменении модификатора генерировалось,<ph id="2">&lt;br /&gt;</ph> даже если обработчик <bpt id="3">&lt;code&gt;</bpt>beforeSetMod<ept id="3">&lt;/code&gt;</ept> предотвращал изменение (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/pull/546" [#$tu141]&gt;</bpt>#546<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/554</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В случае возникновения ошибки в процессе декодирования строки, модуль <bpt id="1">&lt;code&gt;</bpt>querystring__uri<ept id="1">&lt;/code&gt;</ept> теперь возвращает<ph id="2">&lt;br /&gt;</ph> оригинальную строку (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/554" [#$tu143]&gt;</bpt>#554<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu144" resname="section-7-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.3</source>
</trans-unit>
      <trans-unit id="tu145" resname="------7-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/540</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуле <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> был исправлен процесс удаления блока для предотвращения нежелательной повторной<ph id="2">&lt;br /&gt;</ph> инициализации блока (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/540" [#$tu147]&gt;</bpt>#540<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu149" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/534</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointer<ept id="1">&lt;/code&gt;</ept>, из-за которой нативные события мыши ошибочно замещались<ph id="2">&lt;br /&gt;</ph> на pointer-события (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/534" [#$tu149]&gt;</bpt>#534<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu151" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/533</source>
</trans-unit>
      <trans-unit id="tu150" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>unbindFrom*<ept id="1">&lt;/code&gt;</ept>-методы в модуле <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> теперь поддерживают отписывание от нескольких событий<ph id="3">&lt;br /&gt;</ph> за вызов (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/533" [#$tu151]&gt;</bpt>#533<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/532</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена недостающая зависимость от модуля <bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> в модуле <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/532" [#$tu153]&gt;</bpt>#532<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu154" resname="section-8-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.2</source>
</trans-unit>
      <trans-unit id="tu155" resname="------8-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В релиз вошли следующие исправления ошибок</source>
</trans-unit>
      <trans-unit id="tu157" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/518</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> приводящая к повторной инициализации блока на DOM-узле, отмеченном как<ph id="2">&lt;br /&gt;</ph> удаленный (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/518" [#$tu157]&gt;</bpt>#518<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu159" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/529</source>
</trans-unit>
      <trans-unit id="tu158" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, из-за которой невозможно было подписаться на событие о выставлении модификатора в<ph id="2">&lt;br /&gt;</ph> значение <bpt id="3">&lt;code&gt;</bpt>false<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/529" [#$tu159]&gt;</bpt>#529<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu161" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/515</source>
</trans-unit>
      <trans-unit id="tu160" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept> обновлен до версий 2.1.1 и 1.11.1 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/515" [#$tu161]&gt;</bpt>#515<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu162" resname="section-9-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.1</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/505</source>
</trans-unit>
      <trans-unit id="tu163" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в модуле <bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointerpressrelease<ept id="1">&lt;/code&gt;</ept>, из-за которой событие <bpt id="2">&lt;code&gt;</bpt>pointerpress<ept id="2">&lt;/code&gt;</ept> генерировалось<ph id="3">&lt;br /&gt;</ph> дважды на каждое событие <bpt id="4">&lt;code&gt;</bpt>mousedown<ept id="4">&lt;/code&gt;</ept> в IE10 (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/505" [#$tu164]&gt;</bpt>#505<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu165" resname="section-10-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.2.0</source>
</trans-unit>
      <trans-unit id="tu166" resname="--5-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu168" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/431</source>
</trans-unit>
      <trans-unit id="tu167" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен новый модуль <bpt id="1">&lt;code&gt;</bpt>keyboard__codes<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/431" [#$tu168]&gt;</bpt>#431<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu170" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/485</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Класс <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> добавлен в export-параметры функции <bpt id="2">&lt;code&gt;</bpt>oninit<ept id="2">&lt;/code&gt;</ept> в базовых шаблонах <bpt id="3">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/pull/485" [#$tu170]&gt;</bpt>#485<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/481</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность декларировать инстанс элемента используя класс блока (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/481" [#$tu172]&gt;</bpt>#481<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu174" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/432</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлено поведение метода <bpt id="1">&lt;code&gt;</bpt>isSimple<ept id="1">&lt;/code&gt;</ept> класса BEMContext в в базовых шаблонах <bpt id="2">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/432" [#$tu174]&gt;</bpt>#432<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/476</source>
</trans-unit>
      <trans-unit id="tu175" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в методе <bpt id="1">&lt;code&gt;</bpt>liveUnbindFrom<ept id="1">&lt;/code&gt;</ept> модуля <bpt id="2">&lt;code&gt;</bpt>BEMDOM<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/476" [#$tu176]&gt;</bpt>#476<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/501</source>
</trans-unit>
      <trans-unit id="tu177" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в методе <bpt id="1">&lt;code&gt;</bpt>isFocusable<ept id="1">&lt;/code&gt;</ept> модуля <bpt id="2">&lt;code&gt;</bpt>dom<ept id="2">&lt;/code&gt;</ept>, возникающая если переданный <bpt id="3">&lt;code&gt;</bpt>domElem<ept id="3">&lt;/code&gt;</ept> является ссылкой<ph id="4">&lt;br /&gt;</ph> с атрибутом <bpt id="5">&lt;code&gt;</bpt>tabindex<ept id="5">&lt;/code&gt;</ept>, но без атрибута <bpt id="6">&lt;code&gt;</bpt>href<ept id="6">&lt;/code&gt;</ept> (<bpt id="7">&lt;a href="https://github.com/bem/bem-core/issues/501" [#$tu178]&gt;</bpt>#501<ept id="7">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu180" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/479</source>
</trans-unit>
      <trans-unit id="tu179" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка возникающая в процессе декларации БЭМ-блока как модуля, если был подключен<ph id="1">&lt;br /&gt;</ph> модуль <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_elem-instances<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/479" [#$tu180]&gt;</bpt>#479<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu182" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/486</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуле <bpt id="1">&lt;code&gt;</bpt>i-bem__dom_init_auto<ept id="1">&lt;/code&gt;</ept> добавлено временное решение для проблем с производительностью ренедеринга при инициализации блоков<ph id="2">&lt;br /&gt;</ph> в Chrome-браузерах (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/486" [#$tu182]&gt;</bpt>#486<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu184" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/412</source>
</trans-unit>
      <trans-unit id="tu183" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow.js<ept id="1">&lt;/code&gt;</ept> перенесен в <bpt id="2">&lt;code&gt;</bpt>vow.vanilla.js<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/412" [#$tu184]&gt;</bpt>#412<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu185" resname="------5-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/504</source>
</trans-unit>
      <trans-unit id="tu186" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> обновлен до версии 0.4.3 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/504" [#$tu187]&gt;</bpt>#504<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu189" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/500</source>
</trans-unit>
      <trans-unit id="tu188" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена русская документация на технологию BEMTREE (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/pull/500" [#$tu189]&gt;</bpt>#500<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu191" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/471</source>
</trans-unit>
      <trans-unit id="tu190" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Обновлена русская документация на JavaScript-синтаксис BEMHTML (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/pull/471" [#$tu191]&gt;</bpt>#471<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu193" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/478</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен референс на API JavaScript-модулей. См. ветку <bpt id="1">&lt;code&gt;</bpt>v2-jsdoc<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/478" [#$tu193]&gt;</bpt>#478<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu194" resname="section-11-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.1.0</source>
</trans-unit>
      <trans-unit id="tu195" resname="--6-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu197" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/454</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept>, из-за которой событие об изменении модификатора происходило до того, как будет<ph id="2">&lt;br /&gt;</ph> вызван обработчик реакции на изменение этого модификатора в <bpt id="3">&lt;code&gt;</bpt>onSetMod<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/454" [#$tu197]&gt;</bpt>#454<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/441</source>
</trans-unit>
      <trans-unit id="tu198" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Свойства <bpt id="1">&lt;code&gt;</bpt>this.mods<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>this.ctx.mods<ept id="2">&lt;/code&gt;</ept> базового шаблона <bpt id="3">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="3">&lt;/code&gt;</ept> теперь используют<ph id="4">&lt;br /&gt;</ph> один и тот же объект (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/441" [#$tu199]&gt;</bpt>#441<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/inherit</source>
</trans-unit>
      <trans-unit id="tu202" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/466</source>
</trans-unit>
      <trans-unit id="tu200" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;a href="https://github.com/dfilatov/inherit" [#$tu201]&gt;</bpt>inherit<ept id="1">&lt;/a&gt;</ept> обновлен до версии 2.2.1 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/466" [#$tu202]&gt;</bpt>#466<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu204" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/465</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлен порядок тегов секции <bpt id="1">&lt;code&gt;</bpt>head<ept id="1">&lt;/code&gt;</ept> в шаблоне <bpt id="2">&lt;code&gt;</bpt>page.bemhtml<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/465" [#$tu204]&gt;</bpt>#465<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu205" resname="------6-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu207" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/461</source>
</trans-unit>
      <trans-unit id="tu206" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В русскую документацию к <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> добавлено описание поля <bpt id="2">&lt;code&gt;</bpt>baseMix<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/pull/461" [#$tu207]&gt;</bpt>#461<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu209" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/444</source>
</trans-unit>
      <trans-unit id="tu208" restype="x-li" xml:space="preserve">
<source xml:lang="ru">CDN-хост внешних ресурсов изменен на <bpt id="1">&lt;code&gt;</bpt>yastatic.net<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/444" [#$tu209]&gt;</bpt>#444<ept id="2">&lt;/a&gt;</ept>).<ph id="3">&lt;br /&gt;</ph> Все ресурсы все так же доступны с хоста <bpt id="4">&lt;code&gt;</bpt>yandex.st<ept id="4">&lt;/code&gt;</ept>. Физически <bpt id="5">&lt;code&gt;</bpt>yandex.st<ept id="5">&lt;/code&gt;</ept> и <bpt id="6">&lt;code&gt;</bpt>yastatic.net<ept id="6">&lt;/code&gt;</ept> находятся на<ph id="7">&lt;br /&gt;</ph> одних и тех же серверах. Различие только в DNS-записях.</source>
</trans-unit>
      <trans-unit id="tu211" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/277</source>
</trans-unit>
      <trans-unit id="tu210" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен базовый BEMHTML-шаблон для команды <bpt id="1">&lt;code&gt;</bpt>bem create<ept id="1">&lt;/code&gt;</ept> технологии <bpt id="2">&lt;code&gt;</bpt>bemhtml<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/277" [#$tu211]&gt;</bpt>#277<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu213" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://travis-ci.com</source>
</trans-unit>
      <trans-unit id="tu214" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/455</source>
</trans-unit>
      <trans-unit id="tu212" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Прекращен автоматический запуск тестов под Node.js 0.8 в <bpt id="1">&lt;a href="http://travis-ci.com" [#$tu213]&gt;</bpt>Travis CI<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/455" [#$tu214]&gt;</bpt>#455<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu216" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://blog.travis-ci.com/2014-03-20-build-status-badges-support-svg/</source>
</trans-unit>
      <trans-unit id="tu215" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Иконка статуса автосборки Travis <bpt id="1">&lt;a href="http://blog.travis-ci.com/2014-03-20-build-status-badges-support-svg/" [#$tu216]&gt;</bpt>заменена на SVG<ept id="1">&lt;/a&gt;</ept> :)</source>
</trans-unit>
      <trans-unit id="tu217" resname="section-12-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">2.0.0</source>
</trans-unit>
      <trans-unit id="tu218" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Изменения, ломающие обратную совместимость</source>
</trans-unit>
      <trans-unit id="tu219" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu221" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/318</source>
</trans-unit>
      <trans-unit id="tu220" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Из <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>i-bem__dom.js<ept id="2">&lt;/code&gt;</ept> удалены все <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept> методы (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/318" [#$tu221]&gt;</bpt>#318<ept id="4">&lt;/a&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu222" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept>, используйте <bpt id="2">&lt;code&gt;</bpt>onSetMod js ''<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu223" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>extractParams<ept id="1">&lt;/code&gt;</ept>, используйте <bpt id="2">&lt;code&gt;</bpt>elemParams<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu224" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>trigger<ept id="1">&lt;/code&gt;</ept>, используйте <bpt id="2">&lt;code&gt;</bpt>emit<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu225" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept>, используйте модуль <bpt id="2">&lt;code&gt;</bpt>next-tick<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu226" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>channel<ept id="1">&lt;/code&gt;</ept>, используйте модуль <bpt id="2">&lt;code&gt;</bpt>events__channels<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu227" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu228" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept>, используйте нативный <bpt id="2">&lt;code&gt;</bpt>Function.prototype.bind<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu229" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Из <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> убраны события <bpt id="2">&lt;code&gt;</bpt>init<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>destruct<ept id="3">&lt;/code&gt;</ept>. Вместо них следует использовать события об изменении модификатора<ph id="4">&lt;br /&gt;</ph> (см. «Крупные изменения»).</source>
</trans-unit>
      <trans-unit id="tu231" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://github.com/bem/es5-shims</source>
</trans-unit>
      <trans-unit id="tu232" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/230</source>
</trans-unit>
      <trans-unit id="tu230" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>ecma<ept id="1">&lt;/code&gt;</ept> перенесен <bpt id="2">&lt;a href="http://github.com/bem/es5-shims" [#$tu231]&gt;</bpt>в отдельный репозиторий<ept id="2">&lt;/a&gt;</ept>; ES5-shims следует использовать<ph id="3">&lt;br /&gt;</ph> для IE &lt; 9 (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/230" [#$tu232]&gt;</bpt>#230<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu234" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/350</source>
</trans-unit>
      <trans-unit id="tu235" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/vow/blob/0.4.1/CHANGELOG.md</source>
</trans-unit>
      <trans-unit id="tu233" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> обновлен до мажорной версии 0.4.1 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/350" [#$tu234]&gt;</bpt>#350<ept id="2">&lt;/a&gt;</ept>).<ph id="3">&lt;br /&gt;</ph> См. <bpt id="4">&lt;a href="https://github.com/dfilatov/vow/blob/0.4.1/CHANGELOG.md" [#$tu235]&gt;</bpt>изменения в Vow<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu236" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu237" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> добавлена поддержка </source>
</trans-unit>
      <trans-unit id="tu238" xml:space="preserve">
<source xml:lang="ru">vow at 0 dot 4</source>
</trans-unit>
      <trans-unit id="tu240" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/385</source>
</trans-unit>
      <trans-unit id="tu239" xml:space="preserve">
<source xml:lang="ru"> (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/385" [#$tu240]&gt;</bpt>#385<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu241" resname="--7-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu243" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu244" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/382</source>
</trans-unit>
      <trans-unit id="tu242" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность декларировать BEMDOM-блоки как модули <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu243]&gt;</bpt>ym<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/382" [#$tu244]&gt;</bpt>#382<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu246" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/357</source>
</trans-unit>
      <trans-unit id="tu245" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> добавлены события об изменении модификатора (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/357" [#$tu246]&gt;</bpt>#357<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu248" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/419</source>
</trans-unit>
      <trans-unit id="tu249" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/420</source>
</trans-unit>
      <trans-unit id="tu247" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена поддержка использования строковых значений в качестве аргумента в методах <bpt id="1">&lt;code&gt;</bpt>BEMDOM.init<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/419" [#$tu248]&gt;</bpt>#419<ept id="2">&lt;/a&gt;</ept>)<ph id="3">&lt;br /&gt;</ph> и <bpt id="4">&lt;code&gt;</bpt>BEMDOM.update<ept id="4">&lt;/code&gt;</ept> (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/420" [#$tu249]&gt;</bpt>#420<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu251" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/410</source>
</trans-unit>
      <trans-unit id="tu250" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Методы <bpt id="1">&lt;code&gt;</bpt>i-bem__dom.js<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>replace<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>append<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>prepend<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>before<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>after<ept id="6">&lt;/code&gt;</ept> теперь возвращают новый контекст,<ph id="7">&lt;br /&gt;</ph> а <bpt id="8">&lt;code&gt;</bpt>update<ept id="8">&lt;/code&gt;</ept> – изменённый (<bpt id="9">&lt;a href="https://github.com/bem/bem-core/issues/410" [#$tu251]&gt;</bpt>#410<ept id="9">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu253" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/358</source>
</trans-unit>
      <trans-unit id="tu252" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>loader<ept id="1">&lt;/code&gt;</ept> добавлен модификатор <bpt id="2">&lt;code&gt;</bpt>_type_bundle<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/358" [#$tu253]&gt;</bpt>#358<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu255" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/356</source>
</trans-unit>
      <trans-unit id="tu254" restype="x-li" xml:space="preserve">
<source xml:lang="ru">jQuery обновлен до версии 2.1.0. Для IE &lt; 9 — до версии 1.11.0 (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/356" [#$tu255]&gt;</bpt>#356<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu256" resname="------7-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu258" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/401</source>
</trans-unit>
      <trans-unit id="tu257" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Базовые шаблоны в <bpt id="1">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/code&gt;</ept> используют конкатенацию строк вместо наполнения внутреннего буфера (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/401" [#$tu258]&gt;</bpt>#401<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu260" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/349</source>
</trans-unit>
      <trans-unit id="tu259" restype="x-li" xml:space="preserve">
<source xml:lang="ru">jQuery больше не удаляет себя из глобальной области видимости, если присутствует на странице (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/349" [#$tu260]&gt;</bpt>#349<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu262" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/393</source>
</trans-unit>
      <trans-unit id="tu261" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointerclick.js<ept id="1">&lt;/code&gt;</ept> перемещен с уровня <bpt id="2">&lt;code&gt;</bpt>touch.blocks<ept id="2">&lt;/code&gt;</ept> на уровень <bpt id="3">&lt;code&gt;</bpt>common.blocks<ept id="3">&lt;/code&gt;</ept> (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/issues/393" [#$tu262]&gt;</bpt>#393<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu264" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/352</source>
</trans-unit>
      <trans-unit id="tu263" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модификаторы <bpt id="1">&lt;code&gt;</bpt>i-bem_elem-instances_yes<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_elem-instances_yes<ept id="2">&lt;/code&gt;</ept> приведены к булевому стилю (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/352" [#$tu264]&gt;</bpt>#352<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu266" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/417</source>
</trans-unit>
      <trans-unit id="tu265" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в шаблоне блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, возникающая при использовании development-режима BEMHTML (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/417" [#$tu266]&gt;</bpt>#417<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu268" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/404</source>
</trans-unit>
      <trans-unit id="tu267" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для поддержки Android 2.3 внутри <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> отказались от использований <bpt id="2">&lt;code&gt;</bpt>Function.prototype.bind<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/404" [#$tu268]&gt;</bpt>#404<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu270" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/392</source>
</trans-unit>
      <trans-unit id="tu269" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены ошибки в модуле технологии <bpt id="1">&lt;code&gt;</bpt>browser-js+bemhtml<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/392" [#$tu270]&gt;</bpt>#392<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu272" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules/releases</source>
</trans-unit>
      <trans-unit id="tu273" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/414</source>
</trans-unit>
      <trans-unit id="tu271" restype="x-li" xml:space="preserve">
<source xml:lang="ru">NPM-модуль <bpt id="1">&lt;code&gt;</bpt>ym<ept id="1">&lt;/code&gt;</ept> обновлен до версии <bpt id="2">&lt;a href="https://github.com/ymaps/modules/releases" [#$tu272]&gt;</bpt>0.0.15<ept id="2">&lt;/a&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/414" [#$tu273]&gt;</bpt>#414<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu274" resname="section-13-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.2.0</source>
</trans-unit>
      <trans-unit id="tu275" resname="--8-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu277" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/370</source>
</trans-unit>
      <trans-unit id="tu276" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEM-блоки инициируют событие <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> в процессе удаления (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/370" [#$tu277]&gt;</bpt>#370<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu279" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/354</source>
</trans-unit>
      <trans-unit id="tu278" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены полифилы для <bpt id="1">&lt;code&gt;</bpt>pointerevents<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/pull/354" [#$tu279]&gt;</bpt>#354<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu280" resname="------8-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu282" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/335</source>
</trans-unit>
      <trans-unit id="tu281" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JSDoc блоков исправлен в соответствии с поддержкой <bpt id="1">&lt;a href="github.com/bem/bem-jsd"&gt;</bpt>bem-jsd<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/335" [#$tu282]&gt;</bpt>#335<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu284" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/pull/355</source>
</trans-unit>
      <trans-unit id="tu283" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Референс на BEMHTML обновлен для соответствия JavaScript-синтаксису шаблонизатора (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/pull/355" [#$tu284]&gt;</bpt>#355<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu286" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://bower.io</source>
</trans-unit>
      <trans-unit id="tu287" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/367</source>
</trans-unit>
      <trans-unit id="tu285" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Переход на менеджер зависимостей <bpt id="1">&lt;a href="http://bower.io" [#$tu286]&gt;</bpt>bower<ept id="1">&lt;/a&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/367" [#$tu287]&gt;</bpt>#367<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu288" resname="section-14-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.1.0</source>
</trans-unit>
      <trans-unit id="tu289" resname="--9-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu291" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/319</source>
</trans-unit>
      <trans-unit id="tu290" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для современных браузеров <bpt id="1">&lt;code&gt;</bpt>jquery__config<ept id="1">&lt;/code&gt;</ept> подключает jQuery 2.x (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/319" [#$tu291]&gt;</bpt>#319<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu293" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/290</source>
</trans-unit>
      <trans-unit id="tu292" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность использовать произвольный BEMJSON в качестве значения атрибутов в BEMHTML (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/290" [#$tu293]&gt;</bpt>#290<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu295" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/292</source>
</trans-unit>
      <trans-unit id="tu294" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлены зависимости в <bpt id="1">&lt;code&gt;</bpt>i-bem__collection<ept id="1">&lt;/code&gt;</ept> (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/292" [#$tu295]&gt;</bpt>#292<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu297" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/306</source>
</trans-unit>
      <trans-unit id="tu296" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Удалены CSS-стили блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> из уровня <bpt id="2">&lt;code&gt;</bpt>touch.blocks<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/306" [#$tu297]&gt;</bpt>#306<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu299" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/309</source>
</trans-unit>
      <trans-unit id="tu298" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в BEMHTML-шаблоне блока <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>, приводящая к зацикливанию шаблонизатора<ph id="2">&lt;br /&gt;</ph> в production-режиме (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/309" [#$tu299]&gt;</bpt>#309<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu301" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/324</source>
</trans-unit>
      <trans-unit id="tu300" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена возможная ошибка в <bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept>, возникающая при вставке скрипта в DOM в IE&lt;9 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/324" [#$tu301]&gt;</bpt>#324<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu303" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/332</source>
</trans-unit>
      <trans-unit id="tu302" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в инициализации плагина <bpt id="1">&lt;code&gt;</bpt>FastClick<ept id="1">&lt;/code&gt;</ept> в модуле <bpt id="2">&lt;code&gt;</bpt>jquery__event_type_pointerclick<ept id="2">&lt;/code&gt;</ept><ph id="3">&lt;br /&gt;</ph> на уровне <bpt id="4">&lt;code&gt;</bpt>touch.blocks<ept id="4">&lt;/code&gt;</ept> (<bpt id="5">&lt;a href="https://github.com/bem/bem-core/issues/332" [#$tu303]&gt;</bpt>#332<ept id="5">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu305" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/274</source>
</trans-unit>
      <trans-unit id="tu304" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в технологии <bpt id="1">&lt;code&gt;</bpt>node.js<ept id="1">&lt;/code&gt;</ept> в Windows (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/274" [#$tu305]&gt;</bpt>#274<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu307" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/340</source>
</trans-unit>
      <trans-unit id="tu306" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлена ошибка в <bpt id="1">&lt;code&gt;</bpt>onElemSetMod<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_elem-instances<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/340" [#$tu307]&gt;</bpt>#340<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu309" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu310" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/329</source>
</trans-unit>
      <trans-unit id="tu308" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В технологии <bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept> используется <bpt id="2">&lt;a href="https://github.com/bem/bem-xjst" [#$tu309]&gt;</bpt>bem-xjst<ept id="2">&lt;/a&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/329" [#$tu310]&gt;</bpt>#329<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu311" resname="------9-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu313" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu314" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/326</source>
</trans-unit>
      <trans-unit id="tu312" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu313]&gt;</bpt>ym<ept id="1">&lt;/a&gt;</ept> обновлен до версии 0.0.12 (<bpt id="2">&lt;a href="https://github.com/bem/bem-core/issues/326" [#$tu314]&gt;</bpt>#326<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu316" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/285</source>
</trans-unit>
      <trans-unit id="tu315" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В ядре локализации <bpt id="1">&lt;code&gt;</bpt>i-bem__i18n<ept id="1">&lt;/code&gt;</ept> отключен вывод сообщений о неизвестных ключах, если не включен<ph id="2">&lt;br /&gt;</ph> debug-режим (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/285" [#$tu316]&gt;</bpt>#285<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu317" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Инфраструктура сборки тестов и примеров переведена<ph id="1">&lt;br /&gt;</ph> на <it id="2" pos="open">&lt;a href="https://github.com/narqo/bem-pr/blob/0.5.3/HISTORY.md"&gt;</it></source>
</trans-unit>
      <trans-unit id="tu318" xml:space="preserve">
<source xml:lang="ru">bem-pr at v0 dot 5 dot x</source>
</trans-unit>
      <trans-unit id="tu320" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/323</source>
</trans-unit>
      <trans-unit id="tu319" xml:space="preserve">
<source xml:lang="ru"><it id="2" pos="close">&lt;/a&gt;</it> (<bpt id="1">&lt;a href="https://github.com/bem/bem-core/issues/323" [#$tu320]&gt;</bpt>#323<ept id="1">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu322" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/issues/296</source>
</trans-unit>
      <trans-unit id="tu321" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Исправлен jsdoc для метода <bpt id="1">&lt;code&gt;</bpt>dropElemCache()<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> (<bpt id="3">&lt;a href="https://github.com/bem/bem-core/issues/296" [#$tu322]&gt;</bpt>#296<ept id="3">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu323" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Доработана документация для блока <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> на русском языке.</source>
</trans-unit>
      <trans-unit id="tu325" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v1/README.ru.md#%D0%9F%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC%D1%8B%D0%B5-%D0%B1%D1%80%D0%B0%D1%83%D0%B7%D0%B5%D1%80%D1%8B</source>
</trans-unit>
      <trans-unit id="tu324" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В README проекта добавлен <bpt id="1">&lt;a href="https://github.com/bem/bem-core/blob/v1/README.ru.md#%D0%9F%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC%D1%8B%D0%B5-%D0%B1%D1%80%D0%B0%D1%83%D0%B7%D0%B5%D1%80%D1%8B" [#$tu325]&gt;</bpt>список поддерживаемых браузеров<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu326" resname="section-15-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.0.0</source>
</trans-unit>
      <trans-unit id="tu327" resname="--10-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Крупные изменения</source>
</trans-unit>
      <trans-unit id="tu329" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu328" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Переход на модульную систему <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu329]&gt;</bpt>ym<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu330" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Из <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> убраны все deprecated-методы.</source>
</trans-unit>
      <trans-unit id="tu331" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> больше не зависит от jQuery. <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> продолжает зависеть от jQuery.</source>
</trans-unit>
      <trans-unit id="tu333" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://gist.github.com/veged/6150760</source>
</trans-unit>
      <trans-unit id="tu332" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML-шаблоны можно писать с использованием <bpt id="1">&lt;a href="https://gist.github.com/veged/6150760" [#$tu333]&gt;</bpt>JS-синтаксиса<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu335" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-xjst</source>
</trans-unit>
      <trans-unit id="tu334" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Новая технология <bpt id="1">&lt;code&gt;</bpt>bemtree<ept id="1">&lt;/code&gt;</ept> (на базе <bpt id="2">&lt;a href="https://github.com/bem/bem-xjst" [#$tu335]&gt;</bpt>bem-xjst<ept id="2">&lt;/a&gt;</ept>) для описания процесса<ph id="3">&lt;br /&gt;</ph> динамического построения БЭМ-дерева.</source>
</trans-unit>
      <trans-unit id="tu336" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Новая технология <bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept> для описания JS-реализации модулей, не зависящей от конкретного JavaScript движка.</source>
</trans-unit>
      <trans-unit id="tu337" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Новые технологии <bpt id="1">&lt;code&gt;</bpt>browser.js<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>node.js<ept id="2">&lt;/code&gt;</ept> для описания JS-реализаций модулей (блоков) в соответствующих движках.<ph id="3">&lt;br /&gt;</ph> Для совместимости с существующим кодом считаем, что файлы с расширением <bpt id="4">&lt;code&gt;</bpt>.js<ept id="4">&lt;/code&gt;</ept> содержат реализацию блоков<ph id="5">&lt;br /&gt;</ph> в технологии <bpt id="6">&lt;code&gt;</bpt>browser.js<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu338" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Система модульного тестирования и примеров для блоков в библиотеке.</source>
</trans-unit>
      <trans-unit id="tu339" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Появились полифилы (<bpt id="1">&lt;code&gt;</bpt>jquery__event_type_pointer<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>jquery__event_type_pointerclick<ept id="2">&lt;/code&gt;</ept> как jQuery-плагины),<ph id="3">&lt;br /&gt;</ph> позволяющие использовать универсальные события для десктопных и тач-интерфейсов.</source>
</trans-unit>
      <trans-unit id="tu340" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Плагин для jQuery, позволяющий навешивать обработчик события на нажатие левой кнопки мыши, становится модулем <bpt id="1">&lt;code&gt;</bpt>jquery__pointerclick<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu341" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> и BEMHTML добавлена поддержка простых модификаторов (модификаторов без значений).</source>
</trans-unit>
      <trans-unit id="tu342" resname="------10-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Также в релиз вошли следующие изменения</source>
</trans-unit>
      <trans-unit id="tu343" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Все блоки-модули, кроме <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, избавились от префиксов.</source>
</trans-unit>
      <trans-unit id="tu345" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v1/common.bundles/index/blocks/b-square/b-square.js</source>
</trans-unit>
      <trans-unit id="tu344" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept>. Все BEM.DOM-блоки должны теперь доопределять<ph id="3">&lt;br /&gt;</ph> этот модуль (<bpt id="4">&lt;a href="https://github.com/bem/bem-core/blob/v1/common.bundles/index/blocks/b-square/b-square.js" [#$tu345]&gt;</bpt>пример<ept id="4">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu346" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод для декларации блоков (<bpt id="1">&lt;code&gt;</bpt>.decl()<ept id="1">&lt;/code&gt;</ept>) больше не принимает первым параметром объект с полем <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph> Теперь обязательная форма записи с полем <bpt id="4">&lt;code&gt;</bpt>block<ept id="4">&lt;/code&gt;</ept>: <bpt id="5">&lt;code&gt;</bpt>BEM.decl({ block: 'b1', modName: 'm', modVal: 'v' }, ...)<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu347" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept> у блоков появился метод <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>, который проверят существование блока в момент исполнения колбэка. <bpt id="3">&lt;code&gt;</bpt>BEM.afterCurrentEvent<ept id="3">&lt;/code&gt;</ept> теперь <bpt id="4">&lt;strong&gt;</bpt>deprecated<ept id="4">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu348" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо <bpt id="1">&lt;code&gt;</bpt>BEM.channel<ept id="1">&lt;/code&gt;</ept> появился отдельный модуль <bpt id="2">&lt;code&gt;</bpt>channels<ept id="2">&lt;/code&gt;</ept>. <bpt id="3">&lt;code&gt;</bpt>BEM.channel<ept id="3">&lt;/code&gt;</ept> теперь <bpt id="4">&lt;strong&gt;</bpt>deprecated<ept id="4">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu349" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept> помечен как <bpt id="2">&lt;strong&gt;</bpt>deprecated<ept id="2">&lt;/strong&gt;</ept>. Используйте нативный <bpt id="3">&lt;code&gt;</bpt>bind<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu350" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>del<ept id="1">&lt;/code&gt;</ept> удален из блока <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu351" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>getWindowSize<ept id="1">&lt;/code&gt;</ept> удален из блока <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept>. Используйте <bpt id="3">&lt;code&gt;</bpt>BEMDOM.win.width()<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>BEMDOM.win.height()<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu352" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль-обертка <bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept>, предоставляющий jQuery. Модуль либо предоставляет jQuery, уже присутствующий на странице, либо сам его загружает (версию 1.10.1).</source>
</trans-unit>
      <trans-unit id="tu353" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.observable<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu354" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.inherit<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>inherit<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu355" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.identify<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>identify<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu356" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.throttle<ept id="1">&lt;/code&gt;</ept> разбивается на два модуля: <bpt id="2">&lt;code&gt;</bpt>functions__throttle<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>functions__debounce<ept id="3">&lt;/code&gt;</ept>, которые больше не зависят от jQuery.</source>
</trans-unit>
      <trans-unit id="tu357" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.decodeURI<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>$.decodeURIComponent<ept id="2">&lt;/code&gt;</ept> переезжают в модуль <bpt id="3">&lt;code&gt;</bpt>querystring__uri<ept id="3">&lt;/code&gt;</ept> и больше не зависят от jQuery.</source>
</trans-unit>
      <trans-unit id="tu358" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$.cookie<ept id="1">&lt;/code&gt;</ept> становится модулем <bpt id="2">&lt;code&gt;</bpt>cookie<ept id="2">&lt;/code&gt;</ept> и больше не зависит от jQuery.</source>
</trans-unit>
      <trans-unit id="tu359" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо <bpt id="1">&lt;code&gt;</bpt>$.browser<ept id="1">&lt;/code&gt;</ept> появился модуль <bpt id="2">&lt;code&gt;</bpt>ua<ept id="2">&lt;/code&gt;</ept> с аналогичным интерфейсом.</source>
</trans-unit>
      <trans-unit id="tu360" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-system<ept id="1">&lt;/code&gt;</ept> разбит на 2 модуля: <bpt id="2">&lt;code&gt;</bpt>idle<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>tick<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu361" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо события <bpt id="1">&lt;code&gt;</bpt>leftclick<ept id="1">&lt;/code&gt;</ept> следует использовать <bpt id="2">&lt;code&gt;</bpt>pointerclick<ept id="2">&lt;/code&gt;</ept> (предоставляемый полифилом <bpt id="3">&lt;code&gt;</bpt>jquery__event_type_pointerclick<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu362" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Триггеры на установку модификаторов теперь разделены на две группы: до установки модификатора (<bpt id="1">&lt;code&gt;</bpt>beforeSetMod<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>beforeElemSetMod<ept id="2">&lt;/code&gt;</ept>) и после (<bpt id="3">&lt;code&gt;</bpt>onSetMod<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>onElemSetMod<ept id="4">&lt;/code&gt;</ept>). Отмена установки модификатора теперь возможна только из триггеров первой группы.</source>
</trans-unit>
      <trans-unit id="tu363" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Использовать конструкцию <bpt id="1">&lt;code&gt;</bpt>{ onSetMod : { js : function() { ... } } }<ept id="1">&lt;/code&gt;</ept> в качестве конструктора теперь <bpt id="2">&lt;strong&gt;</bpt>deprecated<ept id="2">&lt;/strong&gt;</ept>, необходимо использовать <bpt id="3">&lt;code&gt;</bpt>onSetMod: { js : { inited : ... } } }<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu364" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> появился зеркальный метод<ph id="3">&lt;br /&gt;</ph> для <bpt id="4">&lt;code&gt;</bpt>onSetMod: { js : { inited : ... } } }<ept id="4">&lt;/code&gt;</ept> — <bpt id="5">&lt;code&gt;</bpt>{ onSetMod : { js : { '' : ... } } }<ept id="5">&lt;/code&gt;</ept>.<ph id="6">&lt;br /&gt;</ph> Метод <bpt id="7">&lt;code&gt;</bpt>destruct<ept id="7">&lt;/code&gt;</ept> теперь <bpt id="8">&lt;strong&gt;</bpt>deprecated<ept id="8">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu365" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>exractParams<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept> теперь <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept>, для доступа к параметрам элементов нужно использовать метод <bpt id="4">&lt;code&gt;</bpt>elemParams<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu366" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>trigger<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> теперь <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept>, нужно использовать <bpt id="4">&lt;code&gt;</bpt>emit<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu367" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>onFirst<ept id="1">&lt;/code&gt;</ept> в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> теперь <bpt id="3">&lt;strong&gt;</bpt>deprecated<ept id="3">&lt;/strong&gt;</ept>, нужно использовать <bpt id="4">&lt;code&gt;</bpt>once<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu368" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Удалено <bpt id="1">&lt;strong&gt;</bpt>deprecated<ept id="1">&lt;/strong&gt;</ept> поле <bpt id="2">&lt;code&gt;</bpt>e.block<ept id="2">&lt;/code&gt;</ept>, представляющее блок-источник события для BEM-событий. Вместо него следует использовать поле <bpt id="3">&lt;code&gt;</bpt>e.target<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu369" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для доступа к DOM-элементу блока в обработчике DOM-событий теперь нужно использовать поле <bpt id="1">&lt;code&gt;</bpt>currentTarget<ept id="1">&lt;/code&gt;</ept>, предоставляемое jQuery. Вместо <bpt id="2">&lt;code&gt;</bpt>e.data.domElem<ept id="2">&lt;/code&gt;</ept>нужно писать <bpt id="3">&lt;code&gt;</bpt>$(e.currentTarget)<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu370" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В методе <bpt id="1">&lt;code&gt;</bpt>findElem<ept id="1">&lt;/code&gt;</ept> добавлен параметр, позволяющий находить элемента блока с учетом вложенных блоков.</source>
</trans-unit>
      <trans-unit id="tu371" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлена возможность указывать конкретную функцию для отписки от событий в методах <bpt id="1">&lt;code&gt;</bpt>unbindFrom*<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu372" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>objects<ept id="1">&lt;/code&gt;</ept> для работы с JS-объектами (содержит методы <bpt id="2">&lt;code&gt;</bpt>extend<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>isEmpty<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>each<ept id="4">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu373" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> для работы с JS-функциями (содержит методы <bpt id="2">&lt;code&gt;</bpt>isFunction<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>noop<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu374" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>dom<ept id="1">&lt;/code&gt;</ept> для хелперов при работе с DOM.</source>
</trans-unit>
      <trans-unit id="tu375" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>querystring<ept id="1">&lt;/code&gt;</ept> для работы с урлами.</source>
</trans-unit>
      <trans-unit id="tu376" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>loader_type_js<ept id="1">&lt;/code&gt;</ept> для загрузки JS.</source>
</trans-unit>
      <trans-unit id="tu377" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>vow<ept id="1">&lt;/code&gt;</ept> для работы с промисами.</source>
</trans-unit>
      <trans-unit id="tu378" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept> для полифила <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>setImmediate<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>setTimeout(0, ...<ept id="4">&lt;/code&gt;</ept> и т.п..</source>
</trans-unit>
      <trans-unit id="tu379" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавлен модуль <bpt id="1">&lt;code&gt;</bpt>strings__escape<ept id="1">&lt;/code&gt;</ept>, содержащий методы для эскейпинга XML, HTML и атрибутов.</source>
</trans-unit>
      <trans-unit id="tu380" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модуль <bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> теперь поддерживает миксины.</source>
</trans-unit>
      <trans-unit id="tu381" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В модуле <bpt id="1">&lt;code&gt;</bpt>functions__throttle<ept id="1">&lt;/code&gt;</ept> добавлен параметр <bpt id="2">&lt;code&gt;</bpt>invokeAsap<ept id="2">&lt;/code&gt;</ept>, позволяющий отложить первое исполнение.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/bemjson/bemjson.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="---bemjson-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Справочное руководство по BEMJSON</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Введение</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Данный документ<ept id="1">&lt;/strong&gt;</ept> представляет собой справочное руководство по формату описания входных данных BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В документе описаны:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">основные особенности BEMJSON, отличающие его от других форматов;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">синтаксис описания данных BEMJSON;</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Целевая аудитория документа<ept id="1">&lt;/strong&gt;</ept> — веб-разработчики и HTML-верстальщики, использующие<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://ru.bem.info/method/" [#$tu9]&gt;</bpt>БЭМ-методологию<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предполагается, что читатель знаком с:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru">HTML;</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JavaScript;</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru">CSS;</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru">БЭМ.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>В документе не описаны<ept id="1">&lt;/strong&gt;</ept> средства гененерации БЭМ-дерева в формате BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="common"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Общие понятия</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В БЭМ-проектах для описания разметки веб-страницы в БЭМ-терминах вводится специальное понятие – <bpt id="1">&lt;strong&gt;</bpt>БЭМ-дерево<ept id="1">&lt;/strong&gt;</ept>. Название выбрано по аналогии с DOM-деревом.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-дерево – структура данных, которая описывает:</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru">структуру страницы – порядок и вложенность блоков;</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru">названия БЭМ-сущностей – имена блоков, элементов, модификаторов блока или элемента;</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">состояния БЭМ-сущностей – наличие логических модификаторов, значения модификаторов;</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru">произвольные поля – вспомогательные данные (хеш-ключи, адреса публичных API и т.п.).</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В библиотеке <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> (и многих других БЭМ-проектах) стандартным форматом представления БЭМ-дерева является <bpt id="2">&lt;strong&gt;</bpt>BEMJSON<ept id="2">&lt;/strong&gt;</ept> .</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMJSON – структура данных (объект) JavaScript, с набором дополнительных соглашений о представлении БЭМ-сущностей.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="bemcore"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" resname="bemjson-----bem-core-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">BEMJSON и шаблонизация данных в bem-core</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-дерево в формате BEMJSON является неотъемлемой частью механизмов <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/" [#$tu29]&gt;</bpt>шаблонизации данных<ept id="1">&lt;/a&gt;</ept>, реализованных в <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>. BEMJSON используется в качестве входных данных для шаблонизаторов:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemtree/" [#$tu31]&gt;</bpt>BEMTREE<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://ru.bem.info/technology/bemhtml/current/intro/</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://ru.bem.info/technology/bemhtml/current/intro/" [#$tu33]&gt;</bpt>BEMHTML<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках BEMTREE и BEMHTML шаблонов фрагмент входных данных, относящийся к текущему элементу BEMJSON-дерева и его потомкам, содержится в поле контекста <bpt id="1">&lt;code&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Шаблонизатор BEMTREE предназначен для генерации BEMJSON из произвольных данных.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="sbor"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" resname="bemjson---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">BEMJSON и сборка</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Некоторые системы сборки, например, <bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/" [#$tu39]&gt;</bpt>bem-tools<ept id="1">&lt;/a&gt;</ept>, использует файлы, содержащие литеральную запись BEMJSON, в качестве <bpt id="2">&lt;strong&gt;</bpt>декларации<ept id="2">&lt;/strong&gt;</ept> сборки. В <bpt id="3">&lt;code&gt;</bpt>bem-tools<ept id="3">&lt;/code&gt;</ept> для этих целей служат файлы с суффиксом <bpt id="4">&lt;code&gt;</bpt>bemjson.js<ept id="4">&lt;/code&gt;</ept>. На основе БЭМ-дерева, описанного в этих файлах, система сборки определяет набор БЭМ-сущностей, реализации которых должны быть собраны из папок блоков.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На практике это означает, что на основании декларации<bpt id="1">&lt;code&gt;</bpt>bemjson.js<ept id="1">&lt;/code&gt;</ept> и настроек сборки строится файл базовой декларации в формате <bpt id="2">&lt;code&gt;</bpt>bemdecl.js<ept id="2">&lt;/code&gt;</ept>. Затем из него - файл в формате <bpt id="3">&lt;code&gt;</bpt>deps.js<ept id="3">&lt;/code&gt;</ept>, описывающий зависимости сборки. Файл зависимостей представляет собой плоский список БЭМ-сущностей, участвующих в сборке, вида:</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>exports.deps = [
    {
        "block": "page",
        "elem": "css"
    },
    {
        "block": "page",
        "elem": "js"
    },
    {
        "block": "page",
        "elem": "meta"
    },
    {
        "block": "header"
    },
    {
        "block": "content"
    },
    {
        "block": "footer"
    }
];<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На основании файла зависимостей производится дальнейшая сборка файлов технологий из папок блоков, элементов и модификаторов, попадающих под декларацию. Файлы собираются в бандлы технологий на основании <bpt id="1">&lt;strong&gt;</bpt>суффиксов<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Суффиксом считается часть имени файла следующая за первой точкой. Например, в имени файла <bpt id="1">&lt;code&gt;</bpt>index.bemjson.js<ept id="1">&lt;/code&gt;</ept> суффиксом является <bpt id="2">&lt;code&gt;</bpt>bemjson.js<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/depsjs/</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/depsjs/" [#$tu46]&gt;</bpt>Зависимости в bem-tools<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#polymorph</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#polymorph" [#$tu48]&gt;</bpt>Сборка и подключение бандла технологий BEMTREE и BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemjson"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" resname="-bemjson-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Синтаксис BEMJSON</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="datatype"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Типы данных</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Типы данных в BEMJSON соответствуют типам данных в JavaScript.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Строки и числа:</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Строка<ept id="1">&lt;/strong&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>'a'<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>"a"<ept id="3">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Число<ept id="1">&lt;/strong&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>1<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>0.1<ept id="3">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Структура данных, состоящая из строки или числа, является валидным BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Boolean<ept id="1">&lt;/strong&gt;</ept>. Значения: <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>false<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Объект<ept id="1">&lt;/strong&gt;</ept> (ассоциативный массив) '{ключ: значение}' и остальные типы, кроме массива.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Массив<ept id="1">&lt;/strong&gt;</ept> — список, может содержать элементы различных типов (строки, числа, объекты, массивы)<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>[ "a", 1, {ключ: значение}, [ "b", 2, ... ] ]<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="fields_bemjson"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" resname="--bemjson-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специальные поля BEMJSON</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для представления данных предметной области БЭМ и HTML в BEMJSON используются объекты, в которых зарезервированы<ph id="1">&lt;br /&gt;</ph>специальные имена полей.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="notionbem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Представление БЭМ-сущностей</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущности представляются в BEMJSON в виде объектов, в которых могут присутствовать следующие поля:</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Значение</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Пример</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Имя блока</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Строка</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{ block: 'menu' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu79" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Имя элемента</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Строка</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{ elem: 'item' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>mods<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Объект, содержащий имена и значения модификаторов в качестве пар ключ-значение:
        <bpt id="1">&lt;code preserve="1"&gt;</bpt>{имя_модификатора: 'значение_модификатора'}<ept id="1">&lt;/code&gt;</ept>
    </source>
</trans-unit>
      <trans-unit id="tu85" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu86" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
{
  block: 'link',
  mods: { pseudo: true, color: 'green' }
}
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>elemMods<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu88" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Модификаторы элемента</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Объект, содержащий имена и значения модификаторов элемента в качестве пар ключ-значение:
        <bpt id="1">&lt;code preserve="1"&gt;</bpt>{имя_модификатора: 'значение_модификатора'}<ept id="1">&lt;/code&gt;</ept>
    </source>
</trans-unit>
      <trans-unit id="tu90" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu91" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
{
  elem: 'item',
  elemMods: { selected: 'yes' }
}
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>mix<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu93" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Подмешанные блоки/элементы</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Массив, содержащий объекты, описывающие подмешанные блоки и элементы. В качестве значения может выступать
    объект, который трактуется как массив, состоящий из одного элемента.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu96" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
{
  block: 'link',
  mix: [ { block: 'serp-item', elem: 'link' } ]
}
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#extensionbem</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#extensionbem" [#$tu99]&gt;</bpt>Достраивание БЭМ-сущностей по контексту<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="notionhtml"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" resname="-html-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Представление HTML</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMJSON предоставляет возможность задавать некоторые аспекты выходного HTML непосредственно во входных данных.<ph id="1">&lt;br /&gt;</ph>Этой возможностью не следует злоупотреблять, так как BEMJSON представляет собой уровень данных, а непосредственное<ph id="2">&lt;br /&gt;</ph>оформление HTML должно выполняться на уровне шаблонизатора BEMHTML. Однако возможны ситуации, когда оправданно<ph id="3">&lt;br /&gt;</ph>описание HTML-представления на уровне BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMJSON предусмотрены следующие поля для непосредственного управления HTML-представлением:</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Значение</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Пример</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu109" restype="x-td" xml:space="preserve">
<source xml:lang="ru">HTML-тег для данной сущности</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu111" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu112" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'my-block',
  tag: 'img'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu113" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>attrs<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu114" restype="x-td" xml:space="preserve">
<source xml:lang="ru">HTML-атрибуты для данной сущности</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Object<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu116" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu117" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'my-block',
  tag: 'img',
  attrs: { src: '//yandex.ru/favicon.ico', alt: '' }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu118" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>cls<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu119" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Строка, добавляемая к HTML-атрибуту <bpt id="1">&lt;code preserve="1"&gt;</bpt>class<ept id="1">&lt;/code&gt;</ept> (помимо автоматически генерируемых классов)</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu121" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu122" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'my-block',
  cls: 'some-blah-class'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu123" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>bem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu124" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Флаг — отменить генерацию БЭМ-классов в HTML-атрибуте <bpt id="1">&lt;code preserve="1"&gt;</bpt>class<ept id="1">&lt;/code&gt;</ept> для данной сущности</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu126" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu127" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'page',
  tag: 'html',
  bem: false
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu128" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu129" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Либо флаг о наличии клиентского JavaScript у данной сущности, либо параметры JavaScript</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean|Object<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu131" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu132" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{
  block: 'form-input',
  mods: { autocomplete: 'yes' },
  js: {
    dataprovider: { url: 'http://suggest.yandex.ru/...' }
  }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu134" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обратите внимание, что имена и смысл полей BEMJSON, управляющих HTML-представлением, совпадают с именами и смыслом соответствующих <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda" [#$tu134]&gt;</bpt>стандартных мод<ept id="1">&lt;/a&gt;</ept> BEMHTML (тег, атрибуты, класс и т.п.). В случае, если какие-то из аспектов выходного HTML заданы <bpt id="2">&lt;strong&gt;</bpt>и во входных данных, и в BEMHTML-шаблонах<ept id="2">&lt;/strong&gt;</ept>, более высокий приоритет имеют значения, заданные в BEMHTML-шаблонах.</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При генерации HTML будет выполнено одно из двух действий:</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Объединение<ept id="1">&lt;/strong&gt;</ept> значений HTML-параметров, заданных в BEMJSON, cо значениями параметров, заданных в BEMHTML-шаблоне. Объединение значений производится только для тех параметров, для которых оно имеет очевидный смысл: <bpt id="2">&lt;code&gt;</bpt>attrs<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>js<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>mix<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Замещение<ept id="1">&lt;/strong&gt;</ept> значений HTML-параметров, заданных в BEMJSON, значениями, заданными в <bpt id="2">&lt;strong&gt;</bpt>BEMHTML-шаблоне<ept id="2">&lt;/strong&gt;</ept>. Выполняется для всех прочих значений: <bpt id="3">&lt;code&gt;</bpt>tag<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>cls<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>bem<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>content<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu138" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB:<ept id="1">&lt;/strong&gt;</ept> Приоритет BEMHTML-шаблонов позволяет <bpt id="2">&lt;strong&gt;</bpt>автору шаблонов<ept id="2">&lt;/strong&gt;</ept> принимать решение, какие HTML-параметры будут приоритетнее в каждом конкретном случае: заданные в BEMHTML или в BEMJSON. Значения HTML-параметров, заданных в BEMJSON, доступны в шаблонах при обращении к фрагменту входного BEMJSON-дерева в контексте (поле <bpt id="3">&lt;code&gt;</bpt>this.ctx<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu139" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="nesting"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu140" resname="-content-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Вложенность: content</source>
</trans-unit>
      <trans-unit id="tu141" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для представления вложенных БЭМ-сущностей (БЭМ-дерева) в BEMJSON зарезервировано поле <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>. В качестве значения<ph id="2">&lt;br /&gt;</ph>данного поля может выступать произвольный BEMJSON:</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Примитивный тип (строка, число). Значение используется в качестве содержимого (текста) HTML-элемента, соответствующего<ph id="1">&lt;br /&gt;</ph> контекстной сущности.</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Объект, описывающий БЭМ-дерево. Значение используется для генерации HTML-элементов, вложенных в HTML-элемент,<ph id="1">&lt;br /&gt;</ph> соответствующий контекстной сущности.</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Уровень вложенности дерева БЭМ-сущностей, построенного с помощью поля <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>, не ограничен.</source>
</trans-unit>
      <trans-unit id="tu145" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" id="custom_fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu146" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Произвольные поля</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Помимо специальных полей, описывающих БЭМ-сущность и ее HTML-представление, в том же объекте могут присутствовать<ph id="1">&lt;br /&gt;</ph>любые поля с произвольными данными, которые будут доступны для использования в шаблонах BEMHTML или BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примером произвольного поля может служить поле <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept> в блоке ссылки:</source>
</trans-unit>
      <trans-unit id="tu149" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'link',
  url: '//yandex.ru'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu151" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#select_template</source>
</trans-unit>
      <trans-unit id="tu150" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример использования данных из произвольного поля см. в разделе <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#select_template" [#$tu151]&gt;</bpt>Выбор шаблона по условию<ept id="1">&lt;/a&gt;</ept> из документации по BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="customjs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu153" resname="-javascript--bemjson-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Произвольный JavaScript в BEMJSON</source>
</trans-unit>
      <trans-unit id="tu154" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMJSON является менее ограниченным форматом, чем JSON. Произвольные JavaScript-выражения будут валидным BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu155" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Специфика BEMJSON как формата данных заключается в соблюдении описанных в предшествующих разделах соглашений<ph id="1">&lt;br /&gt;</ph>по именованию полей в объектах (для представления БЭМ-сущностей и HTML-представления) и правил вложения объектов.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/rationale/rationale.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="bemhtml------id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">BEMHTML: описание шаблонизатора и его преимуществ</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>BEMHTML<ept id="1">&lt;/strong&gt;</ept> — шаблонизатор (шаблонный движок) для тех, кто ведет веб-разработку в рамках <bpt id="2">&lt;a href="https://ru.bem.info/method" [#$tu3]&gt;</bpt>БЭМ-методологии<ept id="2">&lt;/a&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>BEMHTML — это:</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru">HTML-верстка в терминах блоков, элементов, модификаторов;</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">поддержка CSS в стиле БЭМ;</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">поддержка JS в стиле БЭМ;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">декларативные и выразительные шаблоны;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">удобство сопровождения кода в долгоживущих и развивающихся проектах.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="worldview"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" resname="bemhtml---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">BEMHTML: картина мира</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-методология и BEMHTML, как ее часть, обязаны своим появлением опыту верстки и сопровождения веб-интерфейсов в компании Яндекс. Главные условия, определившие характер веб-разработки в Яндексе:</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">задача создания единого портального стиля;</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru">необходимость в многолетнем сопровождении кода;</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru">потребность быстро вносить изменения;</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru">совместная работа над кодом разных специалистов.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ сформировался как решение всех этих задач, причем прежде всего не как технология, а как <bpt id="1">&lt;em&gt;</bpt>картина мира<ept id="1">&lt;/em&gt;</ept> — ряд принципов веб-разработки.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML — это одна из технологий, позволяющих разрабатывать в соответствии с принципами БЭМ. Поэтому задачи, которые решает BEMHTML, продиктованы этими же принципами.</source>
</trans-unit>
      <trans-unit id="tu18" resname="htmlcss----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">HTML+CSS — ассемблер для веба</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">За этим принципом стоит убеждение, что HTML и CSS не годятся в качестве удобного фреймворка для семантического описания веб-интерфейсов. Причина этого в том, что браузеры по-разному обрабатывают один и тот же HTML и CSS. В результате приходится включать в HTML и CSS специфические элементы, направленные исключительно на обеспечение совместимости с разными браузерами. Так, в недалеком прошлом для кроссбраузерной реализации скругленных уголков приходилось помещать элемент в структуру из шести вложенных <bpt id="1">&lt;code&gt;</bpt>div<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Веб-интерфейс следует описывать в высокоуровневых терминах (шапка, кнопка, меню), что позволяет разделить <bpt id="1">&lt;strong&gt;</bpt>семантику<ept id="1">&lt;/strong&gt;</ept> и <bpt id="2">&lt;strong&gt;</bpt>реализацию<ept id="2">&lt;/strong&gt;</ept>. Такое противопоставление помогает и разделить труд тех, кто разрабатывает структуру интерфейса (дизайн, юзабилити, связь с бэкендом), и тех, кто владеет тонкостями HTML-верстки (кроссбраузерность, поддержка IE).</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Преобразование высокоуровневых интерфейсных терминов в низкоуровневый командный язык браузера (HTML+CSS) напоминает компиляцию в <bpt id="1">&lt;em&gt;</bpt>ассемблер для веба<ept id="1">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Задача шаблонизатора: разделить логику организации интерфейса и HTML-представление<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Организация интерфейса (набор и расположение элементов на странице) описывается отдельно от шаблонов.<ph id="1">&lt;br /&gt;</ph>В рамках БЭМ организацию интерфейса описывает <bpt id="2">&lt;strong&gt;</bpt>БЭМ-дерево<ept id="2">&lt;/strong&gt;</ept> — иерархическая структура из блоков, элементов и модификаторов.</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Шаблоны определяют только правила HTML-оформления отдельных частей интерфейса.<ph id="1">&lt;br /&gt;</ph>В рамках БЭМ каждой части интерфейса соответствует <bpt id="2">&lt;strong&gt;</bpt>БЭМ-сущность<ept id="2">&lt;/strong&gt;</ept> (блок или элемент с модификаторами).</source>
</trans-unit>
      <trans-unit id="tu25" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Нет дублированию кода!</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Этот принцип не специфичен для веб-разработки и вряд ли вызовет возражения. Тем не менее, технологические особенности многих шаблонизаторов нередко вынуждают дублировать код. Это проявляется во всех ситуациях, когда один и тот же элемент интерфейса (например, кнопка) используется многократно. В большинстве шаблонизаторов HTML-код, описывающий кнопку, придется повторить на всех страницах, где она используется. Когда кнопку потребуется усложнить, разработчику придется отредактировать шаблоны всех страниц, где она присутствует. Даже если шаблонизатор позволяет вынести код кнопки в общую функцию, на всех страницах нужно будет заменить код кнопки вызовом этой функции.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Задача шаблонизатора: возможность создания гибких библиотек шаблонов<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Гибкость библиотеки подразумевает:</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для верстальщика — возможность использовать любой шаблон в качестве блока для построения страниц;</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru">и возможность легко модифицировать шаблон в своем проекте без необходимости вмешиваться в код библиотеки;</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для автора библиотеки — отсутствие необходимости заранее проектировать, что именно можно будет переопределять.</source>
</trans-unit>
      <trans-unit id="tu31" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">«БЭМ головного мозга»</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML представляет собой распространение БЭМ-методологии на еще одну технологию — HTML. БЭМ предлагает дизайнеру, разработчику интерфейса, JavaScript-программисту работать в терминах единой предметной области — блоков, элементов, модификаторов. BEMHTML позволяет HTML-верстальщику присоединиться к ним.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Задача: инструментарий для верстки в терминах БЭМ<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для каждой БЭМ-сущности (блока, элемента, модификатора) — свой шаблон;</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru">интеграция с CSS в стиле БЭМ (автоматическая генерация БЭМ-классов для блоков, элементов, модификаторов);</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru">интеграция с JS в стиле БЭМ (автоматическая генерация классов и JS-параметров для блоков, элементов, модификаторов).</source>
</trans-unit>
      <trans-unit id="tu37" resname="-bemhtml-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Возможности BEMHTML</source>
</trans-unit>
      <trans-unit id="tu38" resname="-------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Верстка в терминах БЭМ (блоков, элементов, модификаторов)</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Структура страниц описывается в формате BEMJSON — JavaScript-представление БЭМ-дерева.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор выполняет преобразование БЭМ-дерева в HTML.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Интеграция с CSS в стиле БЭМ.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Интеграция с JS в стиле БЭМ.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Примеры</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данные (БЭМ-дерево), которые шаблонизатор принимает на вход:</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'widgets',
  content: [
    {
      elem: 'weather',
      content: 4
    }
  ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон не требуется (обработка шаблонами по умолчанию).</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="widgets"&gt;
  &lt;div class="widgets__weather"&gt;4&lt;/div&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если блок <bpt id="1">&lt;code&gt;</bpt>widgets<ept id="1">&lt;/code&gt;</ept> имеет JavaScript-реализацию с использованием <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept>, то для передачи JavaScript-параметров блоку можно использовать шаблон:</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block widgets, js: { id: Math.random() * 1e4 }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="widgets i-bem" onclick="return { 'weather': { 'id': 4321 } }"&gt;
  &lt;div class="widgets__weather"&gt;4&lt;/div&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" resname="-------javascript-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Синтаксис описания данных и шаблонов основан на JavaScript</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Декларативные шаблоны. Шаблон состоит из условий применения (предикат) и структуры данных, описывающей HTML-результат (тело шаблона).</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для работы с БЭМ-сущностями синтаксис JavaScript расширен ключевыми словами (<bpt id="1">&lt;code&gt;</bpt>block, elem, mods, elemMods<ept id="1">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Возможность использовать произвольный JavaScript-код в шаблонах. BEMHTML не ставит технических ограничений на выполнение операций в предикате и теле шаблона. Эффективность и корректность работы шаблонов обеспечивается соглашениями, которым следуют разработчики.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Все BEMHTML-шаблоны компилируются в переносимый JavaScript, что позволяет выполнять шаблоны как на сервере, так и на клиенте.</source>
</trans-unit>
      <trans-unit id="tu58" resname="-1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Примеры</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Объявление HTML-тегов для блоков в декларативном стиле:</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block widgets {
  tag: 'ul'
  elem weather, tag: 'li'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;ul class="widgets"&gt;
  &lt;li class="widgets__weather"&gt;4&lt;/li&gt;
&lt;/ul&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Произвольные вычисления в теле шаблона:</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block widgets, elem weather, content: {
  var oldContent = applyNext()
  return (oldContent &gt; 0 ? '+' : '') + oldContent + ' °C'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;ul class="widgets"&gt;
  &lt;li class="widgets__weather"&gt;+4 °C&lt;/li&gt;
&lt;/ul&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu67" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Гибкость и расширяемость «по построению»</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML позволяет разделить верстку на <bpt id="1">&lt;strong&gt;</bpt>независимые блоки<ept id="1">&lt;/strong&gt;</ept>, свободно комбинируемые между собой.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Уровни переопределения<ept id="1">&lt;/strong&gt;</ept> позволяют объединять шаблоны в библиотеки, которые можно использовать в одном или нескольких проектах.</source>
</trans-unit>
      <trans-unit id="tu70" resname="-2-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Примеры</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входные данные:</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'page',
  content: [
    {
      block: 'header',
      content: 'Заголовок 1'
    },
    {
      block: 'header',
      mods: { level: 2 },
      content: 'Заголовок 2'
    }
  ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблоны, определенные в библиотеке:</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block header, tag: 'h1'
block header, mod level 2, tag: 'h2'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблоны, определенные в проекте:</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block header, tag: 'h2'
block header, mod level 2, tag: 'h3'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Результат:</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div classs="page"&gt;
  &lt;h2 class="header"&gt;
  Заголовок 1
  &lt;/h2&gt;
  &lt;h3 class="header header_level_2"&gt;
  Заголовок 2
  &lt;/h3&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu79" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Многопроходность</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML позволяет «на лету» генерировать дополнительные элементы, нужные для решения задач верстки — разного рода обертки. В ходе применения шаблонов можно модифицировать исходные данные (БЭМ-дерево) и заново применять те же шаблоны к уже модифицированным данным. Такая многопроходность позволяет реализовать всю логику генерации оберток в шаблонах, не засоряя лишними элементами входные данные.</source>
</trans-unit>
      <trans-unit id="tu81" resname="-3-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Примеры</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входные данные — имя Яндекс-пользователя:</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'ya-user',
  content: 'Хомяк'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон — выделяет первую букву в имени пользователя и оборачивает ее в тут же сгенерированный элемент:</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block ya-user, content: {
  var oldContent = applyNext();
  return [
    { elem: 'first-letter', content: oldContent[0] },
    oldContent.substring(1)
  ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="ya-user"&gt;&lt;div class="ya-user__first-letter"&gt;Х&lt;/div&gt;омяк&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu88" resname="bemhtml----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">BEMHTML и другие шаблонизаторы <bpt id="1">&lt;a preserve="1" name="andothers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизаторы (шаблонные движки, template engines) — чрезвычайно многочисленный отряд инструментов, насчитывающий сотни видов. За этим многообразием скрывается несколько разных областей применения (генерация HTML, других текстовых форматов, DOM) и несколько различных подходов к решению задачи генерации текста по шаблону и данным.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не все идеи в разработке шаблонизаторов одинаково популярны. По подходам, которые реализованы в BEMHTML, его можно отнести к разряду «экзотических». Рассмотрим несколько возможных принципов классификации шаблонизаторов и место BEMHTML среди них.</source>
</trans-unit>
      <trans-unit id="tu91" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">По семантике (что делает шаблонизатор)</source>
</trans-unit>
      <trans-unit id="tu92" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Интерполяция строк</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор подставляет в текст шаблона строки, соответствующие нужным данным. В дополнение могут использоваться условия, циклы, переменные. Это самый многочисленный класс шаблонизаторов.</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>Шоколад ни в чем не виноват, %username%.<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве примера таких шаблонизаторов можно привести:</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://mustache.github.com</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://mustache.github.com" [#$tu97]&gt;</bpt>Mustache<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://handlebarsjs.com</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://handlebarsjs.com" [#$tu99]&gt;</bpt>Handlebars<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/visionmedia/jade</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/visionmedia/jade" [#$tu101]&gt;</bpt>Jade<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu103" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://linkedin.github.com/dustjs/</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://linkedin.github.com/dustjs/" [#$tu103]&gt;</bpt>DustJS<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu104" resname="data-bind-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Data bind</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор связывает данные с HTML по правилам, описанным отдельно от HTML.</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var html = 'Шоколад ни в чем не виноват,' + '&lt;span class="name"/&gt;.'
, data = { username: 'John Smith' }
, map = plates.Map();

map.class('name').to('username');
plates.bind(html, data, map);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu107" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/leonidas/transparency</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/leonidas/transparency" [#$tu109]&gt;</bpt>Transparency<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu111" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://flatironjs.org/#templating</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://flatironjs.org/#templating" [#$tu111]&gt;</bpt>Flatiron.js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu113" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://angularjs.org</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://angularjs.org" [#$tu113]&gt;</bpt>Angular.js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu115" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://beebole.com/pure/</source>
</trans-unit>
      <trans-unit id="tu114" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://beebole.com/pure/" [#$tu115]&gt;</bpt>Pure<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://knockoutjs.com</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Live data bind<ept id="1">&lt;/strong&gt;</ept> — отличается тем, что в шаблоне можно декларировать связь не со статическими, а изменяющимися данными. Пример такого шаблонизатора — <bpt id="2">&lt;a href="http://knockoutjs.com" [#$tu117]&gt;</bpt>Knockout.js<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu118" resname="data-driven-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Data driven</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор связывает ключевое слово в данных с фрагментом выходного HTML. В предыдущих подходах первичен шаблон, который насыщается данными. Здесь наоборот: первична структура данных, которая при помощи шаблонов транслируется в HTML.</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, приведенный ниже XSLT-шаблон никак не ограничивает структуру данных, в которой может встретиться ключевое слово:</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;xsl:template match="username"&gt;
    &lt;span class="name"&gt;
        &lt;xsl:apply-templates/&gt;
    &lt;/span&gt;
&lt;/xsl:template&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">С одинаковым успехом его можно применить к таким данным:</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>Шоколад ни в чем не виноват, &lt;username&gt;John Smith&lt;/username&gt;.`<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu124" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">И к таким:</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;ul&gt;
  &lt;li&gt;&lt;username&gt;Veni&lt;/username&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;username&gt;Vidi&lt;/username&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;username&gt;Vici&lt;/username&gt;!&lt;/li&gt;
&lt;/ul&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu126" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.w3.org/TR/xslt</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://www.w3.org/TR/xslt" [#$tu128]&gt;</bpt>XSLT<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu129" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML</source>
</trans-unit>
      <trans-unit id="tu130" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">По синтаксису</source>
</trans-unit>
      <trans-unit id="tu131" resname="-------id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Текст в финальном виде со специальными вставками</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Эта модель тесно связана с подходом к шаблонизатору как к системе интерполяции строк. Шаблон в этом случае записывается в виде HTML, который очень мало отличается от финального результата.</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;span class="name"&gt;[% username %]&lt;/span&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu134" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Отсутствие необходимости изучать специальный синтаксис часто выдвигается в качестве преимущества данного подхода.</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://mustache.github.com</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://mustache.github.com" [#$tu137]&gt;</bpt>Mustache<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu139" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://handlebarsjs.com</source>
</trans-unit>
      <trans-unit id="tu138" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://handlebarsjs.com" [#$tu139]&gt;</bpt>Handlebars<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu141" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://linkedin.github.com/dustjs/</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://linkedin.github.com/dustjs/" [#$tu141]&gt;</bpt>DustJS<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu142" resname="--html-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Сокращенная запись HTML</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Языку HTML свойственна синтаксическая избыточность — необходимость в парных открывающих и закрывающих тегах. Например, чтобы объявить: «здесь таблица» — всегда требуется дважды указать <bpt id="1">&lt;code&gt;</bpt>table<ept id="1">&lt;/code&gt;</ept> — в открывающем и закрывающем теге. Разаботчики некоторых шаблонизаторов стремятся облегчить написание и восприятие шаблонов, предлагая сокращенный синтаксис для записи HTML-конструкций.</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>span.name #{username}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu145" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/visionmedia/jade</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/visionmedia/jade" [#$tu147]&gt;</bpt>Jade<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu149" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/sstephenson/eco</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/sstephenson/eco" [#$tu149]&gt;</bpt>Eco<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu150" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Предметно-ориентированный синтаксис</source>
</trans-unit>
      <trans-unit id="tu151" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При таком подходе в шаблоне описывается не финальная HTML-страница, а правила генерации HTML в соответствии с предметной областью шаблонизатора.</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var html = 'Шоколад ни в чем не виноват,' + '&lt;span class="name"/&gt;.'
, data = { username: 'John Smith' }
, map = plates.Map();

map.class('name').to('username');
plates.bind(html, data, map);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu153" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu155" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.w3.org/TR/xslt</source>
</trans-unit>
      <trans-unit id="tu154" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://www.w3.org/TR/xslt" [#$tu155]&gt;</bpt>XSLT<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu157" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://flatironjs.org/#templating</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://flatironjs.org/#templating" [#$tu157]&gt;</bpt>Flatiron.js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu158" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML</source>
</trans-unit>
      <trans-unit id="tu159" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">По базовому языку</source>
</trans-unit>
      <trans-unit id="tu160" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Один базовый язык</source>
</trans-unit>
      <trans-unit id="tu161" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор привязан к разработке на определенном языке. На этом языке записываются все управляющие конструкции в шаблонах.</source>
</trans-unit>
      <trans-unit id="tu162" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.w3.org/TR/xslt</source>
</trans-unit>
      <trans-unit id="tu163" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://www.w3.org/TR/xslt" [#$tu164]&gt;</bpt>XSLT — XML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu166" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/sstephenson/eco</source>
</trans-unit>
      <trans-unit id="tu165" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://github.com/sstephenson/eco" [#$tu166]&gt;</bpt>ECO — CoffeeScript<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu167" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML — JavaScript</source>
</trans-unit>
      <trans-unit id="tu168" resname="-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Компиляция в несколько разных языков</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В шаблонизаторе создается своя предметная область, достаточно примитивная, чтобы допускать компиляцию управляющих конструкций в широкий диапазон языков программирования.</source>
</trans-unit>
      <trans-unit id="tu170" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры:</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.template-toolkit.org/</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://www.template-toolkit.org/" [#$tu172]&gt;</bpt>TT2<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu174" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://mustache.github.com</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="http://mustache.github.com" [#$tu174]&gt;</bpt>Mustache<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu175" resname="-bemhtml---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Почему BEMHTML устроен так</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu177" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Data driven<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Привязка шаблонов к элементам данных позволяет делать шаблоны <bpt id="3">&lt;strong&gt;</bpt>декларативными<ept id="3">&lt;/strong&gt;</ept> и <bpt id="4">&lt;strong&gt;</bpt>атомарными<ept id="4">&lt;/strong&gt;</ept> утверждениями, связывающими элемент и его HTML-представление. Например, <bpt id="5">&lt;em&gt;</bpt>тег блока «шапка» — <bpt id="6">&lt;code&gt;</bpt>table<ept id="6">&lt;/code&gt;</ept><ept id="5">&lt;/em&gt;</ept>. Аналогично CSS в стиле БЭМ описывает оформление атомарными утверждениями: <bpt id="7">&lt;em&gt;</bpt>цвет блока «шапка» — красный<ept id="7">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такие шаблоны обладают модульностью «по построению»: вне зависимости от того, на какой странице встречается ключевое слово, оно будет обрабатываться одним и тем же шаблоном. Это позволяет избежать дублирования кода. Кроме того, атомарные утверждения легко переопределять по отдельности, что открывает возможности для построения гибких библиотек.</source>
</trans-unit>
      <trans-unit id="tu179" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu180" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Предметно-ориентированный синтаксис<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Главные мотивы для выбора синтаксиса, не связанного с HTML, — компактность шаблонов (не нужно повторять каждый тег дважды) и возможность привязывать шаблоны непосредственно к БЭМ-сущностям, а не к тем или иным точкам в HTML.</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu182" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Базовый язык — JavaScript<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Выбор JavaScript в качестве базового языка несет с собой массу преимуществ: производительность, переносимость, активное развитие технологий, и — последнее, но очень важное — привычность для HTML-верстальщиков.</source>
</trans-unit>
      <trans-unit id="tu183" resname="--xslt-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Почему не XSLT?</source>
</trans-unit>
      <trans-unit id="tu184" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В приведенных выше классификациях шаблонизаторов BEMHTML попадает в те же категории, что и XSLT. В Яндексе давно и много использовали XSLT в верстке интерфейсов. Однако разработчики БЭМ отказались от использования XSLT и начали разработку собственного шаблонизатора по следующим причинам:</source>
</trans-unit>
      <trans-unit id="tu185" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu186" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Проблемы с производительностью<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Последовательная реализация модели преобразований, представленной в XSLT, существенно ограничивает его производительность. По скорости работы решения, построенные на XSLT-шаблонах, значительно проигрывают решениям с использованием других шаблонизаторов.</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu188" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>XSLT не развивается<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Разработка XSLT фактически не ведется уже несколько лет. Несмотря на то, что в 2007 году опубликована спецификация XSLT 2.0, ее реализации пока далеки от серьезного использования в реальных задачах. В отсутствие активной разработки в части реализации XSLT не приходится ожидать расширения функциональности или повышения производительности.</source>
</trans-unit>
      <trans-unit id="tu189" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu190" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>XSLT не ориентирован на работу в БЭМ-терминах<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Для максимальной интеграции шаблонного движка в набор инструментов БЭМ необходима нативная поддержка БЭМ предметной области на уровне шаблонизатора.</source>
</trans-unit>
      <trans-unit id="tu191" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Как попробовать</source>
</trans-unit>
      <trans-unit id="tu192" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Шаблон проекта</source>
</trans-unit>
      <trans-unit id="tu194" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/project-stub</source>
</trans-unit>
      <trans-unit id="tu193" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы начать использовать BEMHTML, достаточно склонировать <bpt id="1">&lt;a href="https://github.com/bem/project-stub" [#$tu194]&gt;</bpt>шаблон проекта<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-bl/</source>
</trans-unit>
      <trans-unit id="tu195" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон содержит подготовленную структуру проекта с подключенной библиотекой блоков <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-bl/" [#$tu196]&gt;</bpt>bem-bl<ept id="1">&lt;/a&gt;</ept>, настроенным окружением для сборки и просмотра результата и примером очень простой статической страницы.</source>
</trans-unit>
      <trans-unit id="tu197" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фактически шаблон проекта является готовым станком HTML-верстальщика. Его можно наполнять своими блоками и делать на его основе проекты любой сложности.</source>
</trans-unit>
      <trans-unit id="tu198" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Документация</source>
</trans-unit>
      <trans-unit id="tu200" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/intro/</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/intro/" [#$tu200]&gt;</bpt>Вводное пошаговое руководство по BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu202" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/" [#$tu202]&gt;</bpt>Справочное руководство по BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu204" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/" [#$tu204]&gt;</bpt>Руководство по bem-tools<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu206" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-bl/</source>
</trans-unit>
      <trans-unit id="tu205" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-bl/" [#$tu206]&gt;</bpt>Документация библиотеки блоков bem-bl<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/templating/templating.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="---bem-core-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Шаблонизация данных в bem-core</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Введение</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Данный документ<ept id="1">&lt;/strong&gt;</ept> представляет собой справочное руководство по шаблонизации данных в <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В документе описаны:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">основные особенности BEMHTML и BEMTREE, отличающие их от других шаблонизаторов;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">синтаксис шаблонов BEMHTML и BEMTREE;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">порядок обработки входных данных и генерации HTML.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Целевая аудитория документа<ept id="1">&lt;/strong&gt;</ept> — веб-разработчики и HTML-верстальщики, использующие<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://ru.bem.info/method/" [#$tu10]&gt;</bpt>БЭМ-методологию<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предполагается, что читатель знаком с:</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">HTML</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JavaScript</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru">CSS</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru">БЭМ</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>В документе не описаны<ept id="1">&lt;/strong&gt;</ept> специфические для BEMTREE и BEMHTML моды и поля контекста, настройки сборки, поставщики данных.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="main"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Общие сведения</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Под <bpt id="1">&lt;strong&gt;</bpt>шаблонизацией<ept id="1">&lt;/strong&gt;</ept> в bem-core понимается процесс генерации HTML из некоторых входных данных.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> реализован механизм двухэтапной шаблонизации данных. На первом этапе нормализованные данные, получаемые от бэкенда, преобразуются к view-ориентированному представлению. Эту функцию выполняет шаблонизатор <bpt id="2">&lt;a href="https://ru.bem.info/technology/bemtree/" [#$tu21]&gt;</bpt>BEMTREE<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMTREE формирует <bpt id="1">&lt;strong&gt;</bpt>БЭМ-дерево<ept id="1">&lt;/strong&gt;</ept> в формате BEMJSON. БЭМ-дерево описывает:</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru">структуру страницы – порядок и вложенность блоков;</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru">названия БЭМ-сущностей – имена блоков, элементов, модификаторов блока или элемента;</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru">состояния БЭМ-сущностей – наличие логических модификаторов, значения модификаторов;</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru">произвольные поля – вспомогательные данные (хеш-ключи, адреса публичных API, и т.п.).</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На втором этапе ранее сформированный BEMJSON поэлементно преобразуется в HTML. Эту функцию выполняет шаблонизатор <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/" [#$tu28]&gt;</bpt>BEMHTML<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для каждой БЭМ-сущности создаются HTML-тэги, классы и атрибуты, в соответствии с BEMHTML-шаблонами для этой сущности.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такой подход к шаблонизации обеспечивает максимальную гибкость:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML-шаблоны не содержат сведений о бэкенде. Это позволяет использовать блоки с BEMHTML-шаблонами в разных проектах вне зависимости от конкретной схемы работы с данными;</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEMHTML-шаблоны не содержат сведений о способе представления БЭМ-сущностей в верстке.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemx_arch"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" resname="--bemhtml--bemtree-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Архитектура шаблонизаторов BEMHTML и BEMTREE</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/templating-engines/bemxjst/</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/veged/xjst</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для обработки BEMTREE- и BEMHTML-шаблонов используется модуль <bpt id="1">&lt;a href="https://ru.bem.info/tools/templating-engines/bemxjst/" [#$tu36]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>BEM-XJST является надмножеством <bpt id="3">&lt;a href="https://github.com/veged/xjst" [#$tu37]&gt;</bpt>языка шаблонов XJST<ept id="3">&lt;/a&gt;</ept>, который, в свою очередь, является надмножеством JavaScript.</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEM-XJST — это набор БЭМ-ориентированных хелперов, расширяющий<ph id="1">&lt;br /&gt;</ph>стандартный XJST-синтаксис. В нем определены:</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хелперы для записи подпредикатов, относящихся к предметной области БЭМ;</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хелперы для определения подпредиката по моде;</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хелперы для применения XJST-конструкций <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept> по произвольной моде;</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">конструкцию <bpt id="1">&lt;a href="#applyctx"&gt;</bpt>applyCtx<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEM-XJST реализует наиболее общую схему обработки шаблонов. Логика, специфическая для каждого из шаблонизаторов в отдельности, реализована на уровне их <bpt id="1">&lt;strong&gt;</bpt>базовых шаблонов<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Базовый шаблон – это реализация блока <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> в технологии<ph id="2">&lt;br /&gt;</ph> соответствующего шаблонизатора:</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemtree</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для BEMTREE — <bpt id="1">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemtree" [#$tu46]&gt;</bpt>i-bem.bemtree<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemhtml</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для BEMHTML — <bpt id="1">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/i-bem/i-bem.bemhtml" [#$tu48]&gt;</bpt>i-bem.bemhtml<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Базовый шаблон определяет:</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-li" xml:space="preserve">
<source xml:lang="ru">набор и порядок выполнения доступных для технологии стандартных <bpt id="1">&lt;a href="#moda"&gt;</bpt>мод<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#context_field"&gt;</bpt>поля контекста<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Можно выделить четыре уровня абстракции, на каждом из которых реализуется часть совокупной логики шаблонизатора:</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">XJST</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEM-XJST</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Базовый шаблон</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Пользовательский шаблон</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каждый последующий уровень использует логику, реализованную на предыдущем и дополняет (переопределяет) ее:</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru">XJST предоставляет базовые конструкции для:
</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru">проверки истинности подпредикатов (<bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru">выполнения тела шаблона в модифицированном контексте (<bpt id="1">&lt;code&gt;</bpt>local<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>apply<ept id="2">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-li" xml:space="preserve">
<source xml:lang="ru">BEM-XJST реализует:
</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru">логику, относящуюся к предметной области БЭМ – хелперы для записи подпредикатов для блоков, элементов, модификаторов;</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-li" xml:space="preserve">
<source xml:lang="ru">логику для работы с фрагментом входного БЭМ-дерева (поле контекста <bpt id="1">&lt;code&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept>) и конструкцию <bpt id="2">&lt;code&gt;</bpt>applyCtx<ept id="2">&lt;/code&gt;</ept>, предназначенную для его модификации;</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru">возможность вызывать <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> по моде;</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru">общую схему обработки шаблонов.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Базовый шаблон реализует логику, специфическую для конкретной технологии:
</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-li" xml:space="preserve">
<source xml:lang="ru">набор стандартных мод;</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-li" xml:space="preserve">
<source xml:lang="ru">поля контекста.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Пользовательский шаблон или шаблон блока реализует логику, определяющую функциональность конкретного блока или элемента.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-alt" xml:space="preserve">
<source xml:lang="ru">levels</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><ph id="1">&lt;img src="https://raw.githubusercontent.com/Murdalay/bem-core/feature_doc/common.docs/templating/template-levels.png" [#$tu71] /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu72" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemx_intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" resname="--bem-xjst--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Знакомство с BEM-XJST-шаблонизаторами</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Как следствие использования описанной выше архитектуры, синтаксис BEMHTML и BEMTREE почти идентичен. Вся разница между ними заключается в:</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-li" xml:space="preserve">
<source xml:lang="ru">количестве доступных стандартных мод;</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-li" xml:space="preserve">
<source xml:lang="ru">нескольких полях контекста, специфических для каждого из шаблонизаторов.</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Общие для BEMHTML и BEMTREE синтаксические конструкции и поля контекста объединены понятием <bpt id="1">&lt;strong&gt;</bpt>BEM-XJST-синтаксис<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизаторы, поддерживающие синтаксические конструкции и поля контекста, соответствующие BEM-XJST-синтаксису, называются <bpt id="1">&lt;strong&gt;</bpt>BEM-XJST-шаблонизаторами<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemx_basic"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu80" resname="-bem-xjst--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Особенности BEM-XJST-шаблонизаторов</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem_area"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Привязка к БЭМ-предметной области</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизаторы BEMHTML и BEMTREE входят в связку технологических решений, обеспечивающих создание веб-интерфейсов в рамках<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;a href="https://ru.bem.info/method/" [#$tu84]&gt;</bpt>БЭМ-методологии<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Входные данные шаблонизатора — БЭМ-дерево в формате <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu86]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept>, описывающее веб-страницу.<ph id="2">&lt;br /&gt;</ph>Языки шаблонов BEMHTML и BEMTREE предлагают специальные конструкции для обработки блоков, элементов и модификаторов.</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="decl_templatе"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu88" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Декларативные шаблоны</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ниже рассматриваются особенности декларативного подхода к созданию шаблонов на примере шаблонизатора BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все эти особенности относятся и к шаблонизатору BEMTREE с той оговоркой, что результатом выполнения BEMTREE-шаблонов будет BEMJSON вместо HTML.</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="imperativ"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Императивный подход</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Традиционные шаблонизаторы предлагают <bpt id="1">&lt;strong&gt;</bpt>императивный подход<ept id="1">&lt;/strong&gt;</ept> к написанию шаблонов: HTML формируется в процессе<ph id="2">&lt;br /&gt;</ph>последовательного чтения и выполнения шаблона.</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Результат</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu98" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
{
  items: [
    { text: '1' },
    { text: '2' }
  ]
}
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu100" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
&lt;ul class="menu"&gt;
    [% foreach item in items %]
        &lt;li class="menu__item"&gt;
            [% item.text %]
        &lt;/li&gt;
    [% end %]
&lt;/ul&gt;
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu102" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
&lt;ul class="menu"&gt;
    &lt;li class="menu__item"&gt;1&lt;/li&gt;
    &lt;li class="menu__item"&gt;2&lt;/li&gt;
&lt;/ul&gt;
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu103" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В таком шаблоне неизбежна избыточность, вызванная синтаксическими требованиями HTML: <bpt id="1">&lt;em&gt;</bpt>вывести открывающий<ph id="2">&lt;br /&gt;</ph>тег — сгенерировать содержимое — вывести закрывающий тег<ept id="1">&lt;/em&gt;</ept>. Еще выше избыточность в таблицах, списках и т.п.</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declarativ"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu105" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Декларативный подход</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Декларативный подход<ept id="1">&lt;/strong&gt;</ept> позволяет формулировать шаблоны как набор простых утверждений вида: <bpt id="2">&lt;em&gt;</bpt>тип входных данных (БЭМ-сущность) — HTML-представление (тег, атрибут и т.п.)<ept id="2">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Входные данные</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Результат</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu111" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
{
    block: 'menu',
    content: [
        { elem: 'item', content: '1' },
        { elem: 'item', content: '2' }
    ]
}
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu112" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu113" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
block('menu')(
    tag()('ul'),
    elemMatch('item').tag()('li')
)
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu114" restype="x-td" xml:space="preserve">
<source xml:lang="ru">
        </source>
</trans-unit>
      <trans-unit id="tu115" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>
&lt;ul class="menu"&gt;
    &lt;li class="menu__item"&gt;1&lt;/li&gt;
    &lt;li class="menu__item"&gt;2&lt;/li&gt;
&lt;/ul&gt;
        <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu116" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Декларативность шаблонов достигается за счет того, что в BEMHTML процедура генерации HTML-элемента стандартизирована и выполняется шаблонизатором. Этот же подход к выполнению преобразований данных используется в XSLT и AWK.</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="language"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu118" resname="-----javascript-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Язык описания и исполнения шаблонов — JavaScript</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизаторы BEMHTML и BEMTREE представляют собой специализированный язык (DSL), <bpt id="1">&lt;strong&gt;</bpt>расширяющий<ept id="1">&lt;/strong&gt;</ept> JavaScript.</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В шаблонах могут использоваться <bpt id="1">&lt;strong&gt;</bpt>любые<ept id="1">&lt;/strong&gt;</ept> JavaScript-конструкции.</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Перед выполнением шаблоны компилируется в оптимизированный JavaScript, который принимает BEMJSON и возвращает HTML для BEMHTML и BEMJSON для BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такой шаблон может выполняться как на стороне сервера, так и на стороне клиента.</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="restrictions"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu124" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Ограничения на уровне соглашений</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Разработчики шаблонизатора стремились сделать его максимально гибким инструментом, поэтому в BEMHTML или BEMTREE не предусмотрено<ph id="1">&lt;br /&gt;</ph>технологических ограничений на операции, выполняемые в шаблонах. Фактически, в коде шаблона возможно всё, что возможно в JavaScript.</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все ограничения, обеспечивающие корректность и эффективность выполнения задач шаблонизатора, реализуются на уровне соглашений по написанию шаблонов. Такие соглашения приводятся в данном документе в качестве рекомендаций. Разработчик<ph id="1">&lt;br /&gt;</ph>имеет техническую возможность не следовать соглашениям, но в этом случае следует взвесить преимущества и недостатки своего решения.</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="basic"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu128" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Основные понятия</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="template_ingeneral"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu130" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu131" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Единицей программы на BEMHTML и BEMTREE является <bpt id="1">&lt;strong&gt;</bpt>шаблон<ept id="1">&lt;/strong&gt;</ept>. Шаблон связывает входную БЭМ-сущность (заданную именем сущности, элемента, именем и значением модификатора) и соответствующий этой сущности выходной HTML-элемент или фрагмент BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон состоит из:</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>предиката<ept id="1">&lt;/strong&gt;</ept> — набора условий, при выполнении которых применяется шаблон. Типичный предикат описывает свойства входной БЭМ-сущности;</source>
</trans-unit>
      <trans-unit id="tu134" restype="x-li" xml:space="preserve">
<source xml:lang="ru">и <bpt id="1">&lt;strong&gt;</bpt>тела<ept id="1">&lt;/strong&gt;</ept> — инструкций по генерации результата.</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#unity"&gt;</bpt>BEM-XJST-синтаксис шаблонов<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu137" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inputdata"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu138" resname="--bemjson-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Входные данные: BEMJSON</source>
</trans-unit>
      <trans-unit id="tu139" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поскольку BEM-XJST-шаблонизаторы основаны на JavaScript, стандартным форматом представления БЭМ-дерева выбрана структура данных (объект) JavaScript, с набором дополнительных соглашений о представлении БЭМ-сущностей — BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках шаблона поле <bpt id="1">&lt;code&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept> содержит фрагмент входных данных, относящийся к текущему элементу BEMJSON-дерева и его потомкам.</source>
</trans-unit>
      <trans-unit id="tu141" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Манипуляции с БЭМ-деревом могут производиться несколькими способами:</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-li" xml:space="preserve">
<source xml:lang="ru">путем присвоения значения полю <bpt id="1">&lt;code&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept> или его дочерним полям (<bpt id="2">&lt;code&gt;</bpt>this.ctx.foo = 'bar'<ept id="2">&lt;/code&gt;</ept>). При этом в качестве значения может, например, выступать результат вычисления функции, возвращаемый в ходе выполнения шаблона;</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-li" xml:space="preserve">
<source xml:lang="ru">путем присвоения полю <bpt id="1">&lt;code&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept> или его дочерним полям в качестве значения литерала, описывающего фрагмент БЭМ-дерева в формате BEMJSON. Например <bpt id="2">&lt;code&gt;</bpt>this.ctx = { block: 'foo', content: { elem: 'bar' }}<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-li" xml:space="preserve">
<source xml:lang="ru">с помощью <bpt id="1">&lt;strong&gt;</bpt>специальных конструкций BEM-XJST<ept id="1">&lt;/strong&gt;</ept>, предназначенных для модификации контекста (<bpt id="2">&lt;code&gt;</bpt>local<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>apply<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>applyNext<ept id="4">&lt;/code&gt;</ept>) и подмены входного БЭМ-дерева (<bpt id="5">&lt;code&gt;</bpt>applyCtx<ept id="5">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu145" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#context_field"&gt;</bpt>Поля контекста<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu147" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#xjst"&gt;</bpt>Специальные конструкции BEM-XJST<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu148" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="moda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu149" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Мода</source>
</trans-unit>
      <trans-unit id="tu150" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе работы шаблонизатор последовательно обходит узлы входного БЭМ-дерева. Для каждого узла — БЭМ-сущности — выполняется цикл генерации результата:</source>
</trans-unit>
      <trans-unit id="tu151" restype="x-li" xml:space="preserve">
<source xml:lang="ru">HTML-элемента для технологии BEMHTML;</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-li" xml:space="preserve">
<source xml:lang="ru">фрагмента BEMJSON для технологии BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для вложенных сущностей цикл генерации результата выполняется рекурсивно. Таким образом, результат формируется поэлементно в процессе обхода входного БЭМ-дерева.</source>
</trans-unit>
      <trans-unit id="tu154" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Цикл генерации каждого элемента последовательно проходит ряд фаз, называемых <bpt id="1">&lt;strong&gt;</bpt>модами<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu155" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, в технологии BEMHTML каждая мода отвечает за определенный фрагмент генерируемого HTML-элемента — тег, атрибуты, класс и т.п.</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В каждой моде вызывается процедура выбора и выполнения подходящего шаблона.</source>
</trans-unit>
      <trans-unit id="tu157" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Особый статус имеет <bpt id="1">&lt;strong&gt;</bpt>мода default<ept id="1">&lt;/strong&gt;</ept>, которая отвечает за генерацию результата вцелом для текущей БЭМ-сущности. В рамках этой<ph id="2">&lt;br /&gt;</ph>моды задан набор и порядок прохождения остальных мод, а также определена<ph id="3">&lt;br /&gt;</ph>процедура сборки финального представления HTML-элемента или BEMJSON из фрагментов, сгенерированных в остальных модах. Написание<ph id="4">&lt;br /&gt;</ph>шаблона, который переопределяет поведение в данной моде, позволяет полностью контролировать генерацию элемента непосредственно из шаблона, не пользуясь стандартными модами, позволяющими генерировать выходной элемент по частям.</source>
</trans-unit>
      <trans-unit id="tu158" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu160" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda</source>
</trans-unit>
      <trans-unit id="tu159" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda" [#$tu160]&gt;</bpt>Стандартные моды BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu162" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/#standardmoda</source>
</trans-unit>
      <trans-unit id="tu161" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/#standardmoda" [#$tu162]&gt;</bpt>Стандартные моды BEMTREE<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu163" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu164" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекст</source>
</trans-unit>
      <trans-unit id="tu165" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе обхода входного BEMJSON-дерева шаблонизатор строит <bpt id="1">&lt;strong&gt;</bpt>контекст<ept id="1">&lt;/strong&gt;</ept> — структуру данных, которая доступна в момент применения шаблонов. Контекст соответствует текущему элементу (узлу) входного БЭМ-дерева и включает:</source>
</trans-unit>
      <trans-unit id="tu166" restype="x-li" xml:space="preserve">
<source xml:lang="ru">нормализованные сведения о текущей БЭМ-сущности;</source>
</trans-unit>
      <trans-unit id="tu167" restype="x-li" xml:space="preserve">
<source xml:lang="ru">фрагмент входных данных без модификаций (текущий элемент BEMJSON-дерева и его потомки);</source>
</trans-unit>
      <trans-unit id="tu168" restype="x-li" xml:space="preserve">
<source xml:lang="ru">строковый буфер, в который записывается HTML-результат для BEMHTML или BEMJSON для BEMTREE;</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-li" xml:space="preserve">
<source xml:lang="ru">служебные поля, содержащие сведения о текущем состоянии (мода, позиция во входном БЭМ-дереве и т.п.);</source>
</trans-unit>
      <trans-unit id="tu170" restype="x-li" xml:space="preserve">
<source xml:lang="ru">вспомогательные функции.</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущность, описываемая текущим контекстом, называется <bpt id="1">&lt;strong&gt;</bpt>контекстной сущностью<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#context_field"&gt;</bpt>Поля контекста<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu174" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#extensionbem"&gt;</bpt>Достраивание БЭМ-сущностей по контексту<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu175" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="unity"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu176" resname="bem-xjst---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">BEM-XJST-синтаксис шаблонов</source>
</trans-unit>
      <trans-unit id="tu177" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В данном разделе описаны все синтаксические конструкции языков BEMHTML и BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="template"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu179" resname="-1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu180" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон состоит из двух выражений — <bpt id="1">&lt;strong&gt;</bpt>предиката<ept id="1">&lt;/strong&gt;</ept> и <bpt id="2">&lt;strong&gt;</bpt>тела<ept id="2">&lt;/strong&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Каждый <bpt id="4">&lt;strong&gt;</bpt>предикат<ept id="4">&lt;/strong&gt;</ept> представляет собой список из одного или более <bpt id="5">&lt;strong&gt;</bpt>подпредикатов<ept id="5">&lt;/strong&gt;</ept> (условий).</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предикат шаблона истинен тогда и только тогда, когда истинны все<ph id="1">&lt;br /&gt;</ph>подпредикаты. Порядок записи подпредикатов не имеет значения, <bpt id="2">&lt;em&gt;</bpt>порядок проверки подпредикатов не гарантируется<ept id="2">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu182" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для описания шаблона используется ключевое слово <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept>. Ключевое слово <bpt id="2">&lt;code&gt;</bpt>match<ept id="2">&lt;/code&gt;</ept> — это метод-хелпер, принимающий аргументом<ph id="3">&lt;br /&gt;</ph>перечень подпредикатов. Метод возвращает функцию, принимающую аргументом тело шаблона.</source>
</trans-unit>
      <trans-unit id="tu183" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(подпредикат1, подпредикат2, подпредикат3)(тело);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu184" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например:</source>
</trans-unit>
      <trans-unit id="tu185" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(this.block === 'link', this._mode === 'tag', this.ctx.url)('a');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu186" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тот же набор подпредикатов может быть записан цепочкой:</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(this.block === 'link').match(this._mode === 'tag').match(this.ctx.url)('a');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu188" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Логически программа на BEMHTML и BEMTREE представляет собой одноранговый (плоский) <bpt id="1">&lt;strong&gt;</bpt>список шаблонов<ept id="1">&lt;/strong&gt;</ept>. Однако если несколько<ph id="2">&lt;br /&gt;</ph>шаблонов имеют <bpt id="3">&lt;strong&gt;</bpt>общие подпредикаты<ept id="3">&lt;/strong&gt;</ept>, они могут быть записаны в виде вложенной структуры для минимизации повторов в коде.</source>
</trans-unit>
      <trans-unit id="tu189" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вложенные подпредикаты помещаются в тело общего подпредиката и отделяются друг от друга запятыми. Уровень вложенности подпредикатов не ограничен.</source>
</trans-unit>
      <trans-unit id="tu190" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(подпредикат1)(
  match(подпредикат2)(тело1),
  match(подпредикат3)(тело2)
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu191" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данная запись эквивалентна следующей:</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(подпредикат 1).match(подпредикат 2)(тело1)
match(подпредикат 1).match(подпредикат 3)(тело2)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu193" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если для данного контекста определено более одного шаблона, то<ph id="2">&lt;br /&gt;</ph>больший приоритет имеет <bpt id="3">&lt;strong&gt;</bpt>последний<ept id="3">&lt;/strong&gt;</ept> в порядке перечисления в файле шаблона.<ph id="4">&lt;br /&gt;</ph>Более специфические шаблоны должны быть ниже в тексте, чем более общие.</source>
</trans-unit>
      <trans-unit id="tu194" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#check_predicate</source>
</trans-unit>
      <trans-unit id="tu195" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#check_predicate" [#$tu196]&gt;</bpt>Проверка подпредикатов в определенном порядке<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu197" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="podpredicate"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu198" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Подпредикаты</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предикат шаблона представляет собой набор условий, описывающих момент применения шаблона. Подпредикат шаблона соответствует элементарному условию.</source>
</trans-unit>
      <trans-unit id="tu200" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEM-XJST предусмотрены следующие типы условий:</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Совпадение с входным БЭМ-деревом.</source>
</trans-unit>
      <trans-unit id="tu202" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Мода.</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Произвольное условие</source>
</trans-unit>
      <trans-unit id="tu204" resname="-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Совпадение с входным БЭМ-деревом</source>
</trans-unit>
      <trans-unit id="tu205" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Условия совпадения с входным БЭМ-деревом позволяют описывать применимость шаблона в терминах БЭМ-сущностей: имен блоков и элементов, имен и значений модификаторов.</source>
</trans-unit>
      <trans-unit id="tu206" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для сокращенной записи подпредикатов используются ключевые слова, относящиеся к БЭМ-предметной области.<ph id="1">&lt;br /&gt;</ph>В частности, они избавляют от необходимости использовать ключевое слово <bpt id="2">&lt;code&gt;</bpt>match<ept id="2">&lt;/code&gt;</ept> в БЭМ-ориентированных подпредикатах.</source>
</trans-unit>
      <trans-unit id="tu207" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Следующие предикаты тождественны:</source>
</trans-unit>
      <trans-unit id="tu208" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(this.block === 'foo').match(this.elem === 'bar')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu209" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('foo').elem('bar')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu210" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Используются следующий набор ключевых слов:</source>
</trans-unit>
      <trans-unit id="tu211" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Ключевое слово</source>
</trans-unit>
      <trans-unit id="tu212" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Аргументы</source>
</trans-unit>
      <trans-unit id="tu213" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu214" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Пример</source>
</trans-unit>
      <trans-unit id="tu215" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu216" restype="x-td" xml:space="preserve">
<source xml:lang="ru">имя блока</source>
</trans-unit>
      <trans-unit id="tu217" restype="x-td" xml:space="preserve">
<source xml:lang="ru">идентификатор <bpt id="1">&lt;code preserve="1"&gt;</bpt>[a-zA-Z0-9-]+ <ept id="1">&lt;/code&gt;</ept> или произвольное js-выражение</source>
</trans-unit>
      <trans-unit id="tu218" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu219" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b-menu'), block('b' + '-menu')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu220" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu221" restype="x-td" xml:space="preserve">
<source xml:lang="ru">имя элемента</source>
</trans-unit>
      <trans-unit id="tu222" restype="x-td" xml:space="preserve">
<source xml:lang="ru">идентификатор <bpt id="1">&lt;code preserve="1"&gt;</bpt>[a-zA-Z0-9-]+<ept id="1">&lt;/code&gt;</ept> или произвольное js-выражение</source>
</trans-unit>
      <trans-unit id="tu223" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu224" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b-menu').elem('item')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu225" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>mod<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu226" restype="x-td" xml:space="preserve">
<source xml:lang="ru">имя и значение модификатора блока</source>
</trans-unit>
      <trans-unit id="tu227" restype="x-td" xml:space="preserve">
<source xml:lang="ru">идентификатор <bpt id="1">&lt;code preserve="1"&gt;</bpt>[a-zA-Z0-9-]+ <ept id="1">&lt;/code&gt;</ept>или произвольное js-выражение</source>
</trans-unit>
      <trans-unit id="tu228" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu229" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block ('b-head-logo').mod('size', 'big')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu230" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>elemMod<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu231" restype="x-td" xml:space="preserve">
<source xml:lang="ru">имя и значение модификатора элемента</source>
</trans-unit>
      <trans-unit id="tu232" restype="x-td" xml:space="preserve">
<source xml:lang="ru">идентификатор <bpt id="1">&lt;code preserve="1"&gt;</bpt>[a-zA-Z0-9-]+ <ept id="1">&lt;/code&gt;</ept>или произвольное js-выражение</source>
</trans-unit>
      <trans-unit id="tu233" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu234" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>block('b-head-logo').elem('text').elemMod('size', 'big')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu235" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Идентификаторы блоков, элементов, модификаторов и их значений представляют собой строку, состоящую из латинских символов и дефиса. Вместо идентификатора может быть<ph id="1">&lt;br /&gt;</ph>указано любое JS-выражение, которое будет приведено к строке. Например, запись <bpt id="2">&lt;code&gt;</bpt>block('b-head-logo')<ept id="2">&lt;/code&gt;</ept> тождественна записи <bpt id="3">&lt;code&gt;</bpt>block('b-' + 'head' + '-logo')<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu236" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Важно не путать в предикатах модификаторы блока и модификаторы элемента.</source>
</trans-unit>
      <trans-unit id="tu237" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('input').mod('theme', 'black').elem('hint')<ept id="1">&lt;/code&gt;</ept> задает элемент <bpt id="2">&lt;code&gt;</bpt>hint<ept id="2">&lt;/code&gt;</ept>, вложенный в блок <bpt id="3">&lt;code&gt;</bpt>input<ept id="3">&lt;/code&gt;</ept> с <bpt id="4">&lt;strong&gt;</bpt>модификатором блока<ept id="4">&lt;/strong&gt;</ept><ph id="5">&lt;br /&gt;</ph> <bpt id="6">&lt;code&gt;</bpt>theme<ept id="6">&lt;/code&gt;</ept> в значении <bpt id="7">&lt;code&gt;</bpt>black<ept id="7">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu238" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('input').elem('hint').elemMod('visibility', 'visible')<ept id="1">&lt;/code&gt;</ept> задает элемент <bpt id="2">&lt;code&gt;</bpt>hint<ept id="2">&lt;/code&gt;</ept> с <bpt id="3">&lt;strong&gt;</bpt>модификатором элемента<ept id="3">&lt;/strong&gt;</ept> <bpt id="4">&lt;code&gt;</bpt>visibility<ept id="4">&lt;/code&gt;</ept><ph id="5">&lt;br /&gt;</ph> в значении <bpt id="6">&lt;code&gt;</bpt>visible<ept id="6">&lt;/code&gt;</ept> вложенный в блок <bpt id="7">&lt;code&gt;</bpt>input<ept id="7">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu239" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('input').mod('theme', 'black').elem('hint').elemMod('visibility', 'visible')<ept id="1">&lt;/code&gt;</ept> задает элемент <bpt id="2">&lt;code&gt;</bpt>hint<ept id="2">&lt;/code&gt;</ept> с <bpt id="3">&lt;strong&gt;</bpt>модификатором<ph id="4">&lt;br /&gt;</ph> элемента<ept id="3">&lt;/strong&gt;</ept> <bpt id="5">&lt;code&gt;</bpt>visibility<ept id="5">&lt;/code&gt;</ept> в значении <bpt id="6">&lt;code&gt;</bpt>visible<ept id="6">&lt;/code&gt;</ept> вложенный в блок <bpt id="7">&lt;code&gt;</bpt>input<ept id="7">&lt;/code&gt;</ept> с <bpt id="8">&lt;strong&gt;</bpt>модификатором блока<ept id="8">&lt;/strong&gt;</ept> <bpt id="9">&lt;code&gt;</bpt>theme<ept id="9">&lt;/code&gt;</ept> в значении<ph id="10">&lt;br /&gt;</ph> <bpt id="11">&lt;code&gt;</bpt>black<ept id="11">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu240" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для модификаторов блоков и элементов используются разные ключевые слова, чтобы дать возможность комбинировать<ph id="1">&lt;br /&gt;</ph>в предикатах условия, одновременно включающие упоминания модификаторов блоков и элементов.</source>
</trans-unit>
      <trans-unit id="tu241" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы шаблоны выполнялись без компиляции, было добавлено ключевое слово <bpt id="1">&lt;code&gt;</bpt>elemMatch<ept id="1">&lt;/code&gt;</ept>. Оно используется при записи произвольного подпредиката для элемента:</source>
</trans-unit>
      <trans-unit id="tu242" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('my-block')
    .elemMatch(function() { return this.elem === 'e1' || this.elem === 'e2'  })
        .tag()('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu243" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Дело в том, что в процессе обработки к шаблонам, где нет<ph id="1">&lt;br /&gt;</ph>подпредикатов, описывающих элементы, автоматически добавляется<ph id="2">&lt;br /&gt;</ph>подпредикат <bpt id="3">&lt;code&gt;</bpt>!this.elem<ept id="3">&lt;/code&gt;</ept>. Это позволяет избежать срабатывания шаблонов<ph id="4">&lt;br /&gt;</ph>для блока на элементах этого же блока.</source>
</trans-unit>
      <trans-unit id="tu244" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Как следствие, приведенный выше пример, записанный с конструкцией<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>match<ept id="2">&lt;/code&gt;</ept> вместо <bpt id="3">&lt;code&gt;</bpt>elemMatch<ept id="3">&lt;/code&gt;</ept>, работать не будет, поскольку в процессе обработки к нему будет добавлен подпредикат <bpt id="4">&lt;code&gt;</bpt>!this.elem<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu245" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="moda2"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu246" resname="-1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Мода</source>
</trans-unit>
      <trans-unit id="tu247" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве подпредиката может выступать метод-хелпер для одной из стандартных мод. Это означает, что данный<ph id="1">&lt;br /&gt;</ph>предикат будет истинным в тот момент обработки, когда выставлена соответствующая мода.</source>
</trans-unit>
      <trans-unit id="tu248" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для проверки стандартных мод используются ключевые слова:<ph id="1">&lt;br /&gt;</ph>В BEMHTML:</source>
</trans-unit>
      <trans-unit id="tu249" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>def<ept id="1">&lt;/code&gt;</ept> (мода <bpt id="2">&lt;code&gt;</bpt>default<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu250" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu251" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu252" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>mix<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu253" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>cls<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu254" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu255" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jsAttr<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu256" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>attrs<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu257" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu258" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMTREE:</source>
</trans-unit>
      <trans-unit id="tu259" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>def<ept id="1">&lt;/code&gt;</ept> (мода <bpt id="2">&lt;code&gt;</bpt>default<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu260" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu261" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Хелпер для стандартных мод записывается в виде:</source>
</trans-unit>
      <trans-unit id="tu262" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ключевое-слово()(тело)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu263" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например:</source>
</trans-unit>
      <trans-unit id="tu264" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tag()('a')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu265" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">или</source>
</trans-unit>
      <trans-unit id="tu266" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js()(true)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu267" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для определения подпредиката по нестандартной моде<ph id="1">&lt;br /&gt;</ph>используется ключевое слово <bpt id="2">&lt;code&gt;</bpt>mode<ept id="2">&lt;/code&gt;</ept>. Это метод-хелпер, действующий<ph id="3">&lt;br /&gt;</ph>аналогично конструкции <bpt id="4">&lt;code&gt;</bpt>match<ept id="4">&lt;/code&gt;</ept>. Метод принимает аргументом строку-идентификатор (<bpt id="5">&lt;code&gt;</bpt>[a-zA-Z0-9-]+<ept id="5">&lt;/code&gt;</ept>) — название нестандартной моды — и возвращает функцию, аргументом которой служит тело шаблона. Таким образом, запись <bpt id="6">&lt;code&gt;</bpt>mode('my-mode')<ept id="6">&lt;/code&gt;</ept> эквивалентна записи <bpt id="7">&lt;code&gt;</bpt>match(this._mode === 'my-mode')<ept id="7">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu268" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="random_condition"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu269" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Произвольное условие</source>
</trans-unit>
      <trans-unit id="tu270" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Произвольные условия учитывают совпадения с данными, не попадающими под предметную область БЭМ. В качестве произвольного<ph id="1">&lt;br /&gt;</ph>условия может выступать любое JavaScript-выражение, которое будет приведено к логическому значению.</source>
</trans-unit>
      <trans-unit id="tu271" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Произвольные условия предпочтительно записывать в <bpt id="2">&lt;a preserve="1" name="xjst-canonical"&gt;</bpt><ept id="2">&lt;/a&gt;</ept> <bpt id="3">&lt;strong&gt;</bpt>канонической форме XJST<ept id="3">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu272" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>предикатное выражение === значение<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu273" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Где</source>
</trans-unit>
      <trans-unit id="tu274" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>предикатное выражение<ept id="1">&lt;/code&gt;</ept> — произвольное JavaScript-выражение, приводимое к логическому значению;</source>
</trans-unit>
      <trans-unit id="tu275" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>значение<ept id="1">&lt;/code&gt;</ept> — произвольное JavaScript-выражение.</source>
</trans-unit>
      <trans-unit id="tu276" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При этом количество <bpt id="1">&lt;strong&gt;</bpt>различных<ept id="1">&lt;/strong&gt;</ept> предикатных выражений в подпредикатах шаблонов должно быть минимизировано.<ph id="2">&lt;br /&gt;</ph>Соблюдение этих условий позволит компилятору XJST производить оптимизации над произвольными условиями шаблонов<ph id="3">&lt;br /&gt;</ph>наряду с оптимизацией стандартизованных условий (БЭМ-сущности и моды).</source>
</trans-unit>
      <trans-unit id="tu277" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для записи произвольного предикатного выражения используется ключевое слово <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept>. Например:</source>
</trans-unit>
      <trans-unit id="tu278" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(this.ctx.url)( //произвольное условие. Проверяет наличие поля url во входных данных
        tag()('a'),
        attrs()({ href: this.ctx.url })
    )<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu279" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Произвольный подпредикат <bpt id="1">&lt;code&gt;</bpt>this.ctx.url<ept id="1">&lt;/code&gt;</ept> будет истинен, в случае, когда полю <bpt id="2">&lt;code&gt;</bpt>url<ept id="2">&lt;/code&gt;</ept> во входных данных присвоено значение. В этом случае будет выполнено тело шаблона.<ph id="3">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu280" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="body"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu281" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Тело</source>
</trans-unit>
      <trans-unit id="tu282" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тело шаблона представляет собой выражение, результат вычисления которого используется для генерации выходного результата:</source>
</trans-unit>
      <trans-unit id="tu283" restype="x-li" xml:space="preserve">
<source xml:lang="ru">фрагмента HTML для BEMHTML-шаблона;</source>
</trans-unit>
      <trans-unit id="tu284" restype="x-li" xml:space="preserve">
<source xml:lang="ru">фрагмента BEMJSON, в случае с BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu285" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве тела шаблона может выступать:</source>
</trans-unit>
      <trans-unit id="tu286" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Отдельное JavaScript-выражение:</source>
</trans-unit>
      <trans-unit id="tu287" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(предикат)(JS-выражение)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu288" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок JavaScript-кода:</source>
</trans-unit>
      <trans-unit id="tu289" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(предикат)(function() { JS-код })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu290" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Литерал объекта (хеш):</source>
</trans-unit>
      <trans-unit id="tu291" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(предикат)({name: value})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu292" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Необходимость оборачивать блок JavaScript-кода в безымянную функцию продиктована особенностями исполнения шаблонов в среде разработки. Это рекомендуемый способ. Он позволяет избежать возникновения ошибки при обращении к полям контекста, которые могут быть еще не определены на момент выполнения шаблона.</source>
</trans-unit>
      <trans-unit id="tu293" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В случае если блок JavaScript-кода представляет из себя простой константный литерал, необходимость в безымянной функции отсутствует.<ph id="1">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu294" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тело шаблона передается аргументом в функцию, возвращаемую методом <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept> и хелперами для БЭМ-сущности или моды.</source>
</trans-unit>
      <trans-unit id="tu295" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Синтаксис:</source>
</trans-unit>
      <trans-unit id="tu296" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>стандартная-мода()(тело)

mode('нестандартная-мода')(тело)

БЭМ-сущность('имя-сущности')(тело)

match(произвольный предикат)(тело)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu297" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Важно помнить, что тело шаблона передается в функцию, возвращаемую методом-хелпером, а не в сам хелпер.</source>
</trans-unit>
      <trans-unit id="tu298" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Неправильно:</source>
</trans-unit>
      <trans-unit id="tu299" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').tag('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu300" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Правильно:</source>
</trans-unit>
      <trans-unit id="tu301" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').tag()('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu302" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках тела шаблона можно выполнить следующие действия:</source>
</trans-unit>
      <trans-unit id="tu303" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вычислить и вернуть значение.<ph id="1">&lt;br /&gt;</ph>Если в текущей моде ожидается значение определенного типа, значение, возращаемое при вычислении тела шаблона, будет приведено к этому типу и использовано. Если шаблон не возвращает никакого значения, будет использовано значение <bpt id="2">&lt;code&gt;</bpt>undefined<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu304" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вывести данные непосредственно в HTML-результат (или в BEMJSON).<ph id="1">&lt;br /&gt;</ph> Для этого в теле шаблона следует выполнить запись в буфер результата (<bpt id="2">&lt;code&gt;</bpt>this._buf.push(…)<ept id="2">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu305" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Производить произвольные операции.</source>
</trans-unit>
      <trans-unit id="tu306" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="xjst"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu307" resname="--bem-xjst-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специальные конструкции BEM-XJST</source>
</trans-unit>
      <trans-unit id="tu309" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/templating-engines/bemxjst/</source>
</trans-unit>
      <trans-unit id="tu310" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/veged/xjst</source>
</trans-unit>
      <trans-unit id="tu308" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для интерпретации BEMHTML- и BEMTREE-шаблонов используется модуль <bpt id="1">&lt;a href="https://ru.bem.info/tools/templating-engines/bemxjst/" [#$tu309]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept>. BEM-XJST представляет собой набор БЭМ-ориентированных хелперов, расширяющих предметную область языка <bpt id="2">&lt;a href="https://github.com/veged/xjst" [#$tu310]&gt;</bpt>XJST<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu311" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Помимо хелперов для БЭМ-сущностей и названий мод в шаблонах возможно использовать специальные синтаксические<ph id="1">&lt;br /&gt;</ph>конструкции BEM-XJST. Они предназначены для модификации контекста и явного вызова процедуры выбора и выполнения шаблонов в измененном контексте.</source>
</trans-unit>
      <trans-unit id="tu312" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Обратите внимание, что функциональность и синтаксис<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;strong&gt;</bpt>BEM-XJST-конструкций<ept id="3">&lt;/strong&gt;</ept> (например, конструкции <bpt id="4">&lt;code&gt;</bpt>apply()<ept id="4">&lt;/code&gt;</ept>) может отличаться от синтаксиса и функциональности аналогичных конструкций языка XJST.</source>
</trans-unit>
      <trans-unit id="tu313" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="local"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu314" resname="local-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">local</source>
</trans-unit>
      <trans-unit id="tu315" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Конструкция <bpt id="1">&lt;code&gt;</bpt>local<ept id="1">&lt;/code&gt;</ept> используется для временного изменения контекста и переменных, а также для последующих<ph id="2">&lt;br /&gt;</ph>операций с ними. По синтаксису блок кода <bpt id="3">&lt;code&gt;</bpt>local<ept id="3">&lt;/code&gt;</ept> подобен блокам <bpt id="4">&lt;code&gt;</bpt>while<ept id="4">&lt;/code&gt;</ept> и <bpt id="5">&lt;code&gt;</bpt>for<ept id="5">&lt;/code&gt;</ept> в JavaScript.</source>
</trans-unit>
      <trans-unit id="tu316" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>local<ept id="1">&lt;/code&gt;</ept> записывается в виде:</source>
</trans-unit>
      <trans-unit id="tu317" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>local(this)({hash})(function() {
    // code
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu318" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь</source>
</trans-unit>
      <trans-unit id="tu319" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept> — объект, используемый в качестве контекста. Может не указываться, тогда будет использован текущий контекст;</source>
</trans-unit>
      <trans-unit id="tu320" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>hash<ept id="1">&lt;/code&gt;</ept> — хеш, ключи которого – это поля контекста. В хеше могут использоваться вложенные конструкции вида <bpt id="2">&lt;code&gt;</bpt>ctx.foo<ept id="2">&lt;/code&gt;</ept>. Переданные в хеше значения переменных будут присвоены полям контекста в момент выполнения блока <bpt id="3">&lt;code&gt;</bpt>local<ept id="3">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu321" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>code<ept id="1">&lt;/code&gt;</ept> — JavaScript-код, который выполняется в контексте, где значения переменных соответствуют присвоенным в блоке<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;code&gt;</bpt>hash<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu322" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По выходу из блока local все переменные, значения которых изменялись в блоке <bpt id="1">&lt;code&gt;</bpt>hash<ept id="1">&lt;/code&gt;</ept>, приобретают те значения, которые в них хранились на момент входа в блок.</source>
</trans-unit>
      <trans-unit id="tu323" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если в блоке <bpt id="2">&lt;code&gt;</bpt>hash<ept id="2">&lt;/code&gt;</ept> было присвоено значение переменной (полю объекта), которая не была определена на момент входа в блок <bpt id="3">&lt;code&gt;</bpt>local<ept id="3">&lt;/code&gt;</ept>, по выходу из блока <bpt id="4">&lt;code&gt;</bpt>local<ept id="4">&lt;/code&gt;</ept> эта переменная (поле) будет существовать и получит значение <bpt id="5">&lt;code&gt;</bpt>undefined<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu324" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>hash<ept id="1">&lt;/code&gt;</ept> может записываться следующим образом:</source>
</trans-unit>
      <trans-unit id="tu325" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>local()({ x: 1, 'a.b.c': 2 })(function() {

   // statements body

})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu326" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="apply"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu327" resname="apply-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">apply</source>
</trans-unit>
      <trans-unit id="tu328" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Конструкция <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> предназначена для явного вызова процедуры выбора и выполнения шаблона, предикат которого истинен<ph id="2">&lt;br /&gt;</ph>в данном контексте. Конструкция позволяет вызывать шаблоны в модифицированном контексте.</source>
</trans-unit>
      <trans-unit id="tu329" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Синтаксис:</source>
</trans-unit>
      <trans-unit id="tu330" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>apply({assignObj})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu331" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Где <bpt id="1">&lt;code&gt;</bpt>{assignObj}<ept id="1">&lt;/code&gt;</ept> — объект, ключи которого становятся полями контекста при входе в блок <bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept>. Объект может отсутствовать.</source>
</trans-unit>
      <trans-unit id="tu332" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Первым аргументом может быть передана строка, которая интерпретируется как название моды.</source>
</trans-unit>
      <trans-unit id="tu333" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, выражение <bpt id="1">&lt;code&gt;</bpt>apply('content')<ept id="1">&lt;/code&gt;</ept> эквивалентно выражению <bpt id="2">&lt;code&gt;</bpt>apply({ _mode : 'content' })<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu334" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вычислении выражения <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> выполняются следующие шаги:</source>
</trans-unit>
      <trans-unit id="tu335" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Установка полей контекста, определенных в объекте <bpt id="1">&lt;code&gt;</bpt>{assignObj}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu336" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вызов процедуры выбора и выполнения шаблона в контексте, полученном в результате шага 1.</source>
</trans-unit>
      <trans-unit id="tu337" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Восстановление исходных значений полей контекста.</source>
</trans-unit>
      <trans-unit id="tu338" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Конструкция <bpt id="1">&lt;code&gt;</bpt>apply({assignObj})<ept id="1">&lt;/code&gt;</ept> представляет собой сокращенную запись выражения <bpt id="2">&lt;code&gt;</bpt>local({assignObj})(apply())<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu339" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="applynext"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu340" resname="applynext-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">applyNext</source>
</trans-unit>
      <trans-unit id="tu341" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Конструкция <bpt id="1">&lt;code&gt;</bpt>applyNext<ept id="1">&lt;/code&gt;</ept> позволяет явно запустить процедуру применения шаблонов в текущем или модифицированном контексте из тела шаблона. Применяются все шаблоны с подходящим предикатом, кроме текущего.</source>
</trans-unit>
      <trans-unit id="tu342" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, если у шаблона блока существует базовая реализация, при вызове <bpt id="1">&lt;code&gt;</bpt>applyNext<ept id="1">&lt;/code&gt;</ept> будет возвращен результат ее применения:</source>
</trans-unit>
      <trans-unit id="tu343" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').tag()('span')
block('b1').tag()(function() { return applyNext(); }) // span<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu344" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Синтаксис:</source>
</trans-unit>
      <trans-unit id="tu345" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>applyNext({assignObj})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu346" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Где <bpt id="1">&lt;code&gt;</bpt>{assignObj}<ept id="1">&lt;/code&gt;</ept> — объект, ключи которого становятся полями контекста при входе в блок <bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept>. Объект может отсутствовать.</source>
</trans-unit>
      <trans-unit id="tu347" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Первым аргументом может быть передана строка, которая интерпретируется как название моды.</source>
</trans-unit>
      <trans-unit id="tu348" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вызове <bpt id="1">&lt;code&gt;</bpt>applyNext<ept id="1">&lt;/code&gt;</ept> выполняются следующие шаги:</source>
</trans-unit>
      <trans-unit id="tu349" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Создание в контексте флага, позволяющего избежать бесконечной рекурсии при вызове шаблонов. В качестве флага<ph id="1">&lt;br /&gt;</ph> используется случайное число.</source>
</trans-unit>
      <trans-unit id="tu350" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Добавление в предикат шаблона проверки на наличие флага.</source>
</trans-unit>
      <trans-unit id="tu351" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Установка полей контекста, определенных в объекте <bpt id="1">&lt;code&gt;</bpt>{assignObj}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu352" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вызов процедуры выбора и выполнения шаблона <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu353" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Возвращение значения, полученного в результате выполнения шаблона.</source>
</trans-unit>
      <trans-unit id="tu354" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, шаблон</source>
</trans-unit>
      <trans-unit id="tu355" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1')(function() {
    statements
    return applyNext();
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu356" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">эквивалентен следующему шаблону:</source>
</trans-unit>
      <trans-unit id="tu357" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var _randomflag = ~~(Math.random() * 1e9)
block('b1').match(function() { return !this.ctx[_randomflag]; })(
    statements
    local(this.ctx[_randomflag] = true) apply()
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu358" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Где <bpt id="1">&lt;code&gt;</bpt>statements<ept id="1">&lt;/code&gt;</ept> — произвольные JS-выражения, допустимые в теле шаблона.</source>
</trans-unit>
      <trans-unit id="tu359" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu361" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#inheritage</source>
</trans-unit>
      <trans-unit id="tu360" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#inheritage" [#$tu361]&gt;</bpt>Наследование<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu363" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#additionbem</source>
</trans-unit>
      <trans-unit id="tu362" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#additionbem" [#$tu363]&gt;</bpt>Добавление БЭМ-сущностей для задач верстки<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu364" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="applyctx"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu365" resname="applyctx-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">applyCtx</source>
</trans-unit>
      <trans-unit id="tu366" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Конструкция <bpt id="1">&lt;code&gt;</bpt>applyCtx<ept id="1">&lt;/code&gt;</ept> предназначена для модификации текущего фрагмента БЭМ-дерева <bpt id="2">&lt;code&gt;</bpt>this.ctx<ept id="2">&lt;/code&gt;</ept> с вызовом процедуры применения шаблонов <bpt id="3">&lt;code&gt;</bpt>apply()<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu367" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Синтаксис:</source>
</trans-unit>
      <trans-unit id="tu368" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>applyCtx({assignObj}, newctx)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu369" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu370" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>assignObj<ept id="2">&lt;/code&gt;</ept>] – объект, ключи которого становятся полями контекста при входе в <bpt id="3">&lt;code&gt;</bpt>applyCtx<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu371" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>newctx<ept id="2">&lt;/code&gt;</ept> – объект, с новым входным фрагментом БЭМ-дерева. Может содержать ссылки на исходный <bpt id="3">&lt;code&gt;</bpt>this.ctx<ept id="3">&lt;/code&gt;</ept>. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu372" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вызове <bpt id="1">&lt;code&gt;</bpt>applyCtx<ept id="1">&lt;/code&gt;</ept> выполняются следующие шаги:</source>
</trans-unit>
      <trans-unit id="tu374" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#empty_moda</source>
</trans-unit>
      <trans-unit id="tu373" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Выставление <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#empty_moda" [#$tu374]&gt;</bpt>пустой моды<ept id="1">&lt;/a&gt;</ept> в качестве текущей.</source>
</trans-unit>
      <trans-unit id="tu375" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вызов процедуры выбора и выполнения шаблона <bpt id="1">&lt;code&gt;</bpt>apply()<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu376" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Возвращение значения, полученного в результате выполнения шаблона.</source>
</trans-unit>
      <trans-unit id="tu377" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Выражение <bpt id="1">&lt;code&gt;</bpt>applyCtx(newctx)<ept id="1">&lt;/code&gt;</ept> представляет собой сокращенную запись для выражения <bpt id="2">&lt;code&gt;</bpt>applyNext(this, { _mode: '', ctx: newctx })<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu378" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> При использовании объекта <bpt id="2">&lt;code&gt;</bpt>this.ctx<ept id="2">&lt;/code&gt;</ept> в качестве аргумента для applyCtx() нужно:</source>
</trans-unit>
      <trans-unit id="tu379" restype="x-li" xml:space="preserve">
<source xml:lang="ru">добавить в контекст флаг, позволяющий избежать бесконечной рекурсии при вызове шаблона;</source>
</trans-unit>
      <trans-unit id="tu380" restype="x-li" xml:space="preserve">
<source xml:lang="ru">добавить в предикат шаблона проверку на наличие флага.</source>
</trans-unit>
      <trans-unit id="tu381" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu383" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#wrappingunit</source>
</trans-unit>
      <trans-unit id="tu382" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#wrappingunit" [#$tu383]&gt;</bpt>Оборачивание блока в другой блок<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu385" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#additionbem</source>
</trans-unit>
      <trans-unit id="tu384" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#additionbem" [#$tu385]&gt;</bpt>Добавление БЭМ-сущностей для задач верстки<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu386" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context_field"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu387" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поля контекста</source>
</trans-unit>
      <trans-unit id="tu388" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе работы шаблонизаторы строят <bpt id="1">&lt;strong&gt;</bpt>контекст<ept id="1">&lt;/strong&gt;</ept> — структуру данных, содержащую сведения об обрабатываемом узле BEMJSON и о состоянии процесса обработки. Помимо этого в контексте доступен ряд вспомогательных функций.</source>
</trans-unit>
      <trans-unit id="tu389" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В момент выполнения шаблона контекст доступен в виде объекта, обозначаемого ключевым словом <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>. Обращение к контексту возможно как в предикате, так и в теле шаблона.</source>
</trans-unit>
      <trans-unit id="tu390" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Автор шаблонов имеет возможность определить любые дополнительные поля в контексте.</source>
</trans-unit>
      <trans-unit id="tu391" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все поля контекста можно разделить на две категории:</source>
</trans-unit>
      <trans-unit id="tu392" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Контекстно-зависимые<ept id="1">&lt;/strong&gt;</ept>, значение которых изменяется в зависимости от обрабатываемого узла и фазы процесса обработки.</source>
</trans-unit>
      <trans-unit id="tu393" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Контекстно-независимые<ept id="1">&lt;/strong&gt;</ept>, значение которых постоянно.</source>
</trans-unit>
      <trans-unit id="tu394" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>См. также<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu395" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#context"&gt;</bpt>Контекст<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu396" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="contextdependent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu397" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Контекстно-зависимые поля</source>
</trans-unit>
      <trans-unit id="tu398" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu399" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu400" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu401" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.block<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu402" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu403" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Имя блока (контекстной БЭМ-сущности).</source>
</trans-unit>
      <trans-unit id="tu404" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.elem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu405" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu406" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Имя элемента (контекстной БЭМ-сущности).</source>
</trans-unit>
      <trans-unit id="tu407" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.mods<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu408" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Object<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu409" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока (контекстной БЭМ-сущности), <bpt id="1">&lt;code preserve="1"&gt;</bpt>имя_модификатора: значение_модификатора<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu410" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.elemMods<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu411" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Object<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu412" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Модификаторы элемента (контекстной БЭМ-сущности), <bpt id="1">&lt;code preserve="1"&gt;</bpt>имя_модификатора: значение_модификатора<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu413" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.ctx<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu414" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu415" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Фрагмент входного BEMJSON-дерева, содержащий обрабатываемый узел и его потомков в неизмененном виде.
    Используется для получения доступа к произвольным полям данных входного BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu416" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this._mode<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu417" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu418" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Текущая мода. Если необходимо определить собственные (нестандартные) моды, в соответствующем шаблоне следует
    присваивать этому полю имя моды в момент входа в нее. </source>
</trans-unit>
      <trans-unit id="tu419" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this._buf<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu420" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Array<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu421" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Буфер BEMJSON-результата. Обычно используется только для записи готовых BEMJSON-фрагментов с использованием метода
    <bpt id="1">&lt;code preserve="1"&gt;</bpt>this._buf.push()<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu422" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.generateId()<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu423" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Number<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu424" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Возвращает уникальный идентификатор для текущего контекста. Используется, для генерации уникальных идентификаторов для  HTML-элементов, связанных с помощью атрибута <bpt id="1">&lt;code preserve="1"&gt;</bpt>id<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu425" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept><ph id="2">&lt;br /&gt;</ph>Ключевые слова для проверки БЭМ-сущностей в предикате являются сокращенной записью для проверки значений полей<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;code&gt;</bpt>block<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>elem<ept id="5">&lt;/code&gt;</ept> и т.д. в текущем контексте. Например, подпредикат <bpt id="6">&lt;code&gt;</bpt>block('b1')<ept id="6">&lt;/code&gt;</ept> эквивалентен подпредикату<ph id="7">&lt;br /&gt;</ph><bpt id="8">&lt;code&gt;</bpt>match(this.block === 'b1')<ept id="8">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu426" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Аналогично, ключевые слова для проверки моды в предикате являются сокращенной записью для проверки значения<ph id="1">&lt;br /&gt;</ph>служебного поля <bpt id="2">&lt;code&gt;</bpt>_mode<ept id="2">&lt;/code&gt;</ept> в текущем контексте. Например, подпредикат <bpt id="3">&lt;code&gt;</bpt>def()<ept id="3">&lt;/code&gt;</ept> эквивалентен подпредикату<ph id="4">&lt;br /&gt;</ph><bpt id="5">&lt;code&gt;</bpt>match(this._mode === 'default')<ept id="5">&lt;/code&gt;</ept>.<ph id="6">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu427" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context_independent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu428" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Контекстно-независимые поля</source>
</trans-unit>
      <trans-unit id="tu429" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все контекстно-независимые поля сгруппированы в объекте <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept> и представляют собой вспомогательные функции,<ph id="2">&lt;br /&gt;</ph>используемые при работе шаблонизатора. Автор шаблонов также может пользоваться этими функциями как в теле шаблонов,<ph id="3">&lt;br /&gt;</ph>так и в предикатах.</source>
</trans-unit>
      <trans-unit id="tu430" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu431" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип значения</source>
</trans-unit>
      <trans-unit id="tu432" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu433" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.isArray(Object)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu434" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu435" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, является ли данный объект массивом.</source>
</trans-unit>
      <trans-unit id="tu436" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.isSimple(Object)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu437" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu438" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, является ли данный объект примитивным JavaScript типом.</source>
</trans-unit>
      <trans-unit id="tu439" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.extend(Object, Object)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu440" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>Object<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu441" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Возвращает хэш, объединяющий содержимое двух хэшей, переданных в качестве аргументов. Если хэши содержат
    совпадающие ключи, в результат записывается значение из хэша, переданного в качестве второго аргумента.</source>
</trans-unit>
      <trans-unit id="tu442" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.xmlEscape(String)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu443" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu444" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Возвращает переданную строку с заэкранированными управляющими символами XML <bpt id="1">&lt;code preserve="1"&gt;</bpt>[&amp;&lt;&gt;]<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu445" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>this.attrEscape(String)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu446" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu447" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Экранирует значение управляющих символов для значений XML- и HTML-атрибутов  (<bpt id="1">&lt;code preserve="1"&gt;</bpt>"[&amp;&lt;&gt;]<ept id="1">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu448" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="custom_static_methods"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu449" resname="-------id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Добавление пользовательских методов к контекстно-независимым полям</source>
</trans-unit>
      <trans-unit id="tu450" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Набор вспомогательных функций, доступный в контекстно-независимых полях, определяется базовым блоком шаблонизатора. Это позволяет использовать различный набор функций для BEMTREE и BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu451" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Технически, вспомогательные функции являются статическими методами псевдоклассового конструктора <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept>, реализованного в базовых блоках (<bpt id="2">&lt;code&gt;</bpt>i-bem.bemhtml<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>i-bem.bemtree<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu452" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступный набор функций может быть дополнен пользователем. Для этого нужно расширить прототип <bpt id="1">&lt;code&gt;</bpt>BEMContext<ept id="1">&lt;/code&gt;</ept> новым статическим методом. После этого добавленный метод будет доступен в шаблонах в контексте блока:</source>
</trans-unit>
      <trans-unit id="tu453" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>oninit(function(exports, context) {
    context.BEMContext.prototype.newMethod = function() {
        /* ... */
    }
});

block('b1').content()(function() {
    this.newMethod();
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu454" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Статические методы функций-конструкторов по умолчанию вызываются в контексте самой функции-конструктора. Так, внутри метода <bpt id="2">&lt;code&gt;</bpt>newMethod<ept id="2">&lt;/code&gt;</ept> ссылка <bpt id="3">&lt;code&gt;</bpt>this<ept id="3">&lt;/code&gt;</ept> при вызове будет указывать на конструктор <bpt id="4">&lt;code&gt;</bpt>BEMContext<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu455" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="extensionbem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu456" resname="-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Достраивание БЭМ-сущностей по контексту</source>
</trans-unit>
      <trans-unit id="tu457" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMJSON принято записывать БЭМ-сущности в свернутом виде. Например, если в блок <bpt id="1">&lt;code&gt;</bpt>menu<ept id="1">&lt;/code&gt;</ept> вложен элемент <bpt id="2">&lt;code&gt;</bpt>item<ept id="2">&lt;/code&gt;</ept>,<ph id="3">&lt;br /&gt;</ph>в объекте, описывающем пункт меню, не указывается имя содержащего его блока меню:</source>
</trans-unit>
      <trans-unit id="tu458" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
  block: 'menu',
  content: {
    elem: 'item'
  }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu459" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Информация о том, что элемент <bpt id="1">&lt;code&gt;</bpt>item<ept id="1">&lt;/code&gt;</ept> принадлежит блоку <bpt id="2">&lt;code&gt;</bpt>menu<ept id="2">&lt;/code&gt;</ept>, достраивается по контексту (на основании вложенности)<ph id="3">&lt;br /&gt;</ph>в процессе работы шаблонизатора. В момент, когда контекстной сущностью является блок <bpt id="4">&lt;code&gt;</bpt>menu<ept id="4">&lt;/code&gt;</ept>, в полях контекста будут<ph id="5">&lt;br /&gt;</ph>выставлены следующие значения:</source>
</trans-unit>
      <trans-unit id="tu460" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.block: 'menu'
this.elem: undefined
this.ctx.block: 'menu'
this.ctx.elem: undefined<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu461" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В момент входа во вложенный элемент <bpt id="1">&lt;code&gt;</bpt>item<ept id="1">&lt;/code&gt;</ept> в поле <bpt id="2">&lt;code&gt;</bpt>this.block<ept id="2">&lt;/code&gt;</ept> достраивается значение <bpt id="3">&lt;code&gt;</bpt>menu<ept id="3">&lt;/code&gt;</ept>. В то же время в поле<ph id="4">&lt;br /&gt;</ph><bpt id="5">&lt;code&gt;</bpt>this.ctx.block<ept id="5">&lt;/code&gt;</ept> находится значение <bpt id="6">&lt;code&gt;</bpt>undefined<ept id="6">&lt;/code&gt;</ept>, так как во входном BEMJSON это поле в элементе <bpt id="7">&lt;code&gt;</bpt>item<ept id="7">&lt;/code&gt;</ept> не определено:</source>
</trans-unit>
      <trans-unit id="tu462" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.block: 'menu'
this.elem: 'item'
this.ctx.block: undefined
this.ctx.elem: 'item'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu463" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Достраивание выполняется также для элементов, примешанных внутри блоков. Например, в приведенном БЭМ-дереве:</source>
</trans-unit>
      <trans-unit id="tu464" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'b1', mix: { elem: 'e1' } }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu465" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В примешанном элементе будет достроено имя блока:</source>
</trans-unit>
      <trans-unit id="tu466" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'b1', mix: { block: 'b1', elem: 'e1' } }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu467" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Достраивание БЭМ-сущностей необходимо для корректного срабатывания предикатов на элементы блоков вида<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>block('menu').elem('item')<ept id="2">&lt;/code&gt;</ept>, так как в таких предикатах проверяются значения полей контекста <bpt id="3">&lt;code&gt;</bpt>this.block<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>this.elem<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu468" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Чтобы избежать срабатывания предикатов вида <bpt id="2">&lt;code&gt;</bpt>block('menu')<ept id="2">&lt;/code&gt;</ept> внутри вложенных в блок элементов, на этапе компиляции<ph id="3">&lt;br /&gt;</ph>шаблонов к таким предикатам в необходимых случаях автоматически добавляется подпредикат <bpt id="4">&lt;code&gt;</bpt>!this.elem<ept id="4">&lt;/code&gt;</ept>. Автоматическое<ph id="5">&lt;br /&gt;</ph>добавление может не сработать, если предикат шаблона содержит подпредикат с произвольным условием, записанный<ph id="6">&lt;br /&gt;</ph>не в <bpt id="7">&lt;a href="#xjst-canonical"&gt;</bpt>канонической форме XJST<ept id="7">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu469" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="polymorph"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu470" resname="-----bemtree--bemhtml-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Сборка и подключение бандла технологий BEMTREE и BEMHTML</source>
</trans-unit>
      <trans-unit id="tu472" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu473" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/filesystem/</source>
</trans-unit>
      <trans-unit id="tu471" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В соответствии с <bpt id="1">&lt;a href="https://ru.bem.info/method/" [#$tu472]&gt;</bpt>БЭМ методологией<ept id="1">&lt;/a&gt;</ept> реализации шаблонов BEMHTML и BEMTREE размещаются в <bpt id="2">&lt;a href="https://ru.bem.info/method/filesystem/" [#$tu473]&gt;</bpt>файловой системе<ept id="2">&lt;/a&gt;</ept> как набор файлов с суффиксами <bpt id="3">&lt;code&gt;</bpt>.bemhtml<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>.bemtree<ept id="4">&lt;/code&gt;</ept> соответственно.</source>
</trans-unit>
      <trans-unit id="tu474" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Файлы шаблонов размещаются в каталогах блоков, использующих шаблонизацию, а также в каталогах элементов.</source>
</trans-unit>
      <trans-unit id="tu475" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В терминах БЭМ каждый блок или элемент, использующий шаблонизацию, содержит файлы шаблонов, реализованные в <bpt id="1">&lt;strong&gt;</bpt>технологиях<ept id="1">&lt;/strong&gt;</ept> BEMHTML и (или) BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu476" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы использовать BEMHTML- или BEMTREE-шаблоны блоков и элементов нужно:</source>
</trans-unit>
      <trans-unit id="tu477" restype="x-li" xml:space="preserve">
<source xml:lang="ru">произвести <bpt id="1">&lt;strong&gt;</bpt>сборку<ept id="1">&lt;/strong&gt;</ept> файлов технологий из блоков в файл <bpt id="2">&lt;strong&gt;</bpt>бандла технологии<ept id="2">&lt;/strong&gt;</ept> (иначе называемый рантайм бандл);</source>
</trans-unit>
      <trans-unit id="tu478" restype="x-li" xml:space="preserve">
<source xml:lang="ru">подключить файл бандла к проекту.</source>
</trans-unit>
      <trans-unit id="tu479" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Средства и инструменты, с помощью которых осуществляется сборка, называются <bpt id="1">&lt;strong&gt;</bpt>технологией сборки<ept id="1">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu480" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="make"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu481" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Сборка</source>
</trans-unit>
      <trans-unit id="tu483" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/</source>
</trans-unit>
      <trans-unit id="tu482" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> используется технология сборки с помощью пакета <bpt id="2">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/" [#$tu483]&gt;</bpt>bem-tools<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu485" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/project-stub</source>
</trans-unit>
      <trans-unit id="tu484" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, в <bpt id="1">&lt;a href="https://github.com/bem/project-stub" [#$tu485]&gt;</bpt>project-stub<ept id="1">&lt;/a&gt;</ept> с поддержкой <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>, сборка производится в ходе работы сервера, вызываемого командой <bpt id="3">&lt;code&gt;</bpt>bem server<ept id="3">&lt;/code&gt;</ept> или командой <bpt id="4">&lt;code&gt;</bpt>bem make<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu487" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/levels/</source>
</trans-unit>
      <trans-unit id="tu486" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При сборке командой <bpt id="1">&lt;code&gt;</bpt>bem server<ept id="1">&lt;/code&gt;</ept> файлы с суффиксом <bpt id="2">&lt;code&gt;</bpt>.bemhtml<ept id="2">&lt;/code&gt;</ept> автоматически собираются из блоков, со всех используемых по умолчанию <bpt id="3">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/levels/" [#$tu487]&gt;</bpt>уровней переопределения<ept id="3">&lt;/a&gt;</ept>. Подключение также производится автоматически.</source>
</trans-unit>
      <trans-unit id="tu488" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для файлов с суффиксом <bpt id="1">&lt;code&gt;</bpt>.bemtree<ept id="1">&lt;/code&gt;</ept> автоматическая сборка командой <bpt id="2">&lt;code&gt;</bpt>bem server<ept id="2">&lt;/code&gt;</ept> не производится. О том, как настроить их сборку в <bpt id="3">&lt;code&gt;</bpt>project-stub<ept id="3">&lt;/code&gt;</ept>, читайте в разделе <bpt id="4">&lt;a href="#buthow"&gt;</bpt>Как настроить сборку BEMTREE в project-stub<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu489" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>project-stub<ept id="1">&lt;/code&gt;</ept> бандлы, собранные из файлов технологий блоков, по умолчанию сохраняются в каталоге <bpt id="2">&lt;code&gt;</bpt>index<ept id="2">&lt;/code&gt;</ept> на уровне переопределения <bpt id="3">&lt;code&gt;</bpt>desktop.bundles<ept id="3">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu490" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для BEMHTML-шаблонов — <bpt id="1">&lt;code&gt;</bpt>index.bemhtml.js<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu491" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для BEMTREE-шаблонов — <bpt id="1">&lt;code&gt;</bpt>index.bemtree.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu492" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Помимо сборки и минимизации кода, <bpt id="1">&lt;strong&gt;</bpt>модуль технологии<ept id="1">&lt;/strong&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>bem-tools<ept id="2">&lt;/code&gt;</ept>, осуществляющий сборку, добавляет в файл бандла полиморфную обвязку, которая:</source>
</trans-unit>
      <trans-unit id="tu494" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/modules/</source>
</trans-unit>
      <trans-unit id="tu493" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Позволяет подключить бандл как <bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/modules/" [#$tu494]&gt;</bpt>YModules<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu495" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Позволяет подключить бандл как CommonJS-модуль;</source>
</trans-unit>
      <trans-unit id="tu496" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Формирует из бандла глобальный объект, в случае если ни один из предыдущих способов не был использован (по умолчанию только для BEMHTML).</source>
</trans-unit>
      <trans-unit id="tu497" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="buthow"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu498" resname="---bemtree--project-stub-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Как настроить сборку BEMTREE в project-stub</source>
</trans-unit>
      <trans-unit id="tu500" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/</source>
</trans-unit>
      <trans-unit id="tu499" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Напомним, что в <bpt id="1">&lt;code&gt;</bpt>project-stub<ept id="1">&lt;/code&gt;</ept> с поддержкой <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept> в качестве системы сборки используется пакет <bpt id="3">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/" [#$tu500]&gt;</bpt>bem-tools<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu501" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы включить в сборку bemtree-файлы блоков нужно:</source>
</trans-unit>
      <trans-unit id="tu502" restype="x-li" xml:space="preserve">
<source xml:lang="ru">добавить в файл <bpt id="1">&lt;code&gt;</bpt>.bem/make.js<ept id="1">&lt;/code&gt;</ept> имя технологии <bpt id="2">&lt;code&gt;</bpt>'bemtree'<ept id="2">&lt;/code&gt;</ept> к списку технологий, возвращаемых методом <bpt id="3">&lt;code&gt;</bpt>getTechs<ept id="3">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu503" restype="x-li" xml:space="preserve">
<source xml:lang="ru">добавить к декларации сборки (например <bpt id="1">&lt;code&gt;</bpt>index.bemjson.js<ept id="1">&lt;/code&gt;</ept>) в папке с собираемым бандлом, имена блоков, из которых нужно собирать bemtree-файлы . В качестве альтернативы, для этих целей можно использовать deps.js-файлы внутри блоков, участвующих в сборке. При этом базовой декларацией может выступать файл технологии bemdecl.js вместо bemjson.js</source>
</trans-unit>
      <trans-unit id="tu504" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для осуществления сборки используется команда <bpt id="1">&lt;code&gt;</bpt>bem make<ept id="1">&lt;/code&gt;</ept>. Например бандл <bpt id="2">&lt;code&gt;</bpt>index.bemtree.js<ept id="2">&lt;/code&gt;</ept> в каталоге <bpt id="3">&lt;code&gt;</bpt>index<ept id="3">&lt;/code&gt;</ept> на уровне переопределения `desktop.bundles может быть собран следующей командой:</source>
</trans-unit>
      <trans-unit id="tu505" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bem make desktop.bundles/index/index.bemtree<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu506" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">После этого собранный бандл может быть подключен к проекту любым удобным способом из числа описанных выше.</source>
</trans-unit>
      <trans-unit id="tu507" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Каталог <bpt id="2">&lt;code&gt;</bpt>.bem<ept id="2">&lt;/code&gt;</ept> находится в корне проекта и содержит файлы с настройками сборки и кеш.</source>
</trans-unit>
      <trans-unit id="tu508" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="require"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu509" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Подключение</source>
</trans-unit>
      <trans-unit id="tu510" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="ymodule"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu511" resname="bemhtml--ymodules-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">BEMHTML как YModules</source>
</trans-unit>
      <trans-unit id="tu512" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Бандл технологии BEMHTML может быть подключены с помощью модульной системы YModules. Чтобы подключить модуль, нужно воспользоваться асинхронным методом <bpt id="1">&lt;code&gt;</bpt>modules.require<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu513" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['BEMHTML'],  function(BEMHTML) {
    // user code
  });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu514" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Первым параметром методу передается массив строк – имен подключаемых<ph id="1">&lt;br /&gt;</ph>модулей. Вторым параметром – callback-функция, которой передаются<ph id="2">&lt;br /&gt;</ph>объекты соответствующих модулей после разрешения зависимостей.</source>
</trans-unit>
      <trans-unit id="tu515" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Подключаемый модуль должен быть собран в общий рантайм бандл с подключающим.</source>
</trans-unit>
      <trans-unit id="tu516" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="commonjs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu517" resname="bemhtml--commonjs-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">BEMHTML как CommonJS</source>
</trans-unit>
      <trans-unit id="tu518" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы подключить бандл технологий BEMHTML как CommonJS-модуль нужно воспользоваться стандартным методом NodeJS <bpt id="1">&lt;code&gt;</bpt>require<ept id="1">&lt;/code&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>При этом требуется явно указать путь до бандла:</source>
</trans-unit>
      <trans-unit id="tu519" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js var    BEMHTML = require('./desktop.bundles/index/index.bemhtml').BEMHTML;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu520" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В примере выше путь приведен относительно модуля, расположенного в корневом каталоге проекта.</source>
</trans-unit>
      <trans-unit id="tu521" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="globalobj"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu522" resname="bemhtml-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">BEMHTML в виде глобального объекта</source>
</trans-unit>
      <trans-unit id="tu523" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Глобальный объект BEMHTML будет доступен в случае, если бандл<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>.bemhtml.js<ept id="2">&lt;/code&gt;</ept> не был подключен с помощью YModules или как CommonJS-модуль.</source>
</trans-unit>
      <trans-unit id="tu524" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> глобального объекта <bpt id="2">&lt;code&gt;</bpt>BEMHTML<ept id="2">&lt;/code&gt;</ept> может быть вызван в любом JavaScript-окружении, как на сервере, так и на клиенте.</source>
</trans-unit>
      <trans-unit id="tu525" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu526" resname="--bemtree-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Подключение бандла BEMTREE</source>
</trans-unit>
      <trans-unit id="tu527" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При подключении рантайма BEMTREE с помощью YModules или в виде CommonJS-модуля в некоторых проектах возможно возникновение ошибки. Причина ее в отсутствии объекта <bpt id="1">&lt;code&gt;</bpt>Vow<ept id="1">&lt;/code&gt;</ept>в глобальном контексте технологией BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu528" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В последующих версиях <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> ошибка будет устранена. Пока же требуется выполнить рантайм технологии BEMTREE в модифицированном контексте, содержащем нужные объекты.</source>
</trans-unit>
      <trans-unit id="tu529" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для этого сначала нужно установить в проекте npm-пакет Vow:</source>
</trans-unit>
      <trans-unit id="tu530" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ npm i vow<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu531" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо того, чтобы подключить рантайм бандл BEMTREE как CommonJS-модуль, воспользуемся <bpt id="1">&lt;code&gt;</bpt>fs<ept id="1">&lt;/code&gt;</ept> – стандартным модулем NodeJS, чтобы сохранить содержимое бандла в переменную:</source>
</trans-unit>
      <trans-unit id="tu532" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// подключаем модули
var FS = require('fs'),
    VM = require('vm'),
    Vow = require('vow'),

// считываем из каталога /desktop.bundles/index/ файл бандла BEMTREE
bemtreeTemplate = FS.readFileSync('./desktop.bundles/index/index.bemtree.js', 'utf-8'),

// создаем объект контекста context с помощью метода createContext
context = VM.createContext({
    console: console,
    Vow: Vow
});

// выполняем сценарий из бандла BEMTREE в контексте, модифицированном объектом context
VM.runInContext(bemtreeTemplate, context);
BEMTREE = context.BEMTREE;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu533" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Результатом выполнения рантайма в модифицированном контексте будет полностью сформированный объект BEMTREE, содержащий все нужные для работы технологии свойства.</source>
</trans-unit>
      <trans-unit id="tu534" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Пакет <bpt id="2">&lt;code&gt;</bpt>vm<ept id="2">&lt;/code&gt;</ept> позволяет выполнить рантайм технологии BEMTREE в модифицированном контексте.</source>
</trans-unit>
      <trans-unit id="tu535" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bemapply"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu536" resname="-apply--bemhtml--bemtree-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Метод apply объектов BEMHTML и BEMTREE</source>
</trans-unit>
      <trans-unit id="tu537" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В свойствах объектов BEMHTML и BEMTREE, вне зависимости от способа подключения бандла, присутствует метод <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu538" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMHTML.apply()<ept id="1">&lt;/code&gt;</ept> для технологии BEMHTML;</source>
</trans-unit>
      <trans-unit id="tu539" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMTREE.apply()<ept id="1">&lt;/code&gt;</ept> для технологии BEMTREE.</source>
</trans-unit>
      <trans-unit id="tu540" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> инициирует процесс шаблонизации.<ph id="2">&lt;br /&gt;</ph>Аргументом он принимает фрагмент БЭМ-дерева в формате BEMJSON, для которого осуществляется шаблонизация.</source>
</trans-unit>
      <trans-unit id="tu542" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/vow</source>
</trans-unit>
      <trans-unit id="tu541" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> объекта BEMTREE – асинхронный. Резульатом его выполнения<ph id="2">&lt;br /&gt;</ph>будет <bpt id="3">&lt;a href="https://github.com/dfilatov/vow" [#$tu542]&gt;</bpt>vow<ept id="3">&lt;/a&gt;</ept>-промис. Поэтому, чтобы<ph id="4">&lt;br /&gt;</ph>получить сформированный BEMJSON для следующего этапа шаблонизации,<ph id="5">&lt;br /&gt;</ph>нужно воспользоваться методом <bpt id="6">&lt;code&gt;</bpt>.then()<ept id="6">&lt;/code&gt;</ept>. Этот метод дожидается<ph id="7">&lt;br /&gt;</ph>разрешения промиса, а затем передает результат в качестве аргумента в callback-функцию.</source>
</trans-unit>
      <trans-unit id="tu543" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В упрощенном виде двухэтапная шаблонизация может быть реализована так:</source>
</trans-unit>
      <trans-unit id="tu544" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js BEMTREE.apply({ block: 'intitial' })     .then(function(bemjson) {         var html = BEMHTML.apply(bemjson);     });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu545" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При этом BEMTREE-шаблон блока <bpt id="1">&lt;code&gt;</bpt>initial<ept id="1">&lt;/code&gt;</ept> может содержать ссылки на другие БЭМ-сущности. Тогда шаблонизатор рекурсивно вызовет BEMTREE-шаблоны, на которые он ссылался.</source>
</trans-unit>
      <trans-unit id="tu546" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Объекты BEMHTML и BEMTREE используются только для запуска процесса шаблонизации и не содержат каких-либо полезных свойств, кроме метода <bpt id="2">&lt;code&gt;</bpt>apply<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu547" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="links"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu548" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Смотрите также</source>
</trans-unit>
      <trans-unit id="tu549" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Технологии</source>
</trans-unit>
      <trans-unit id="tu551" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/</source>
</trans-unit>
      <trans-unit id="tu550" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/" [#$tu551]&gt;</bpt>BEMTREE<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu553" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/</source>
</trans-unit>
      <trans-unit id="tu552" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/" [#$tu553]&gt;</bpt>BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu555" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu554" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu555]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu556" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Примеры</source>
</trans-unit>
      <trans-unit id="tu558" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/current/bemtree/#examples</source>
</trans-unit>
      <trans-unit id="tu557" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemtree/current/bemtree/#examples" [#$tu558]&gt;</bpt>Примеры и рецепты BEMTREE<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu560" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#examples</source>
</trans-unit>
      <trans-unit id="tu559" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#examples" [#$tu560]&gt;</bpt>Примеры и рецепты BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu561" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">В сообществе</source>
</trans-unit>
      <trans-unit id="tu563" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://tech.yandex.ru/events/bemup/29-november-2013/talks/1413/</source>
</trans-unit>
      <trans-unit id="tu562" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Мастер-класс <bpt id="1">&lt;a href="https://tech.yandex.ru/events/bemup/29-november-2013/talks/1413/" [#$tu563]&gt;</bpt>Динамический БЭМ-сайт на Node.js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu565" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://tech.yandex.ru/events/bemup/yac-bemup/talks/1354/</source>
</trans-unit>
      <trans-unit id="tu564" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://tech.yandex.ru/events/bemup/yac-bemup/talks/1354/" [#$tu565]&gt;</bpt>BEMTREE — генерируй дерево<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/bemhtml-js-syntax/bemhtml-js-syntax.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="js--bemhtml.----id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис BEMHTML. Руководство по миграции</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Введение</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/bemhtml/reference/</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Документ предназначен для веб-разработчиков и HTML-верстальщиков, использующих <bpt id="1">&lt;a href="https://ru.bem.info/method/" [#$tu5]&gt;</bpt>БЭМ-методологию<ept id="1">&lt;/a&gt;</ept> и <bpt id="2">&lt;a href="https://ru.bem.info/libs/bem-core/current/bemhtml/reference/" [#$tu6]&gt;</bpt>шаблонизатор BEMHTML<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В документе описаны:</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#compat"&gt;</bpt>совместимость<ept id="1">&lt;/a&gt;</ept> BEMHTML-шаблонов, реализованных в разном синтаксисе;</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru">настройки <bpt id="1">&lt;a href="#runmode"&gt;</bpt>среды исполнения шаблонов<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-li" xml:space="preserve">
<source xml:lang="ru">схема <bpt id="1">&lt;a href="#run"&gt;</bpt>обработки BEMHTML-шаблонов<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru">реализация в <bpt id="1">&lt;a href="#syntax"&gt;</bpt>JavaScript-синтаксисе<ept id="1">&lt;/a&gt;</ept> стандартных операций шаблонизатора BEMHTML;</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#steps"&gt;</bpt>алгоритм преобразования<ept id="1">&lt;/a&gt;</ept> шаблонов из сокращенного в JS-синтаксис.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В документе не описаны настройка среды разработки и процедуры компиляции шаблонов, особенности шаблонизатора BEMHTML, формат входных данных <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu14]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="general"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Общие сведения</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">С версии v1.0.0 в библиотеку <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/" [#$tu18]&gt;</bpt>bem-core<ept id="1">&lt;/a&gt;</ept> была добавлена возможность исполнять BEMHTML-шаблоны, написанные в JavaScript-синтаксисе.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В библиотеке поддерживается два вида синтаксиса шаблонов: <bpt id="1">&lt;strong&gt;</bpt>сокращенный<ept id="1">&lt;/strong&gt;</ept> и JS-синтаксис. С момента выпуска библиотеки bem-core сокращенный синтаксис шаблонов считается устаревшим.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JavaScript-синтаксис BEMHTML-шаблонов имеет следующие преимущества:</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Поддержку синтаксиса различными средами разработки и инструментами (т.к. код — обычный JavaScript):</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">подсветка кода;</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru">JSHint, JSLint и т.д.</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Более высокую скорость <bpt id="1">&lt;a href="#runpre"&gt;</bpt>компиляции<ept id="1">&lt;/a&gt;</ept>, особенно в dev-среде исполнения.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Кроме того, код шаблонов может выполняться непосредственно в <bpt id="1">&lt;a href="#runmode"&gt;</bpt>dev-среде исполнения<ept id="1">&lt;/a&gt;</ept>, что упрощает поиск ошибок и отладку.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При использовании JS-синтаксиса шаблонов сохраняются все ключевые особенности шаблонизатора BEMHTML.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="install"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Начало работы</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возможность исполнения BEMHTML-шаблонов с JS-синтаксисом доступна во всех компонентах БЭМ-платформы, использующих библиотеку bem-core.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для перехода на JS-синтаксис можно:</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/project-stub/tree/bem-core</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru">воспользоваться версией project-stub, использующей библиотеку bem-core (ветка <bpt id="1">&lt;a href="https://github.com/bem/project-stub/tree/bem-core" [#$tu32]&gt;</bpt>bem-core<ept id="1">&lt;/a&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/templating-engines/bemxjst/</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/enb-bemxjst/</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru">самостоятельно установить необходимые пакеты — <bpt id="1">&lt;a href="https://ru.bem.info/tools/templating-engines/bemxjst/" [#$tu34]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept>, модуль технологии пакета <bpt id="2">&lt;a href="https://ru.bem.info/tools/bem/enb-bemxjst/" [#$tu35]&gt;</bpt>enb-bemxjst<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="compat"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Совместимость шаблонов</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEMHTML-шаблоны, реализованные в разном синтаксисе, могут использоваться в одном проекте.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bemhtml-compat</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В процессе выполнения шаблонизатор приводит шаблоны, написанные в сокращенном синтаксисе, к JS-синтаксису. Синтаксическое преобразование производит модуль <bpt id="1">&lt;a href="https://github.com/bem/bemhtml-compat" [#$tu40]&gt;</bpt>bemhtml-compat<ept id="1">&lt;/a&gt;</ept>. Подробнее об этом читайте в разделе про <bpt id="2">&lt;a href="#runmain"&gt;</bpt>выполнение шаблонов<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В ходе компиляции шаблонизатор автоматически определяет синтаксис, в котором реализован файл шаблона.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы различать файлы шаблонов, реализованных в сокращенном и в JS-синтаксисе, можно использовать для них разные суффиксы:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для сокращенного синтаксиса — суффикс <bpt id="1">&lt;code&gt;</bpt>.bemhtml<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru">для JS-синтаксиса — суффикс <bpt id="1">&lt;code&gt;</bpt>.bemhtml.xjst<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Нельзя использовать в файле шаблона оба синтаксиса одновременно.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="syntax"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" resname="javascript-c-bemhtml--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">JavaScript-cинтаксис BEMHTML-шаблонов</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/templating-engines/bemxjst/</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы упростить создание BEMHTML-шаблонов с JavaScript-синтаксисом, используется модуль <bpt id="1">&lt;a href="https://ru.bem.info/tools/templating-engines/bemxjst/" [#$tu49]&gt;</bpt>bem-xjst<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEM-XJST — это набор БЭМ-ориентированных хелперов, расширяющий стандартный XJST-синтаксис.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для BEMHTML-шаблонов в JS-синтаксисе он позволяет использовать:</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хелперы для записи подпредикатов, относящихся к предметной области БЭМ;</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хелперы для определения подпредиката по моде;</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хелперы для применения XJST-конструкций <bpt id="1">&lt;code&gt;</bpt>apply<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept> по произвольной моде;</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applyctx</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru">конструкцию <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applyctx" [#$tu56]&gt;</bpt>applyCtx<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/veged/xjst</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEM-XJST является надмножеством <bpt id="1">&lt;a href="https://github.com/veged/xjst" [#$tu58]&gt;</bpt>языка шаблонов XJST<ept id="1">&lt;/a&gt;</ept>, который, в свою очередь, является надмножеством JavaScript.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">BEM-XJST использует канонический XJST-синтаксис, расширенный набором правил, относящихся к предметной области БЭМ. Такая реализация позволяет выполнять BEMHTML-шаблоны, написанные в JS-синтаксисе, в dev-среде без предварительной компиляции.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Поведение методов <bpt id="2">&lt;code&gt;</bpt>apply<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>applyNext<ept id="3">&lt;/code&gt;</ept> в BEM-XJST расширено относительно XJST. Методы могут принимать строковый литерал или выражение, приводимое к строке, вместо выражений присвоения. Это означает «выставить указанную строку в качестве моды».</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, выражение <bpt id="1">&lt;code&gt;</bpt>apply('content')<ept id="1">&lt;/code&gt;</ept> эквивалентно выражению <bpt id="2">&lt;code&gt;</bpt>apply({ _mode: 'content' })<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="template"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Шаблон</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблон состоит из двух выражений — <bpt id="1">&lt;strong&gt;</bpt>предиката<ept id="1">&lt;/strong&gt;</ept> и <bpt id="2">&lt;strong&gt;</bpt>тела<ept id="2">&lt;/strong&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Каждый <bpt id="4">&lt;strong&gt;</bpt>предикат<ept id="4">&lt;/strong&gt;</ept> представляет собой список из одного или более <bpt id="5">&lt;strong&gt;</bpt>подпредикатов<ept id="5">&lt;/strong&gt;</ept> (условий).</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предикат шаблона истинен только тогда, когда истинны все подпредикаты.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В сокращенном синтаксисе предикат и тело разделяются двоеточием, а подпредикаты — запятыми:</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>подпредикат1, подпредикат2, подпредикат3: тело<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе для описания шаблона вводится ключевое слово <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ключевое слово <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept> — это метод-хелпер, принимающий в качестве аргумента перечень подпредикатов. Метод возвращает функцию, принимающую аргументом тело шаблона.</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(подпредикат1, подпредикат2, подпредикат3)(тело);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например:</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.block === 'link'; }, function() { return this._mode === 'tag'; }, function() { return this.ctx.url; })('a');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тот же набор подпредикатов может быть записан цепочкой:</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.block === 'link'; })
.match(function() { return this._mode === 'tag'; })
.match(function() { return this.ctx.url; })('a');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Приведенные выше примеры тождественны и соответствуют следующей записи в сокращенном синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block link, tag, this.ctx.url: 'a'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если для данного контекста определено более одного шаблона, то больший приоритет имеет <bpt id="2">&lt;strong&gt;</bpt>последний<ept id="2">&lt;/strong&gt;</ept> в порядке перечисления в BEMHTML-файле.</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Более специфические шаблоны должны располагаться в тексте ниже, чем более общие.<ph id="1">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="subpredicate"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu80" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Подпредикаты</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предикат шаблона представляет собой набор условий, описывающих момент применения шаблона. Подпредикат шаблона соответствует элементарному условию.</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMHTML предусмотрены следующие типы условий:</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Совпадение с входным БЭМ-деревом;</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Мода;</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Произвольное условие.</source>
</trans-unit>
      <trans-unit id="tu86" resname="-----id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Совпадение с входным БЭМ-деревом</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Условия совпадения с входным БЭМ-деревом позволяют описывать применимость шаблона в терминах БЭМ-сущностей: имен блоков и элементов, имен и значений модификаторов.</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для БЭМ-сущностей в предикатах используются следующие ключевые слова:</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущность — <bpt id="1">&lt;strong&gt;</bpt>Блок<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ключевое слово — <bpt id="1">&lt;code&gt;</bpt>block<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Аргументы:</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-li" xml:space="preserve">
<source xml:lang="ru">имя блока.</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в сокращенном синтаксисе:<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>block b-menu<ept id="2">&lt;/code&gt;</ept> или <bpt id="3">&lt;code&gt;</bpt>block 'b-menu'<ept id="3">&lt;/code&gt;</ept> или <bpt id="4">&lt;code&gt;</bpt>block 'b' + '-menu'<ept id="4">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в JS-синтаксисе:<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>block('b-menu')<ept id="2">&lt;/code&gt;</ept> или <bpt id="3">&lt;code&gt;</bpt>block('b' + '-menu')<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущность — <bpt id="1">&lt;strong&gt;</bpt>Элемент<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ключевое слово — <bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Аргументы:</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru">имя элемента.</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в сокращенном синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-menu, elem item<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в JS-синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-menu').elem('item')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu103" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущность — <bpt id="1">&lt;strong&gt;</bpt>Модификатор блока<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>***</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ключевое слово — <bpt id="1">&lt;code&gt;</bpt>mod<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Аргументы:</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-li" xml:space="preserve">
<source xml:lang="ru">имя модификатора блока;</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-li" xml:space="preserve">
<source xml:lang="ru">значение модификатора блока.</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в сокращенном синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-head-logo, mod size big<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu110" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в JS-синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-head-logo').mod('size', 'big')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu112" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-сущность — <bpt id="1">&lt;strong&gt;</bpt>Модификатор элемента<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>***<ph id="3">&lt;br /&gt;</ph>Ключевое слово в сокращенном синтаксисе — <bpt id="4">&lt;code&gt;</bpt>elemMod<ept id="4">&lt;/code&gt;</ept>.<ph id="5">&lt;br /&gt;</ph>Ключевое слово в JS-синтаксисе — <bpt id="6">&lt;code&gt;</bpt>elemMod<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu113" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Аргументы:</source>
</trans-unit>
      <trans-unit id="tu114" restype="x-li" xml:space="preserve">
<source xml:lang="ru">имя модификатора элемента;</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-li" xml:space="preserve">
<source xml:lang="ru">значение модификатора элемента.</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в сокращенном синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-head-logo, elem text, elemMod size big<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu118" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример в JS-синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-head-logo')(elem('text').elemMod('size', 'big'))<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Идентификаторы блоков, элементов, модификаторов и их значений представляют собой строку, состоящую из латинских символов и дефиса. Вместо идентификатора может быть указано любое JS-выражение, которое будет приведено к строке. Например, запись <bpt id="2">&lt;code&gt;</bpt>block('b-head-logo')<ept id="2">&lt;/code&gt;</ept> тождественна записи <bpt id="3">&lt;code&gt;</bpt>block('b-' + 'head' + '-logo')<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе ключевые слова, относящиеся к БЭМ-предметной области, используются для сокращенной записи подпредикатов.<ph id="1">&lt;br /&gt;</ph>В частности, они избавляют от необходимости использовать ключевое слово <bpt id="2">&lt;code&gt;</bpt>match<ept id="2">&lt;/code&gt;</ept> в БЭМ-ориентированных подпредикатах.</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Следующие предикаты тождественны:</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.block === 'foo'; }).match(function() { this.elem === 'bar'; })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu124" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('foo').elem('bar')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu125" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы шаблоны выполнялись без компиляции, было добавлено ключевое слово <bpt id="1">&lt;code&gt;</bpt>elemMatch<ept id="1">&lt;/code&gt;</ept>. Оно используется при записи произвольного подпредиката для элемента:</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('my-block')
    .elemMatch(function() { return this.elem === 'e1' || this.elem === 'e2'  })
        .tag()('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu127" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Дело в том, что в процессе обработки к шаблонам, у которых нет подпредикатов, описывающих элементы, автоматически добавляется<ph id="1">&lt;br /&gt;</ph>подпредикат <bpt id="2">&lt;code&gt;</bpt>!this.elem<ept id="2">&lt;/code&gt;</ept>. Это позволяет избежать срабатывания шаблонов для блока на элементах этого же блока.</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Как следствие, приведенный выше пример, записанный без <bpt id="1">&lt;code&gt;</bpt>elemMatch<ept id="1">&lt;/code&gt;</ept>, работать не будет:</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('my-block')
    .match(function() { return this.elem === 'e1' || this.elem === 'e2'  })
        .tag()('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu130" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ведь в процессе обработки к нему будет добавлен подпредикат <bpt id="1">&lt;code&gt;</bpt>!this.elem<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu131" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="moda"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu132" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Мода</source>
</trans-unit>
      <trans-unit id="tu134" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве подпредиката может выступать название одной из <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda" [#$tu134]&gt;</bpt>стандартных мод<ept id="1">&lt;/a&gt;</ept>. Это означает, что данный предикат будет истинным в тот момент обработки, когда выставлена соответствующая мода.</source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для проверки стандартных мод используются ключевые слова:</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>def<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu137" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu138" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>attrs<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu139" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu140" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>mix<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu141" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>cls<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu142" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu143" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>jsAttr<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu144" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu145" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе, чтобы определить подпредикат по одной из стандартных мод, можно воспользоваться хелпером, соответствующим ключевому слову.</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, выражение <bpt id="1">&lt;code&gt;</bpt>tag()('span')<ept id="1">&lt;/code&gt;</ept> эквивалентно выражению <bpt id="2">&lt;code&gt;</bpt>match(function() { return this._mode === 'tag'; })('span')<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В сокращенном синтаксисе любой подпредикат, состоящий только из идентификатора (<bpt id="1">&lt;code&gt;</bpt>[a-zA-Z0-9-]+<ept id="1">&lt;/code&gt;</ept>), интерпретируется как название нестандартной моды. Например, подпредикат <bpt id="2">&lt;code&gt;</bpt>my-mode<ept id="2">&lt;/code&gt;</ept> эквивалентен подпредикату <bpt id="3">&lt;code&gt;</bpt>this._mode === 'my-mode'<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе для определения подпредиката по нестандартной моде вводится ключевое слово <bpt id="1">&lt;code&gt;</bpt>mode<ept id="1">&lt;/code&gt;</ept>. Это метод-хелпер, действующий аналогично конструкции <bpt id="2">&lt;code&gt;</bpt>match<ept id="2">&lt;/code&gt;</ept>. Метод принимает аргументом строку — название нестандартной моды - и возвращает функцию от одного аргумента — тела шаблона. Таким образом, запись <bpt id="3">&lt;code&gt;</bpt>mode('my-mode')<ept id="3">&lt;/code&gt;</ept> эквивалентна записи <bpt id="4">&lt;code&gt;</bpt>this._mode === 'my-mode'<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu149" resname="--id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Произвольное условие</source>
</trans-unit>
      <trans-unit id="tu150" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="arbitrary_condition"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu151" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Произвольные условия учитывают совпадения с данными, не попадающими под предметную область БЭМ. В качестве произвольного<ph id="1">&lt;br /&gt;</ph>условия может выступать любое JavaScript-выражение, которое будет приведено к логическому значению.</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Произвольные условия предпочтительно записывать в <bpt id="2">&lt;a preserve="1" name="xjst-canonical"&gt;</bpt><ept id="2">&lt;/a&gt;</ept> <bpt id="3">&lt;strong&gt;</bpt>канонической форме XJST<ept id="3">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>предикатное выражение === значение<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu154" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Где</source>
</trans-unit>
      <trans-unit id="tu155" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>предикатное выражение<ept id="1">&lt;/code&gt;</ept> — произвольное JavaScript-выражение, приводимое к логическому значению;</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>значение<ept id="1">&lt;/code&gt;</ept> — произвольное JavaScript-выражение.</source>
</trans-unit>
      <trans-unit id="tu157" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе для записи произвольного предикатного выражения используется ключевое слово <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept>. Например:</source>
</trans-unit>
      <trans-unit id="tu158" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(this.ctx.url)(
        tag()('a'), // в моде tag передает аргументом строку с тэгом  'a'
        attrs()({ href: this.ctx.url }) // в моде attrs передает аргументом хеш с атрибутами
    )<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu159" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Произвольный подпредикат <bpt id="1">&lt;code&gt;</bpt>this.ctx.url<ept id="1">&lt;/code&gt;</ept> будет истинен, когда полю <bpt id="2">&lt;code&gt;</bpt>url<ept id="2">&lt;/code&gt;</ept> в контексте присвоено значение. В этом случае будет выполнено тело шаблона.</source>
</trans-unit>
      <trans-unit id="tu160" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="body"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu161" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Тело</source>
</trans-unit>
      <trans-unit id="tu162" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тело шаблона представляет собой выражение, результат вычисления которого используется для генерации выходного HTML.<ph id="1">&lt;br /&gt;</ph>В качестве тела шаблона может выступать:</source>
</trans-unit>
      <trans-unit id="tu163" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Отдельное JavaScript-выражение:</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu165" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu166" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>предикат: JS-выражение<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu167" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu168" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(предикат)(JS-выражение)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu170" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Блок JavaScript-кода:</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu172" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>предикат: { JS-код }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu174" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu175" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(предикат)(function() { JS-код })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu177" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе тело шаблона передается аргументом в функцию, возвращаемую методом <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept> и хелперами для БЭМ-сущности или моды.</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Синтаксис:</source>
</trans-unit>
      <trans-unit id="tu179" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>стандартная-мода()(тело)

mode('нестандартная-мода')(тело)

БЭМ-сущность('имя-сущности')(тело)

match(произвольный предикат)(тело)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu180" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Важно помнить, что тело шаблона передается в функцию, возвращаемую методом-хелпером, а не в сам хелпер.</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Неправильно:</source>
</trans-unit>
      <trans-unit id="tu182" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').tag('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu183" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Правильно:</source>
</trans-unit>
      <trans-unit id="tu184" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1').tag()('span')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu185" resname="-xjst-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Конструкции XJST</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#unity</source>
</trans-unit>
      <trans-unit id="tu186" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В шаблонах, реализованных в JS-синтаксисе, могут использоваться <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#unity" [#$tu187]&gt;</bpt>конструкции языка XJST<ept id="1">&lt;/a&gt;</ept> для выполнения шаблонов в измененном контексте.</source>
</trans-unit>
      <trans-unit id="tu188" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Они работают так же, как и в шаблонах, реализованных в сокращенном синтаксисе.</source>
</trans-unit>
      <trans-unit id="tu189" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Вложенность шаблонов</source>
</trans-unit>
      <trans-unit id="tu190" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если несколько шаблонов имеют общие подпредикаты, они могут быть записаны в виде вложенной структуры для сокращения количества повторов в коде.</source>
</trans-unit>
      <trans-unit id="tu191" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В сокращенном синтаксисе для обозначения вложенности используются фигурные скобки. Фигурные скобки ставятся после общей части предикатов. В них заключается блок кода, содержащий различающиеся части предикатов и соответствующие им тела шаблонов.</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>подпредикат1 {
  подпредикат2: тело1
  подпредикат3: тело2
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu193" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данная запись эквивалентна следующей:</source>
</trans-unit>
      <trans-unit id="tu194" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>подпредикат 1, подпредикат 2: тело1
подпредикат 1, подпредикат 3: тело2<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu195" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе вложенные подпредикаты записываются в тело шаблона. Иначе говоря, подпредикаты передаются аргументами функции, возвращаемой методом <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept> и хелперами для БЭМ-сущностей или мод.</source>
</trans-unit>
      <trans-unit id="tu196" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, шаблон в сокращенном синтаксисе:</source>
</trans-unit>
      <trans-unit id="tu197" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.block === 'link' {
    this._mode === 'tag': 'a'
    this._mode === 'attrs': { href: this.ctx.url }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu198" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">может быть записан в виде:</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.block === 'link'; })(
   match(function() { return this._mode === 'tag'; })('a'),
   match(function() { return this._mode === 'attrs'; })(function() { return { href: this.ctx.url }; })
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu200" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Это эквивалентно следующей записи:</source>
</trans-unit>
      <trans-unit id="tu201" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>match(function() { return this.block === 'link'; }).match(function() { return this._mode === 'tag'; })('a');
match(function() { return this.block === 'link'; }).match(function() { return this._mode === 'attrs'; })(function() { return { href: this.ctx.url }; });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu202" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы сделать запись более лаконичной, можно использовать хелперы для БЭМ-сущностей и названий стандартных мод.</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предыдущий пример может быть записан в виде:</source>
</trans-unit>
      <trans-unit id="tu204" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('link')(
    tag()('a'),
    attrs()(function() { return { href: this.ctx.url }; })
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu205" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В BEMHTML-шаблонах на одном уровне вложенности могут находиться тело шаблона и подшаблоны.</source>
</trans-unit>
      <trans-unit id="tu206" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В сокращенном синтаксисе для реализации такой возможности использовалось ключевое слово <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu207" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block link, tag, this.ctx.url {
    true: 'a'
    mods not-link yes: 'span'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu208" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В JS-синтаксисе тело шаблона передается функции, возвращаемой хелпером, первым аргументом, а подшаблоны — следующими:</source>
</trans-unit>
      <trans-unit id="tu209" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('link').tag().match(function() { return this.ctx.url; })(
    'a',
    mod('not-link', 'yes')('span')
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu210" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Глубина вложенности подшаблонов не ограничена:</source>
</trans-unit>
      <trans-unit id="tu211" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('link')(
    tag()('span'),
    match(function() { return this.ctx.url; })(
        tag()('a'),
        attrs()(function() { return { href: this.ctx.url }; })
    )
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu212" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Не рекомендуется использовать для записи вложенных подшаблонов тернарный оператор или условные операторы JavaScript. Такая запись не будет оптимизированна в продакшн-среде исполнения.</source>
</trans-unit>
      <trans-unit id="tu213" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runmode"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu214" resname="---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Среда исполнения шаблонов</source>
</trans-unit>
      <trans-unit id="tu215" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор BEMHTML может работать в двух режимах, в зависимости от настроек <bpt id="1">&lt;strong&gt;</bpt>среды исполнения<ept id="1">&lt;/strong&gt;</ept>. Шаблонизатор поддерживает две среды исполнения:</source>
</trans-unit>
      <trans-unit id="tu216" restype="x-li" xml:space="preserve">
<source xml:lang="ru">cреда разработки (dev-среда);</source>
</trans-unit>
      <trans-unit id="tu217" restype="x-li" xml:space="preserve">
<source xml:lang="ru">продакшн-среда.</source>
</trans-unit>
      <trans-unit id="tu218" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Основная разница заключается в том, что в продакшн-среде производятся XJST-преобразования шаблонов, в результате которых получается оптимизированный JavaScript. Это увеличивает время сборки проекта за счет компиляции шаблонов, но в дальнейшем повышает скорость их выполнения.</source>
</trans-unit>
      <trans-unit id="tu219" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Среда исполнения устанавливается шаблонизатором на основании значения переменной окружения <bpt id="1">&lt;code&gt;</bpt>process.env.BEMHTML_ENV<ept id="1">&lt;/code&gt;</ept>. При значении равном <bpt id="2">&lt;code&gt;</bpt>'development'<ept id="2">&lt;/code&gt;</ept> используется среда разработки. Во всех остальных случаях используется продакшн-среда.</source>
</trans-unit>
      <trans-unit id="tu220" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Выбор среды исполнения влияет на ход выполнения шаблонов, реализованных как в сокращенном, так и в JS- синтаксисах.</source>
</trans-unit>
      <trans-unit id="tu221" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="run"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu222" resname="-bemhtml--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обработка BEMHTML-шаблонов</source>
</trans-unit>
      <trans-unit id="tu223" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор обрабатывает BEMHTML-шаблоны в два этапа:</source>
</trans-unit>
      <trans-unit id="tu224" restype="x-li" xml:space="preserve">
<source xml:lang="ru">компиляция;</source>
</trans-unit>
      <trans-unit id="tu225" restype="x-li" xml:space="preserve">
<source xml:lang="ru">выполнение.</source>
</trans-unit>
      <trans-unit id="tu226" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runpre"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu227" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Компиляция шаблонов</source>
</trans-unit>
      <trans-unit id="tu228" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблонизатор компилирует шаблоны по-разному в зависимости от настроек среды исполнения и синтаксиса шаблонов.</source>
</trans-unit>
      <trans-unit id="tu229" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runclassic"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu230" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис</source>
</trans-unit>
      <trans-unit id="tu231" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вне зависимости от настроек среды исполнения производятся следующие действия:</source>
</trans-unit>
      <trans-unit id="tu232" restype="x-li" xml:space="preserve">
<source xml:lang="ru">все BEMHTML-шаблоны, участвующие в сборке, собираются в файл бандла;</source>
</trans-unit>
      <trans-unit id="tu233" restype="x-li" xml:space="preserve">
<source xml:lang="ru">шаблоны из бандла преобразуются в XJST-синтаксис.</source>
</trans-unit>
      <trans-unit id="tu234" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runjs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu235" resname="javascript--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">JavaScript-синтаксис</source>
</trans-unit>
      <trans-unit id="tu236" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вне зависимости от настроек среды исполнения производятся следующие действия:</source>
</trans-unit>
      <trans-unit id="tu237" restype="x-li" xml:space="preserve">
<source xml:lang="ru">все BEMHTML-шаблоны, участвующие в сборке, собираются в файл бандла.</source>
</trans-unit>
      <trans-unit id="tu238" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>В продакшн-среде исполнения<ept id="1">&lt;/strong&gt;</ept> и для сокращенного, и для JavaScript-синтаксиса выполняются XJST-преобразования, в результате которых генерируется оптимизированный JavaScript-код шаблонов.</source>
</trans-unit>
      <trans-unit id="tu239" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runmain"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu240" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Выполнение шаблонов</source>
</trans-unit>
      <trans-unit id="tu241" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ход выполнения JavaScript-кода, полученного на этапе компиляции шаблонов, одинаков для всех синтаксисов и настроек среды исполнения:</source>
</trans-unit>
      <trans-unit id="tu243" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/</source>
</trans-unit>
      <trans-unit id="tu242" restype="x-li" xml:space="preserve">
<source xml:lang="ru">шаблонизатор принимает на вход БЭМ-дерево в формате <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/" [#$tu243]&gt;</bpt>BEMJSON<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu244" restype="x-li" xml:space="preserve">
<source xml:lang="ru">последовательно обходит узлы входного БЭМ-дерева;</source>
</trans-unit>
      <trans-unit id="tu246" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/bemhtml/reference/#context</source>
</trans-unit>
      <trans-unit id="tu245" restype="x-li" xml:space="preserve">
<source xml:lang="ru">в процессе обхода входного BEMJSON-дерева строится структура данных — <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/current/bemhtml/reference/#context" [#$tu246]&gt;</bpt>контекст<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu247" restype="x-li" xml:space="preserve">
<source xml:lang="ru">выполняется цикл генерации выходного HTML-элемента для каждой БЭМ-сущности;</source>
</trans-unit>
      <trans-unit id="tu248" restype="x-li" xml:space="preserve">
<source xml:lang="ru">рекурсивно выполняется цикл генерации выходных HTML-элементов для вложенных БЭМ-сущностей;</source>
</trans-unit>
      <trans-unit id="tu249" restype="x-li" xml:space="preserve">
<source xml:lang="ru">поэлементно выполняется запись в буфер фрагментов HTML-результата.</source>
</trans-unit>
      <trans-unit id="tu250" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="table"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu251" resname="--------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Таблица соответствия стандартных операций шаблонизатора в разных синтаксисах</source>
</trans-unit>
      <trans-unit id="tu252" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Операция</source>
</trans-unit>
      <trans-unit id="tu253" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Cокращенный синтаксис</source>
</trans-unit>
      <trans-unit id="tu254" restype="x-th" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис</source>
</trans-unit>
      <trans-unit id="tu255" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Совпадение с БЭМ-сущностью</source>
</trans-unit>
      <trans-unit id="tu256" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-my-block : тело<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu257" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-my-block')(тело)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu258" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Совпадение со стандартной модой</source>
</trans-unit>
      <trans-unit id="tu259" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tag : 'a'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu260" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tag()('a')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu261" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Совпадение с нестандартной модой</source>
</trans-unit>
      <trans-unit id="tu262" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>custom-mode : тело<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu263" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>mode('custom-mode')(тело)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu264" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Совпадение с произвольным условием</source>
</trans-unit>
      <trans-unit id="tu265" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block link, this.ctx.url, tag: 'a'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu266" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('link').match(function() { return this.ctx.url; }).tag()('a')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu267" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="steps"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu268" resname="------js--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Алгоритм преобразования шаблонов из сокращенного в JS-синтаксис</source>
</trans-unit>
      <trans-unit id="tu269" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Шаблоны, реализованные в сокращенном синтаксисе, могут приведены к JS-синтаксису с помощью ряда элементарных преобразований.</source>
</trans-unit>
      <trans-unit id="tu270" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="steps-table"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu271" resname="----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Таблица пошагового преобразования шаблонов</source>
</trans-unit>
      <trans-unit id="tu272" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Кратко алгоритм преобразования шаблонов может быть изложен в виде следующей таблицы:</source>
</trans-unit>
      <trans-unit id="tu273" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Номер шага</source>
</trans-unit>
      <trans-unit id="tu274" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Этап</source>
</trans-unit>
      <trans-unit id="tu275" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu276" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Паттерн преобразования</source>
</trans-unit>
      <trans-unit id="tu277" restype="x-td" xml:space="preserve">
<source xml:lang="ru">1</source>
</trans-unit>
      <trans-unit id="tu278" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Преобразование БЭМ-ориентированных подпредикатов</source>
</trans-unit>
      <trans-unit id="tu279" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Взять в кавычки имена БЭМ-сущностей</source>
</trans-unit>
      <trans-unit id="tu280" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>b1<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>'b1'<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu281" restype="x-td" xml:space="preserve">
<source xml:lang="ru">2</source>
</trans-unit>
      <trans-unit id="tu282" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu283" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Заменить сокращения для БЭМ-сущностей на хелперы</source>
</trans-unit>
      <trans-unit id="tu284" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block 'b1'<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>block('b1')<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu285" restype="x-td" xml:space="preserve">
<source xml:lang="ru">3</source>
</trans-unit>
      <trans-unit id="tu286" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu287" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Заменить все запятые, разделяющие подпредикаты, на точки</source>
</trans-unit>
      <trans-unit id="tu288" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>,<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>.<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu289" restype="x-td" xml:space="preserve">
<source xml:lang="ru">4</source>
</trans-unit>
      <trans-unit id="tu290" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Преобразование произвольных подпредикатов</source>
</trans-unit>
      <trans-unit id="tu291" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Обернуть произвольные подпредикаты в хелпер <bpt id="1">&lt;code&gt;</bpt>match<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu292" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>произвольный-подпредикат<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>match(произвольный-подпредикат)<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu293" restype="x-td" xml:space="preserve">
<source xml:lang="ru">5</source>
</trans-unit>
      <trans-unit id="tu294" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Преобразование подпредикатов для мод</source>
</trans-unit>
      <trans-unit id="tu295" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Заменить названия стандартных мод на хелперы</source>
</trans-unit>
      <trans-unit id="tu296" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>tag<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>tag()<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu297" restype="x-td" xml:space="preserve">
<source xml:lang="ru">6</source>
</trans-unit>
      <trans-unit id="tu298" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu299" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Обернуть оставшиеся подпредикаты в хелпер <bpt id="1">&lt;code&gt;</bpt>mode<ept id="1">&lt;/code&gt;</ept> и взять в кавычки</source>
</trans-unit>
      <trans-unit id="tu300" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>some-mode<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>mode('some-mode')<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu301" restype="x-td" xml:space="preserve">
<source xml:lang="ru">7</source>
</trans-unit>
      <trans-unit id="tu302" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Преобразование тела шаблона и вложенных конструкций</source>
</trans-unit>
      <trans-unit id="tu303" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Заменить двоеточие перед телом шаблонов на открывающую скобку и добавить после тела закрывающую</source>
</trans-unit>
      <trans-unit id="tu304" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>: ...<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>(...)<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu305" restype="x-td" xml:space="preserve">
<source xml:lang="ru">8</source>
</trans-unit>
      <trans-unit id="tu306" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu307" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Добавить запятые между вложенными подшаблонами</source>
</trans-unit>
      <trans-unit id="tu308" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1'){ tag()('a') elem('e1').tag('b') }<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>block('b1'){ tag()('a'), elem('e1').tag('b') }<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu309" restype="x-td" xml:space="preserve">
<source xml:lang="ru">9</source>
</trans-unit>
      <trans-unit id="tu310" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu311" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Заменить фигурные скобки, указывающие вложенность, обычными скобками</source>
</trans-unit>
      <trans-unit id="tu312" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b1'){ tag()('a'), elem('e1').tag('b') }<ept id="1">&lt;/code&gt;</ept> → <bpt id="2">&lt;code&gt;</bpt>block('b1')(tag()('a'), elem('e1').tag('b'))<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu313" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="steps-examples"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu314" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Примеры преобразования шаблонов</source>
</trans-unit>
      <trans-unit id="tu315" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 1.<ept id="1">&lt;/strong&gt;</ept> Задает для блока <bpt id="2">&lt;code&gt;</bpt>logo<ept id="2">&lt;/code&gt;</ept> тэг <bpt id="3">&lt;code&gt;</bpt>img<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu316" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu317" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block logo {
  tag: 'img'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu318" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu319" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('logo').tag()('img')<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu320" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 2.<ept id="1">&lt;/strong&gt;</ept> Задает для блока <bpt id="2">&lt;code&gt;</bpt>logo<ept id="2">&lt;/code&gt;</ept> тэг <bpt id="3">&lt;code&gt;</bpt>img<ept id="3">&lt;/code&gt;</ept> и соответствующий набор атрибутов.</source>
</trans-unit>
      <trans-unit id="tu321" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu322" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block logo {
  tag: 'img'
  attrs: ({alt: 'logo', href: 'http://...'})
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu323" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu324" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('logo')(
  tag()('img'),
  attrs()({alt: 'logo', href: 'http://...'})
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu325" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 3.<ept id="1">&lt;/strong&gt;</ept> Задает для блока <bpt id="2">&lt;code&gt;</bpt>b-page<ept id="2">&lt;/code&gt;</ept> тэг <bpt id="3">&lt;code&gt;</bpt>html<ept id="3">&lt;/code&gt;</ept> и запрещает генерацию класса из имени БЭМ-сущности.</source>
</trans-unit>
      <trans-unit id="tu326" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu327" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-page {
  tag: 'html'
  bem: false
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu328" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu329" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-page')(
  tag()('html'),
  bem()(false)
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu330" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 4.<ept id="1">&lt;/strong&gt;</ept> Для элементов блока <bpt id="2">&lt;code&gt;</bpt>b-text<ept id="2">&lt;/code&gt;</ept> устанавливает тэг в соответствие с именем элемента, определенным во входном BEMJSON. Если во входных данных для элемента задано поле <bpt id="3">&lt;code&gt;</bpt>id<ept id="3">&lt;/code&gt;</ept>, присваивает значение поля атрибуту <bpt id="4">&lt;code&gt;</bpt>id<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu331" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu332" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-text {

    this.elem, tag: this.ctx.elem

    this.elem, this.ctx.id, attrs: { id: this.ctx.id  }

}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu333" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu334" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-text')(

    elemMatch(function() { return this.elem; }).tag()(function() { return this.ctx.elem; }),

    elemMatch(function() { return this.elem; }).match(function() { return this.ctx.id; }).attrs()(function() { return { id: this.ctx.id  }; })

)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu335" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 5.<ept id="1">&lt;/strong&gt;</ept> Для блока <bpt id="2">&lt;code&gt;</bpt>b-bla<ept id="2">&lt;/code&gt;</ept> по умолчанию задает тэг <bpt id="3">&lt;code&gt;</bpt>span<ept id="3">&lt;/code&gt;</ept>. Если во входных данных задан модификатор блока <bpt id="4">&lt;code&gt;</bpt>o-mode<ept id="4">&lt;/code&gt;</ept> в значении <bpt id="5">&lt;code&gt;</bpt>v2<ept id="5">&lt;/code&gt;</ept>, меняет тэг на <bpt id="6">&lt;code&gt;</bpt>a<ept id="6">&lt;/code&gt;</ept>. Затем к блоку примешивается модификатор элемента <bpt id="7">&lt;code&gt;</bpt>m2<ept id="7">&lt;/code&gt;</ept> в значении <bpt id="8">&lt;code&gt;</bpt>v2<ept id="8">&lt;/code&gt;</ept> и указывается, что блок содержит JavaScript.</source>
</trans-unit>
      <trans-unit id="tu336" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu337" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-bla {
  tag:'span'
  mod 0-mode v2, tag:'a'
  mix: [ { elemMods: { m2: 'v2' }} ]
  js: true
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu338" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu339" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-bla')(
  tag()('span'),
  mod('0-mode', 'v2').tag()('a'),
  mix()([{ mods: { m2: 'v2' } }]),
  js()(true)
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu340" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 6.<ept id="1">&lt;/strong&gt;</ept> Оборачивает блок <bpt id="2">&lt;code&gt;</bpt>b-inner<ept id="2">&lt;/code&gt;</ept> в блок <bpt id="3">&lt;code&gt;</bpt>b-wrapper<ept id="3">&lt;/code&gt;</ept>. Для этого в моде <bpt id="4">&lt;code&gt;</bpt>default<ept id="4">&lt;/code&gt;</ept> фрагмент входного BEMJSON подменяется блоком <bpt id="5">&lt;code&gt;</bpt>b-wrapper<ept id="5">&lt;/code&gt;</ept>, содержащим изначальный фрагмент входных данных.</source>
</trans-unit>
      <trans-unit id="tu341" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu342" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-inner, default: applyCtx({ block: 'b-wrapper', content: this.ctx })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu343" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu344" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-inner').def()(function() {
    return applyCtx({ block: 'b-wrapper', content: this.ctx });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu345" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Шаблон 7.<ept id="1">&lt;/strong&gt;</ept> Для элемента <bpt id="2">&lt;code&gt;</bpt>e1<ept id="2">&lt;/code&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>b-bla<ept id="3">&lt;/code&gt;</ept> по умолчанию задает тэг <bpt id="4">&lt;code&gt;</bpt>span<ept id="4">&lt;/code&gt;</ept>. Если во входных данных определено поле <bpt id="5">&lt;code&gt;</bpt>url<ept id="5">&lt;/code&gt;</ept>, меняет тэг на <bpt id="6">&lt;code&gt;</bpt>a<ept id="6">&lt;/code&gt;</ept> и задает содержимое поля в качестве значения атрибута <bpt id="7">&lt;code&gt;</bpt>href<ept id="7">&lt;/code&gt;</ept>. При совпадении с нестандартной модой <bpt id="8">&lt;code&gt;</bpt>reset<ept id="8">&lt;/code&gt;</ept> значение атрибута <bpt id="9">&lt;code&gt;</bpt>href<ept id="9">&lt;/code&gt;</ept> устанавливается равным <bpt id="10">&lt;code&gt;</bpt>undefined<ept id="10">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu346" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенный синтаксис:</source>
</trans-unit>
      <trans-unit id="tu347" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block b-link, elem e1 {
  tag: 'span'
  this.ctx.url {
     tag: 'a'
     attrs: { href: this.ctx.url }
     reset {
         attrs: { href: undefined }
      }
   }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu348" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-синтаксис:</source>
</trans-unit>
      <trans-unit id="tu349" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('b-link').elem('e1') (
  tag()('span'),
  match(function() { return this.ctx.url; })(
     tag()('a'),
     attrs()(function() { return { href: this.ctx.url }; }),
     mode('reset')(
         attrs()({ href: undefined })
      )
   )
)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/migration/migration.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Миграция</source>
</trans-unit>
      <trans-unit id="tu2" resname="section-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">1.0.0</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-bl/</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для версии 1.0.0 миграция подразумевается с использования <bpt id="1">&lt;a href="https://github.com/bem/bem-bl/" [#$tu4]&gt;</bpt>bem-bl<ept id="1">&lt;/a&gt;</ept> на использование <bpt id="2">&lt;a href="https://github.com/bem/bem-core/" [#$tu5]&gt;</bpt>bem-core<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модули</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Весь код теперь пишется в терминах модульной системы <bpt id="1">&lt;a href="https://github.com/ymaps/modules" class="uri" [#$tu8] class="uri"&gt;</bpt>https://github.com/ymaps/modules<ept id="1">&lt;/a&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Все зависимости должны явно указываться в коде, обращения к глобальным объектом необходимо минимизировать, а, по возможности, и полностью исключить.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример:</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'my-module', // имя модуля
    ['module-from-library', 'my-another-module'], // зависимости модуля
    function(provide, moduleFromLibrary, myAnotherModule) { // декларация модуля, вызывается когда все зависимости "разрезолвлены"

// предоставление модуля
provide({
    myModuleMethod : function() {}
});

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">TODO: дописать про изменение сборки (использование специальных технологий для js и как быть с кастомными сборщиками)</source>
</trans-unit>
      <trans-unit id="tu12" resname="jquery--jquery--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">jQuery и jQuery-плагины</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">jQuery представлен модулем-оберткой <bpt id="1">&lt;code&gt;</bpt>jquery<ept id="1">&lt;/code&gt;</ept>, который использует глобальный объект jQuery,<ph id="2">&lt;br /&gt;</ph>в случае если он уже присутствует на странице, в противном случае загружая его самостоятельно.<ph id="3">&lt;br /&gt;</ph>jQuery теперь используется только для операций, связанных непосредственно с DOM<ph id="4">&lt;br /&gt;</ph>(поиск элементов, подписка на события, установка/получение атрибутов элементов, и т.д.).</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для всех остальных операций написаны соответствующие модули,<ph id="1">&lt;br /&gt;</ph>предоставляющие аналогичный функционал, но, при этом, не зависящие от jQuery:</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>objects<ept id="1">&lt;/code&gt;</ept> для работы с объектами (с методами <bpt id="2">&lt;code&gt;</bpt>extend<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>isEmpty<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>each<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>functions<ept id="1">&lt;/code&gt;</ept> для работы с функциями (с методами <bpt id="2">&lt;code&gt;</bpt>isFunction<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>noop<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Также, все jQuery-плагины, не связанные непосредственно с jQuery<ph id="1">&lt;br /&gt;</ph>(<bpt id="2">&lt;code&gt;</bpt>$.observable<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>$.inherit<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>$.cookie<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>$.identify<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>$.throttle<ept id="6">&lt;/code&gt;</ept>) стали модулями:</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>events<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.observable<ept id="2">&lt;/code&gt;</ept> для работы с событиями, предоставляющий "классы" <bpt id="3">&lt;code&gt;</bpt>EventsEmitter<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>Event<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.inherit<ept id="2">&lt;/code&gt;</ept> для работы с "классами" и наследованием</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>cookie<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.cookie<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модуль <bpt id="1">&lt;code&gt;</bpt>identify<ept id="1">&lt;/code&gt;</ept> вместо <bpt id="2">&lt;code&gt;</bpt>$.identify<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">модули <bpt id="1">&lt;code&gt;</bpt>functions__throttle<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>functions__debounce<ept id="2">&lt;/code&gt;</ept> вместо <bpt id="3">&lt;code&gt;</bpt>$.throttle<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>$.debounce<ept id="4">&lt;/code&gt;</ept>, соответственно</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// код блока
$.throttle(...
// код блока<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>module.define('my-module', ['functions__throttle'], function(provide, throttle) {
// код модуля
throttle(...
// код модуля<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" resname="bem.dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">BEM.DOM-блоки</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Декларация</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо декларации через BEM.DOM.decl необходимо доопределять модуль <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', ...);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', function(provide, BEMDOM) {

BEMDOM.decl('block', ...);

provide(BEMDOM);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Конструктор</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Необходимо использовать полную нотацию для обработчика установки модификатора <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> в значение <bpt id="2">&lt;code&gt;</bpt>inited<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod : {
    js : function() {
        // код конструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod : {
    'js' : {
        'inited' : function() {
            // код конструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Деструктор</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> необходимо использовать обработчик установки модификатора <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> в пустое значение (удаление модификатора).<ph id="3">&lt;br /&gt;</ph>Вызывать <bpt id="4">&lt;code&gt;</bpt>__base<ept id="4">&lt;/code&gt;</ept> для того, чтобы у блоков работал базовый деструктор, определенный в <bpt id="5">&lt;code&gt;</bpt>i-bem__dom<ept id="5">&lt;/code&gt;</ept>, больше не нужно.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>destruct : function() {
    this.__base.apply(this, arguments);
    // код деструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod : {
    js : {
        '' : function() {
            // код деструктора<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" resname="-changethis-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>changeThis<ept id="1">&lt;/code&gt;</ept> необходимо использовать либо соответствующий параметр, либо нативный метод <bpt id="2">&lt;code&gt;</bpt>bind<ept id="2">&lt;/code&gt;</ept>, если такой параметр отсутствует.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// код блока
obj.on('event', this.changeThis(this._method);
// код блока<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>obj.on('event', this._method.bind(this));
// или лучше
obj.on('event', this._method, this);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" resname="-aftercurrentevent-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вместо метода <bpt id="1">&lt;code&gt;</bpt>afterCurrentEvent<ept id="1">&lt;/code&gt;</ept> необходимо использовать метод <bpt id="2">&lt;code&gt;</bpt>nextTick<ept id="2">&lt;/code&gt;</ept>,<ph id="3">&lt;br /&gt;</ph>который гарантирует, что блок еще существует в момент исполнения callback'а<ph id="4">&lt;br /&gt;</ph>(если блок уже уничтожен к этому моменту, то callback не исполняется).</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        this.afterCurrentEvent(function() { ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', function(provide, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        this.nextTick(function() { ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" resname="-findelem-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>findElem<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Контекст для поиска элемента больше не задается строкой, вместо нее следует передавать jQuery-объект.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var nestedElem = this.findElem('parent-elem', 'nested-elem');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>var nestedElem = this.findElem(this.findElem('parent-elem'), 'nested-elem'),
    oneMoreElem = this.findElem(this.elem('another-elem'), 'nested-elem');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" resname="-livebindto-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>liveBindTo<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>liveBindTo<ept id="1">&lt;/code&gt;</ept> больше не поддерживает поле <bpt id="2">&lt;code&gt;</bpt>elemName<ept id="2">&lt;/code&gt;</ept> для передачи имени элемента. Вместо него следует использовать поле <bpt id="3">&lt;code&gt;</bpt>elem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu66" resname="--dom-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Доступ до DOM-элемента в обработчике события</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">DOM-элемент, к которому был подвешен обработчик события теперь доступен<ph id="1">&lt;br /&gt;</ph>как <bpt id="2">&lt;code&gt;</bpt>$(e.currentTarget)<ept id="2">&lt;/code&gt;</ept>вместо <bpt id="3">&lt;code&gt;</bpt>e.data.domElem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onClick : function(e) {
    e.data.domElem.attr(...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onClick : function(e) {
    $(e.currentTarget).attr(...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="-channels-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Каналы (channels)</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каналы больше не являются встроенными в BEM, теперь они являются самостоятельным модулем <bpt id="1">&lt;code&gt;</bpt>events__channels<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        BEM.channel('channel-name').on(....<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', ['events__channels'], function(provide, channels, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        channels('channel-name').on(....<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" resname="-i-system---sys--tick-idle-wakeup-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-system<ept id="1">&lt;/code&gt;</ept> и канал <bpt id="2">&lt;code&gt;</bpt>sys<ept id="2">&lt;/code&gt;</ept> событий <bpt id="3">&lt;code&gt;</bpt>tick<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>idle<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>wakeup<ept id="5">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Этот блок и канал перестали существовать, вместо них появились отдельные модули: <bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept> с событием tick и <bpt id="2">&lt;code&gt;</bpt>idle<ept id="2">&lt;/code&gt;</ept> с событиями idle и wakeup.</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        BEM.channel('sys').on('tick', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', ['tick'], function(provide, tick, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        tick.on('tick', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('block', {
    method : function() {
        BEM.channel('sys').on('wakeup', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem__dom', ['idle'], function(provide, idle, BEMDOM) {

BEMDOM.decl('block', {
    method : function() {
        idle.on('wakeup', ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu88" resname="bem--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">BEM-блоки</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Те BEM-блоки, которые использовались как хранилище для каких-то методов, при этом никак не использующие BEM-методологию, теперь<ph id="1">&lt;br /&gt;</ph>могут быть написаны как модули.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.decl('i-router', {
    route : function() { ... }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('router', function(provide) {

provide({
    route : function() { ... }
});

});
<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если же, по каким-то причинам, нужны именно BEM-блоки (не BEM.DOM-блоки), то их можно объявлять, доопределяя модуль <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.decl('my-block', { ... });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('i-bem', function(provide, BEM) {

BEM.decl('my-block', { ... });

provide(BEM);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" resname="----b-spin-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Рефакторинг на примере блока <bpt id="1">&lt;code&gt;</bpt>b-spin<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Было:</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEM.DOM.decl('b-spin', {

    onSetMod : {

        'js' : function() {

            this._size = this.getMod('size') || /[\d]+/.exec(this.getMod('theme'))[0];

            this._bgProp = 'background-position';
            this._posPrefix = '0 -';

            if (this.elem('icon').css('background-position-y')) { /* В IE нельзя получить свойство background-position, только background-position-y, поэтому костыляем */
                this._bgProp = 'background-position-y';
                this._posPrefix = '-';
            }

            this._curFrame = 0;

            this.hasMod('progress') &amp;&amp; this.channel('sys').on('tick', this._onTick, this);

        },

        'progress' : {

            'yes' : function() {

                this.channel('sys').on('tick', this._onTick, this);

            },

            '' : function() {

                this.channel('sys').un('tick', this._onTick, this);

            }

        }
    },

    _onTick: function(){

        var y = ++this._curFrame * this._size;

        (y &gt;= this._size * 36) &amp;&amp; (this._curFrame = y = 0);

        this.elem('icon').css(this._bgProp, this._posPrefix + y +'px');

    },

    destruct : function() {

        this.channel('sys').un('tick', this._onTick, this);
        this.__base.apply(this, arguments);

    }

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Стало:</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'i-bem__dom',
    ['tick'],
    function(provide, tick, BEMDOM) {

var FRAME_COUNT = 36;

BEMDOM.decl('b-spin', {
    onSetMod : {
        'js' : {
            'inited' : function() { // конструктор
                var hasBackgroundPositionY = !!this.elem('icon').css('background-position-y')); /* В IE нельзя получить свойство background-position, только background-position-y */

                this._bgProp = hasBackgroundPositionY? 'background-position-y' : 'background-position';
                this._posPrefix = hasBackgroundPositionY? '-' : '0 -';
                this._curFrame = 0;
                this._size = Number(this.getMod('size') || /[\d]+/.exec(this.getMod('theme'))[0]);

                this.hasMod('progress') &amp;&amp; this._bindToTick();
            },

            '' : function() { // деструктор
                this._unbindFromTick();
            }
        },

        'progress' : {
            'true' : function() {
                this._bindToTick();
            },

            '' : function() {
                this._unbindFromTick();
            }
        }
    },

    _bindToTick : function() {
        tick.on('tick', this._onTick, this);
    },

    _unbindFromTick : function() {
        tick.un('tick', this._onTick, this);
    },

    _onTick : function() {
        var offset;
        this._curFrame++ &gt;= FRAME_COUNT?
            offset = this._curFrame * this._size :
            this._curFrame = offset = 0;

        this.elem('icon').css(this._bgProp, this._posPrefix + offset + 'px');
    }
});

provide(BEMDOM);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/intro/intro.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="---bemhtml-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Быстрый старт по BEMHTML</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Данное руководство поможет попробовать шаблонизатор BEMHTML и<ph id="1">&lt;br /&gt;</ph>понять основные принципы работы с ним, пройдя семь простых шагов:</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#init"&gt;</bpt>Шаг 1. Инициализировать проект<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#page"&gt;</bpt>Шаг 2. Создать макет страницы<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#block"&gt;</bpt>Шаг 3. Добавить блок<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#template"&gt;</bpt>Шаг 4. Написать шаблон: приветствие по образцу<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#array"&gt;</bpt>Шаг 5. Переписать шаблон: генерация списка по массиву элементов<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#tags"&gt;</bpt>Шаг 6. Дополнить шаблон: модифицировать HTML-теги<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#cssjs"&gt;</bpt>Шаг 7. Настроить оформление и поведение блока (CSS и JS)<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" resname="-1.---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 1. Инициализировать проект</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы создать новый BEMHTML-проект, скопируем себе шаблон проекта, подготовленный разработчиками БЭМ, и установим <bpt id="1">&lt;code&gt;</bpt>npm<ept id="1">&lt;/code&gt;</ept>-зависимости.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ git clone https://github.com/bem/project-stub.git project-hello
$ cd project-hello
$ npm install<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь выполняется:</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru">копирование заготовки проекта в локальный каталог <bpt id="1">&lt;code&gt;</bpt>project-hello<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru">локальная установка <bpt id="1">&lt;code&gt;</bpt>npm<ept id="1">&lt;/code&gt;</ept>-зависимостей в каталог созданного проекта (симлинки на исполняемые файлы будут созданы в <bpt id="2">&lt;code&gt;</bpt>./project-hello/node_modules/.bin/<ept id="2">&lt;/code&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru">установка <bpt id="1">&lt;code&gt;</bpt>bower<ept id="1">&lt;/code&gt;</ept>-зависимостей (библиотеки <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>bem-components<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Для сборки проекта необходима утилита <bpt id="2">&lt;code&gt;</bpt>enb<ept id="2">&lt;/code&gt;</ept> или <bpt id="3">&lt;code&gt;</bpt>bem<ept id="3">&lt;/code&gt;</ept> (bem-tools).</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Организовать цикл разработки (правка—компиляция—просмотр—правка...) поможет сервер для разработки.<ph id="1">&lt;br /&gt;</ph>Запускать его нужно в корневой папке проекта:</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ npm start<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сервер принимает соединения по адресу <bpt id="1">&lt;code&gt;</bpt>http://localhost:8080/<ept id="1">&lt;/code&gt;</ept> и выполняет сборку страницы по<ph id="2">&lt;br /&gt;</ph>запросу от браузера, например: <bpt id="3">&lt;code&gt;</bpt>http://localhost:8080/desktop.bundles/index/index.html<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="page"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" resname="-2.----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 2. Создать макет страницы</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Макеты статических HTML-страниц размещаются в каталоге <bpt id="1">&lt;code&gt;</bpt>desktop.bundles<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Создать макет пустой страницы (назовем ее <bpt id="1">&lt;code&gt;</bpt>test<ept id="1">&lt;/code&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ ./node_modules/.bin/bem create -l desktop.bundles -b test<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Язык описания макета статической страницы (БЭМ-дерева) — BEMJSON.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Посмотрим исходный код страницы (<bpt id="1">&lt;code&gt;</bpt>desktop.bundles/test/test.bemjson.js<ept id="1">&lt;/code&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    block: 'page',
    title: 'test',
    head: [
        { elem: 'css', url: '_test.css' }
    ],
    scripts: [
        { elem: 'js', url:'_test.js'}
    ],
    content: [
        'block content'
    ]
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь используется:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блок <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> из библиотеки блоков <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> В проекте подключены библиотеки блоков <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>bem-components<ept id="3">&lt;/code&gt;</ept>. Мы можем использовать и модифицировать блоки оттуда.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Просмотрим результат сборки страницы в браузере: <bpt id="1">&lt;code&gt;</bpt>http://localhost:8080/desktop.bundles/test/test.html<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Подробнее</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu36]&gt;</bpt>Справочник по BEMJSON<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/" [#$tu38]&gt;</bpt>Библиотека блоков bem-core<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-components/</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-components/" [#$tu40]&gt;</bpt>Библиотека блоков bem-components<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/bem-tools/</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/bem-tools/" [#$tu42]&gt;</bpt>Документация по bem-tools<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/enb-bem-techs/</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/enb-bem-techs/" [#$tu44]&gt;</bpt>Документация по ENB<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="block"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" resname="-3.---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 3. Добавить блок</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сделаем очень простой макет — разместим на нашей новой странице <bpt id="1">&lt;code&gt;</bpt>test<ept id="1">&lt;/code&gt;</ept> один блок приветствия с текстом <bpt id="2">&lt;code&gt;</bpt>Hello, BEMHTML!<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Отредактируем исходный BEMJSON (<bpt id="1">&lt;code&gt;</bpt>desktop.bundles/test/test.bemjson.js<ept id="1">&lt;/code&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    block: 'page',
    title: 'test',
    head: [
        { elem: 'css', url: '_test.css' }
    ],
    scripts: [
        { elem: 'js', url:'_test.js'}
    ],
    content: [
        {
            block: 'hello',
            content: 'Hello, BEMHTML!'
        }
    ]
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь:</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блок <bpt id="1">&lt;code&gt;</bpt>hello<ept id="1">&lt;/code&gt;</ept> поместили в содержание страницы (поле <bpt id="2">&lt;code&gt;</bpt>content<ept id="2">&lt;/code&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>page<ept id="3">&lt;/code&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-li" xml:space="preserve">
<source xml:lang="ru">текст приветствия — в поле <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>hello<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если в проекте не определены шаблоны блока, HTML генерируется базовыми шаблонами из библиотеки <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Просмотрим результат. Фрагмент HTML-кода, описывающий тело страницы, выглядит так:</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;body class="page page_theme_islands"&gt;
    &lt;div class="hello"&gt;Hello, BEMHTML!&lt;/div&gt;
    &lt;script src="_test.js"&gt;&lt;/script&gt;
&lt;/body&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь:</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блоку <bpt id="1">&lt;code&gt;</bpt>hello<ept id="1">&lt;/code&gt;</ept> соответствует элемент <bpt id="2">&lt;code&gt;</bpt>div<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru">в атрибуте <bpt id="1">&lt;code&gt;</bpt>class<ept id="1">&lt;/code&gt;</ept> указано имя блока.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="template"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" resname="-4.------id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 4. Написать шаблон: приветствие по образцу</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сделаем блок <bpt id="1">&lt;code&gt;</bpt>hello<ept id="1">&lt;/code&gt;</ept> более универсальным — пусть он генерирует приветствие<ph id="2">&lt;br /&gt;</ph>для указанного имени. Указывая разные имена, можно будет использовать один и<ph id="3">&lt;br /&gt;</ph>тот же блок <bpt id="4">&lt;code&gt;</bpt>hello<ept id="4">&lt;/code&gt;</ept> на разных страницах или многократно на одной странице.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Объекты BEMJSON могут содержать произвольные поля данных,<ph id="2">&lt;br /&gt;</ph>а шаблоны могут использовать эти поля.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Создадим в нашем блоке поле <bpt id="1">&lt;code&gt;</bpt>name<ept id="1">&lt;/code&gt;</ept> для хранения имени пользователя. Исправим <bpt id="2">&lt;code&gt;</bpt>test.bemjson.js<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'hello', name: 'BEMHTML' }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Теперь, чтобы генерировать шаблонный текст приветствия, нам нужно создать в проекте файлы для блока <bpt id="1">&lt;code&gt;</bpt>hello<ept id="1">&lt;/code&gt;</ept> и определить BEMHTML-шаблон.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блоки, определённые в проекте, размещаются в каталоге <bpt id="1">&lt;code&gt;</bpt>desktop.blocks<ept id="1">&lt;/code&gt;</ept>. Каталог для блока и нужные файлы удобно создавать с помощью команды <bpt id="2">&lt;code&gt;</bpt>bem create<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>$ ./node_modules/.bin/bem create -l desktop.blocks -b hello<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Напишем шаблон для блока <bpt id="1">&lt;code&gt;</bpt>hello<ept id="1">&lt;/code&gt;</ept> в файле <bpt id="2">&lt;code&gt;</bpt>desktop.blocks/hello/hello.bemhtml<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').content()(function() {
    return ['Hello, ', this.ctx.name, '!'];
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь:</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').content()<ept id="1">&lt;/code&gt;</ept> — предикат шаблона (будет вызван при обработке блока <bpt id="2">&lt;code&gt;</bpt>hello<ept id="2">&lt;/code&gt;</ept> в стандартной моде <bpt id="3">&lt;code&gt;</bpt>content<ept id="3">&lt;/code&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>function() { return ['Hello, ', this.ctx.name, '!']; }<ept id="1">&lt;/code&gt;</ept> — тело шаблона (при выводе в HTML выполняется конкатенация строк — элементов массива);</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.ctx.name<ept id="1">&lt;/code&gt;</ept> — поле контекста, соответствует полю <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept> в исходном BEMJSON блока.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Этапы генерации HTML, не переопределённые в пользовательских шаблонах, выполняются базовыми шаблонами библиотеки <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;body class="page page_theme_islands"&gt;
    &lt;div class="hello"&gt;Hello, BEMHTML!&lt;/div&gt;
    &lt;script src="_test.js"&gt;&lt;/script&gt;
&lt;/body&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu77" resname="-1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Подробнее</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/bemhtml-js-syntax/</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/bemhtml-js-syntax/" [#$tu79]&gt;</bpt>Синтаксис BEMHTML<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#standardmoda" [#$tu81]&gt;</bpt>Стандартные моды<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#context_field</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#context_field" [#$tu83]&gt;</bpt>Поля контекста<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="array"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" resname="-5.--------id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 5. Переписать шаблон: генерация списка по массиву элементов</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">С развитием проекта может понадобиться усложнить блок <bpt id="1">&lt;code&gt;</bpt>hello<ept id="1">&lt;/code&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Для примера представим, что нам требуется выводить сразу несколько приветствий для заданного списка имен.</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В этом случае удобно в исходных данных вместо одного имени в поле <bpt id="1">&lt;code&gt;</bpt>name<ept id="1">&lt;/code&gt;</ept> поместить список имен в виде массива строк в поле <bpt id="2">&lt;code&gt;</bpt>names<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Теперь <bpt id="4">&lt;code&gt;</bpt>test.bemjson.js<ept id="4">&lt;/code&gt;</ept> выглядит так:</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{ block: 'hello', names: ['BEM', 'BEMJSON', 'BEMHTML'] }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Следуя БЭМ-методологии, каждое приветствие правильнее представить как элемент <bpt id="1">&lt;code&gt;</bpt>item<ept id="1">&lt;/code&gt;</ept>, вложенный в блок <bpt id="2">&lt;code&gt;</bpt>hello<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Иначе говоря, мы хотели бы получить такое БЭМ-дерево при наложении шаблона:</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'hello',
    content: [
        { elem: 'item', content: 'BEM' },
        { elem: 'item', content: 'BEMJSON' },
        { elem: 'item', content: 'BEMHTML' }
    ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu91" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> BEMHTML-шаблоны позволяют на лету модифицировать входной BEMJSON (БЭМ-дерево).</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Задача шаблона теперь заключается в том, чтобы для каждого имени в списке<ph id="1">&lt;br /&gt;</ph>сгенерировать элемент <bpt id="2">&lt;code&gt;</bpt>item<ept id="2">&lt;/code&gt;</ept>, вложенный в <bpt id="3">&lt;code&gt;</bpt>hello<ept id="3">&lt;/code&gt;</ept>. При этом сохраним поддержку старого API. Файл <bpt id="4">&lt;code&gt;</bpt>hello.bemhtml<ept id="4">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello')(
    content()(function() {
        return (this.ctx.names || [this.ctx.name]).map(function(user) {
            return { elem: 'item', content: user };
        });
    }),
    elem('item')(
        content()(function() {
            return ['Hello, ', applyNext(), '!'];
        })
    )
);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь в теле шаблона используется:</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-li" xml:space="preserve">
<source xml:lang="ru">сокращенная запись предикатов с использованием <bpt id="1">&lt;code&gt;</bpt>()<ept id="1">&lt;/code&gt;</ept>, эквивалентная двум шаблонам с предикатами: <bpt id="2">&lt;code&gt;</bpt>block('hello').content()<ept id="2">&lt;/code&gt;</ept>,<ph id="3">&lt;br /&gt;</ph> <bpt id="4">&lt;code&gt;</bpt>block('hello').elem('item').content()<ept id="4">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#content</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-li" xml:space="preserve">
<source xml:lang="ru">шаблоны по моде <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#content" [#$tu97]&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>content<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept>;<ph id="3">&lt;br /&gt;</ph> <bpt id="4">&lt;code&gt;</bpt>block('hello').elem('item').content()<ept id="4">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/templating/#applynext</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru">конструкция <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/templating/#applynext" [#$tu99]&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>applyNext<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept> — рекурсивный вызов процедуры применения шаблонов;</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-li" xml:space="preserve">
<source xml:lang="ru">конструкция <bpt id="1">&lt;a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map" [#$tu101]&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>Array.prototype.map<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept>, определённая в стандарте EcmaScript 5.</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> В предикате и теле шаблона можно использовать произвольные JS-выражения.</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В результате применения шаблонов мы получим HTML-страницу с блоком из трех приветствий:</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="hello"&gt;
  &lt;div class="hello__item"&gt;Hello, BEM!&lt;/div&gt;
  &lt;div class="hello__item"&gt;Hello, BEMJSON!&lt;/div&gt;
  &lt;div class="hello__item"&gt;Hello, BEMHTML!&lt;/div&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="tags"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu106" resname="-6.----html--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 6. Дополнить шаблон: модифицировать HTML-теги</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На первый взгляд введение элементов <bpt id="1">&lt;code&gt;</bpt>item<ept id="1">&lt;/code&gt;</ept> может показаться излишним, однако его<ph id="2">&lt;br /&gt;</ph>полезность можно в полной мере оценить в тот момент, когда потребуется оформить<ph id="3">&lt;br /&gt;</ph>блок приветствий в виде маркированного списка.</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В этом случае модификация BEMHTML-шаблона будет очень простой: нам нужно всего<ph id="1">&lt;br /&gt;</ph>лишь указать нужные теги для блока <bpt id="2">&lt;code&gt;</bpt>hello<ept id="2">&lt;/code&gt;</ept> и элементов <bpt id="3">&lt;code&gt;</bpt>item<ept id="3">&lt;/code&gt;</ept> вместо используемого<ph id="4">&lt;br /&gt;</ph>по умолчанию <bpt id="5">&lt;code&gt;</bpt>&lt;div&gt;<ept id="5">&lt;/code&gt;</ept>. Добавим шаблонам для блока и элемента шаблоны по моде <bpt id="6">&lt;code&gt;</bpt>tag<ept id="6">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello')(
    tag()('ul'),
    content()(function() {
        return (this.ctx.names || [this.ctx.name]).map(function(user) {
            return { elem: 'item', content: user };
        });
    }),
    elem('item')(
        tag()('li'),
        content()(function() {
            return ['Hello, ', applyNext(), '!'];
        })
    )
);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu110" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Здесь:</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru">снова используется вложенная запись предикатов, всего четыре шаблона:
</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').tag()<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu113" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').content()<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu114" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').elem('item').tag()<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu115" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').elem('item').content()<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#tag</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-li" xml:space="preserve">
<source xml:lang="ru">шаблоны по моде <bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#tag" [#$tu117]&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>tag<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu118" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">HTML-результат:</source>
</trans-unit>
      <trans-unit id="tu119" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;ul class="hello"&gt;
  &lt;li class="hello__item"&gt;Hello, BEM!&lt;/li&gt;
  &lt;li class="hello__item"&gt;Hello, BEMJSON!&lt;/li&gt;
  &lt;li class="hello__item"&gt;Hello, BEMHTML!&lt;/li&gt;
&lt;/ul&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu120" resname="-7.------css--js-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Шаг 7. Настроить оформление и поведение блока (CSS и JS) <bpt id="1">&lt;a preserve="1" name="cssjs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При создании блока в проекте <bpt id="1">&lt;code&gt;</bpt>project-stub<ept id="1">&lt;/code&gt;</ept> по умолчанию были сгенерированы файлы трех технологий:</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>hello.bemhtml<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>hello.css<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu124" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>hello.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Реализация блока в технологиях CSS и JS не является частью шаблонизатора<ph id="1">&lt;br /&gt;</ph>BEMHTML, однако используется вместе с ним в любом реальном проекте.</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> BEMHTML помещает имена БЭМ-сущностей в атрибут <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept> HTML-элементов. В CSS используются только селекторы по классу.</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, чтобы покрасить все блоки приветствий в зеленый цвет, достаточно написать в CSS блока (<bpt id="1">&lt;code&gt;</bpt>desktop.blocks/hello/hello.css<ept id="1">&lt;/code&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>.hello
{
    color: green
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu130" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#js</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы включить клиентский JavaScript для блока, <bpt id="1">&lt;strong&gt;</bpt>необходимо<ept id="1">&lt;/strong&gt;</ept> определить для блока шаблон<ph id="2">&lt;br /&gt;</ph>по моде <bpt id="3">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#js" [#$tu130]&gt;</bpt><bpt id="4">&lt;code&gt;</bpt>js<ept id="4">&lt;/code&gt;</ept><ept id="3">&lt;/a&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu131" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block('hello').js()(true);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu133" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/reference/#jsAttr</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если для блока был инициализирован клиентский JS, BEMHTML добавляет в список HTML-классов <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept>, а также атрибут со значением параметров клиентского JS (по умолчанию — <bpt id="2">&lt;code&gt;</bpt>data-bem<ept id="2">&lt;/code&gt;</ept>, см. <bpt id="3">&lt;a href="https://ru.bem.info/technology/bemhtml/current/reference/#jsAttr" [#$tu133]&gt;</bpt>мода <bpt id="4">&lt;code&gt;</bpt>jsAttr<ept id="4">&lt;/code&gt;</ept><ept id="3">&lt;/a&gt;</ept>). JS-фреймворк при инициализации добавляет HTML-класс <bpt id="5">&lt;code&gt;</bpt>hello_js_inited<ept id="5">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu134" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="hello i-bem hello_js_inited" data-bem="{&amp;quot;hello&amp;quot;:{}}"&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Блок <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> (часть библиотеки <bpt id="3">&lt;code&gt;</bpt>bem-core<ept id="3">&lt;/code&gt;</ept>) — JS-фреймфорк, позволяющий писать клиентский JavaScript в терминах БЭМ.</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пусть, например, при клике на блоке выводится предупреждение с текстом <bpt id="1">&lt;code&gt;</bpt>Hello<ept id="1">&lt;/code&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Файл <bpt id="3">&lt;code&gt;</bpt>desktop.blocks/hello/hello.js<ept id="3">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('hello', ['i-bem__dom'], function(provide, BEMDOM) {
    provide(BEMDOM.decl(this.name, {
        onSetMod: {
            'js': {
                'inited': function() {
                    this.bindTo('click', function() { alert('Hello'); });
                }
            }
        }
    }));
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu138" resname="-2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Подробнее</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/i-bem/</source>
</trans-unit>
      <trans-unit id="tu139" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/i-bem/" [#$tu140]&gt;</bpt>Описание JS-фреймворка <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu141" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Дальнейшее чтение</source>
</trans-unit>
      <trans-unit id="tu143" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/v2/reference/</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/technology/bemhtml/v2/reference/" [#$tu143]&gt;</bpt>BEMHTML. Справочное руководство<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu145" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/" [#$tu145]&gt;</bpt>Библиотека блоков bem-core<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu147" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/method/" [#$tu147]&gt;</bpt>БЭМ-методология<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-params.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="data-bem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Передача параметров экземпляру блока</source>
</trans-unit>
      <trans-unit id="tu3" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Синтаксис передачи параметров</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Параметры блока хранятся в атрибуте <bpt id="1">&lt;code&gt;</bpt>data-bem<ept id="1">&lt;/code&gt;</ept> HTML-элемента и передаются блоку в момент инициализации. Параметры позволяют влиять на поведение конкретного экземпляра блока, привязанного к данному HTML-элементу.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение атрибута <bpt id="1">&lt;code&gt;</bpt>data-bem<ept id="1">&lt;/code&gt;</ept> должно содержать валидный JSON описвающий хэш вида:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">ключ — <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>, имя блока;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">значение — <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>, параметры данного блока. Если данному экземпляру блока не требуются<ph id="2">&lt;br /&gt;</ph>параметры, указывается пустой хэш <bpt id="3">&lt;code&gt;</bpt>{}<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem='{ "my-block": {} }'&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если к HTML-элементу <bpt id="1">&lt;a href="./i-bem-js-html-binding.ru.md#html-mixes"&gt;</bpt>привязано несколько JS-блоков<ept id="1">&lt;/a&gt;</ept>, в значении атрибута <bpt id="2">&lt;code&gt;</bpt>data-bem<ept id="2">&lt;/code&gt;</ept> должны содержаться параметры для каждого из них:</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block another-block i-bem" data-bem='{ "my-block": {}, "another-block": {} }'&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Параметры элемента<ept id="1">&lt;/strong&gt;</ept> передаются через атрибута <bpt id="2">&lt;code&gt;</bpt>data-bem<ept id="2">&lt;/code&gt;</ept> DOM-узла элемента. Например, передать параметры элементу <bpt id="3">&lt;code&gt;</bpt>my-elem<ept id="3">&lt;/code&gt;</ept> блока <bpt id="4">&lt;code&gt;</bpt>my-block<ept id="4">&lt;/code&gt;</ept> можно так:</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem='{ "my-block": {} }'&gt;
    &lt;div class="my-block__my-elem" data-bem='{ "my-block__my-elem": {} }'&gt;&lt;/div&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Указание имени блока в параметрах позволяет:</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru">ускорить инициализацию блоков – не нужно парсить значение атрибута <bpt id="1">&lt;code&gt;</bpt>class<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru">размещать несколько блоков на одном HTML-элементе без необходимости множить его атрибуты.</source>
</trans-unit>
      <trans-unit id="tu16" resname="------id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Доступ к параметрам из экземпляра блока</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступ к параметрам из экземпляра блока можно получить через поле <bpt id="1">&lt;code&gt;</bpt>this.params<ept id="1">&lt;/code&gt;</ept>. Его значение – хэш параметров из атрибута <bpt id="2">&lt;code&gt;</bpt>data-bem<ept id="2">&lt;/code&gt;</ept> DOM-элемента блока (<bpt id="3">&lt;code&gt;</bpt>this.domElem<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, получить доступ к параметрам блока <bpt id="1">&lt;code&gt;</bpt>my-block<ept id="1">&lt;/code&gt;</ept> можно так:</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem='{ "my-block": { "foo" : "bar" } }'&gt;&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    onSetMod : {
        'js' : {
            'inited': function() {
                console.log(this.params); // { foo : 'bar' }
            }
        }
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для получения параметров элемента служит метод экземпляра блока <bpt id="1">&lt;code&gt;</bpt>elemParams<ept id="1">&lt;/code&gt;</ept>. Он принимает аргументом строку с именем элемента или его jQuery-объект. Возвращает хэш параметров элемента.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem='{ "my-block": {} }'&gt;
    &lt;div class="my-block__my-elem" data-bem='{ "my-block__my-elem": { "foo" : "bar" } }'&gt;&lt;/div&gt;
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    onSetMod : {
        'js' : {
            'inited': function() {
                    console.log(this.elemParams('my-elem')); // { foo : 'bar' }
            }
        }
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-dom.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="dom"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="--dom--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Работа с DOM-деревом</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="domElem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu4" resname="dom----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">DOM-узел экземпляра блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В контексте экземпляра блока с DOM-представлением зарезервировано поле <bpt id="1">&lt;code&gt;</bpt>this.domElem<ept id="1">&lt;/code&gt;</ept>, содержащее jQuery-объект со ссылками на все DOM-узлы, с которыми связан данный экземпляр.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elem-api"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu7" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">БЭМ-элементы блоков представлены в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> как DOM-узлы, вложенные в DOM-узел экземпляра блока.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для обращения к DOM-узлам элементов и работы с их модификаторами, следует использовать API экземпляра блока:</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Кэширующий доступ: <bpt id="1">&lt;code&gt;</bpt>elem(elems, [modName], [modVal])<ept id="1">&lt;/code&gt;</ept>. Элемент,<ph id="2">&lt;br /&gt;</ph>полученный таким образом, не требуется сохранять в переменную.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('link', {
    setInnerText: function() {
        this.elem('inner').text('Текст ссылки');
        /* ... */
        this.elem('inner').text('Другой текст');
    }
);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Некэширующий доступ: <bpt id="1">&lt;code&gt;</bpt>findElem(elems, [modName], [modVal])<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('link', {
    setInnerText: function() {
        var inner = this.findElem('inner');
        inner.text('Текст ссылки');
        /* ... */
        inner.text('Другой текст');
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При <bpt id="1">&lt;a href="#dynamic"&gt;</bpt>динамическом добавлении и удалении элементов блока<ept id="1">&lt;/a&gt;</ept> может<ph id="2">&lt;br /&gt;</ph>потребоваться очистить кэш элементов. Для этого служит метод <bpt id="3">&lt;code&gt;</bpt>dropElemCache('elements')<ept id="3">&lt;/code&gt;</ept>. Он принимает строку – разделенный пробелами список имен элементов, кэш которых нужно сбросить.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('attach', {
    clear: function() {
        BEMDOM.destruct(this.elem('control'));
        BEMDOM.destruct(this.elem('file'));
        return this.dropElemCache('control file');
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="api-find"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" resname="----dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Поиск экземпляров блоков в DOM-дереве</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обращение к другому блоку в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> выполняется из текущего блока,<ph id="2">&lt;br /&gt;</ph>размещенного на определенном узле DOM-дерева. Поиск других блоков в<ph id="3">&lt;br /&gt;</ph>DOM-дереве может вестись по трем направлениям (осям) относительно<ph id="4">&lt;br /&gt;</ph>DOM-узла текущего блока:</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Внутри блока<ept id="1">&lt;/strong&gt;</ept> — на DOM-узлах, вложенных в DOM-узел текущего блока. Вспомогательные методы: <bpt id="2">&lt;code&gt;</bpt>findBlocksInside([elem], block)<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>findBlockInside([elem], block)<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Снаружи блока<ept id="1">&lt;/strong&gt;</ept> — на DOM-узлах, потомком которых является DOM-узел<ph id="2">&lt;br /&gt;</ph>текущего блока. Вспомогательные методы: <bpt id="3">&lt;code&gt;</bpt>findBlocksOutside([elem], block)<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>findBlockOutside([elem], block)<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>На себе<ept id="1">&lt;/strong&gt;</ept> — на том же DOM-узле, на котором размещен текущий блок. Это актуально в случае <bpt id="2">&lt;a href="i-bem-js-html-binding.ru.md#html-mixes"&gt;</bpt>размещения нескольких JS-блоков на одном DOM-узле<ept id="2">&lt;/a&gt;</ept> (микс). Вспомогательные методы: <bpt id="3">&lt;code&gt;</bpt>findBlocksOn([elem], block)<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>findBlockOn([elem], block)<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сигнатура вспомогательных методов идентична:</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>[elem]<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String|jQuery}<ept id="2">&lt;/code&gt;</ept> – имя или DOM-узел элемента блока.</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>block<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String|Object}<ept id="2">&lt;/code&gt;</ept> – имя или описание искомого блока. Описанием служит хеш вида <bpt id="3">&lt;code&gt;</bpt>{ block : 'name', modName : 'foo', modVal : 'bar' }<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вспомогательные методы для поиска парные. Различаются возвращаемым значением:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>findBlocks&lt;Direction&gt;<ept id="1">&lt;/code&gt;</ept> – возвращает массив найденных блоков.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>findBlock&lt;Direction&gt;<ept id="1">&lt;/code&gt;</ept> – возвращает первый найденный блок.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример<ept id="1">&lt;/strong&gt;</ept>: При переключении модификатора <bpt id="2">&lt;code&gt;</bpt>disabled<ept id="2">&lt;/code&gt;</ept> экземпляр блока<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;code&gt;</bpt>attach<ept id="4">&lt;/code&gt;</ept> находит вложенный в него блок <bpt id="5">&lt;code&gt;</bpt>button<ept id="5">&lt;/code&gt;</ept> и переключает его<ph id="6">&lt;br /&gt;</ph>модификатор <bpt id="7">&lt;code&gt;</bpt>disabled<ept id="7">&lt;/code&gt;</ept> в то же значение, которое получил сам:</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('attach', ['i-bem__dom', 'button'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    onSetMod: {
        'disabled': function(modName, modVal) {
            this.findBlockInside('button').setMod(modName, modVal);
        }
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Не используйте jQuery-селекторы для поиска блоков и элементов.<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;code&gt;</bpt>i-bem.js<ept id="3">&lt;/code&gt;</ept> предоставляет высокоуровневое API для доступа к DOM-узлам блоков и элементов. Прямое обращение к DOM-дереву делает код менее устойчивым к изменениям БЭМ-библиотек и может привести к возникновению сложно обнаруживаемых ошибок.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="dynamic"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" resname="------dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Динамическое обновление блоков и элементов в DOM-дереве</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В современных интерфейсах зачастую необходимо создавать новые<ph id="1">&lt;br /&gt;</ph>фрагменты DOM-дерева и заменять старые в процессе работы (AJAX). В<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;code&gt;</bpt>i-bem.js<ept id="3">&lt;/code&gt;</ept> предусмотрены следующие функции для добавления и замены<ph id="4">&lt;br /&gt;</ph>фрагментов DOM-дерева.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Добавить DOM-фрагмент:</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>append<ept id="1">&lt;/code&gt;</ept> — в конец указанного контекста;</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>prepend<ept id="1">&lt;/code&gt;</ept> — в начало указанного контекста;</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>before<ept id="1">&lt;/code&gt;</ept> — перед указанным контекстом;</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>after<ept id="1">&lt;/code&gt;</ept> — после указанного контекста;</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Заместить DOM-фрагмент:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>update<ept id="1">&lt;/code&gt;</ept> — внутри указанного контекста;</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>replace<ept id="1">&lt;/code&gt;</ept> — заменить указанный контекст новым DOM-фрагментом.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все функции автоматически выполняют <bpt id="1">&lt;a href="i-bem-js-init.ru.md#init-ajax"&gt;</bpt>инициализацию блоков на обновленном фрагменте DOM-дерева<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/current/intro/</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemjson/current/bemjson/</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы упростить создание БЭМ-сущностей на обновляемых фрагментах<ph id="1">&lt;br /&gt;</ph>DOM-дерева, можно использовать шаблонизатор<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;a href="https://ru.bem.info/technology/bemhtml/current/intro/" [#$tu48]&gt;</bpt>BEMHTML<ept id="3">&lt;/a&gt;</ept>, подключив<ph id="4">&lt;br /&gt;</ph>его в качестве <bpt id="5">&lt;a href="https://github.com/ymaps/modules" [#$tu49]&gt;</bpt>ym<ept id="5">&lt;/a&gt;</ept>-модуля. БЭМ-сущности описываются в формате<ph id="6">&lt;br /&gt;</ph><bpt id="7">&lt;a href="https://ru.bem.info/technology/bemjson/current/bemjson/" [#$tu50]&gt;</bpt>BEMJSON<ept id="7">&lt;/a&gt;</ept><ph id="8">&lt;br /&gt;</ph>непосредственно в коде блока. Функция <bpt id="9">&lt;code&gt;</bpt>BEMHTML.apply<ept id="9">&lt;/code&gt;</ept> генерирует<ph id="10">&lt;br /&gt;</ph>HTML-элементы по BEMJSON-декларации в соответствии с правилами<ph id="11">&lt;br /&gt;</ph>именования БЭМ.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Метод <bpt id="2">&lt;code&gt;</bpt>_updateFileElem<ept id="2">&lt;/code&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>attach<ept id="3">&lt;/code&gt;</ept> удаляет элемент <bpt id="4">&lt;code&gt;</bpt>file<ept id="4">&lt;/code&gt;</ept>, если он существовал, и создает новый элемент с помощью функции <bpt id="5">&lt;code&gt;</bpt>BEMHTML.apply<ept id="5">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'attach',
    ['BEMHTML', 'strings__escape', 'i-bem__dom'],
    function(provide, BEMHTML, escape, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    _updateFileElem : function() {
        var fileName = extractFileNameFromPath(this.getVal());
        this.elem('file').length &amp;&amp; BEMDOM.destruct(this.elem('file'));
        BEMDOM.append(
            this.domElem,
            BEMHTML.apply({
                block : 'attach',
                elem : 'file',
                content : [
                    {
                        elem : 'icon',
                        mods : { file : extractExtensionFromFileName(fileName) }
                    },
                    { elem : 'text', content : escape.html(fileName) },
                    { elem : 'clear' }
                ]
            }));
        return this.dropElemCache('file');
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-decl.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="decl"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Декларация блока</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-реализация блока описывает поведение определенного класса элементов веб-интерфейса. В конкретных интерфейсах каждый блок может быть представлен несколькими экземплярами.<ph id="1">&lt;br /&gt;</ph>Экземпляр блока реализует функциональность своего класса и имеет собственное, независимое состояние.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В терминах парадигмы <bpt id="1">&lt;strong&gt;</bpt>объектно-ориентированного программирования<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блок — класс;</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">экземпляр блока — экземпляр класса.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В соответствии с ООП, вся функциональность блока реализуется модульно в методах класса <bpt id="1">&lt;em&gt;</bpt>(=блока)<ept id="1">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Методы блока подразделяются на:</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru">методы экземпляра блока;</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-li" xml:space="preserve">
<source xml:lang="ru">статические методы.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Код блока в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> принято называть <bpt id="2">&lt;strong&gt;</bpt>декларацией<ept id="2">&lt;/strong&gt;</ept>, чтобы подчеркнуть принятый<ph id="3">&lt;br /&gt;</ph>в БЭМ декларативный стиль программирования.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поведение блока программируется в декларативном стиле в виде утверждений: <bpt id="1">&lt;code&gt;</bpt>набор условий<ept id="1">&lt;/code&gt;</ept> — <bpt id="2">&lt;code&gt;</bpt>реакция блока<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="decl-syntax"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu14" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Синтаксис декларации</source>
</trans-unit>
      <trans-unit id="tu15" resname="--dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Блоки с DOM-представлением</source>
</trans-unit>
      <trans-unit id="tu16" resname="-----id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Объявление нового блока без родителя</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы задекларировать новый JS-блок <bpt id="1">&lt;strong&gt;</bpt>с DOM-представлением<ept id="1">&lt;/strong&gt;</ept> (привязанный к HTML-элементу), нужно воспользоваться методом <bpt id="2">&lt;code&gt;</bpt>decl<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;a href="https://github.com/ymaps/modules" [#$tu18]&gt;</bpt>ym<ept id="3">&lt;/a&gt;</ept>-модуля <bpt id="4">&lt;code&gt;</bpt>i-bem__dom<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>decl<ept id="1">&lt;/code&gt;</ept> принимает аргументы:</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Описание блока <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> или <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Методы экземпляра блока — <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Статические методы — <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Объявленные методы будут применяться во всех экземплярах блока независимо от их состояний (модификаторов).</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Декларация методов для блока <bpt id="2">&lt;code&gt;</bpt>button<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('button', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name,
    {
        /* методы экземпляра */
    },
    {
        /* статические методы */
    })
);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поле контекста <bpt id="1">&lt;code&gt;</bpt>ym<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>this.name<ept id="2">&lt;/code&gt;</ept>, передаваемое первым аргументом методу <bpt id="3">&lt;code&gt;</bpt>BEMDOM.decl<ept id="3">&lt;/code&gt;</ept>, содержит ссылку на имя блока, указанное первым аргументом <bpt id="4">&lt;code&gt;</bpt>modules.define<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-decl"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" resname="--dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Блоки без DOM-представления</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для декларации блоков без DOM-представления служит метод <bpt id="1">&lt;code&gt;</bpt>decl<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;a href="https://github.com/ymaps/modules" [#$tu30]&gt;</bpt>ym<ept id="2">&lt;/a&gt;</ept>-модуля <bpt id="3">&lt;code&gt;</bpt>i-bem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод принимает те же параметры, что и метод <bpt id="1">&lt;code&gt;</bpt>decl<ept id="1">&lt;/code&gt;</ept> модуля <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem'], function(provide, BEM) {

provide(BEM.decl(this.name,
    {
        /* методы экземпляра */
    },
    {
        /* статические методы */
    })
);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Оформлять инфраструктурный код в виде блока без DOM-представления удобно, если в нем планируется использовать API БЭМ-блоков (состояния, выражаемые модификаторами, БЭМ-события и<ph id="2">&lt;br /&gt;</ph>т. п.). Если использовать БЭМ-предметную область не планируется,<ph id="3">&lt;br /&gt;</ph>инфраструктурный код можно оформлять в виде <bpt id="4">&lt;a href="https://github.com/ymaps/modules" [#$tu34]&gt;</bpt>ym<ept id="4">&lt;/a&gt;</ept>-модуля.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('router', function(provide) {

provide({
    route : function() { /* ... */ }
});

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Наследование блока</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Одна и та же функциональность может быть востребована в нескольких блоках проекта.<ph id="1">&lt;br /&gt;</ph>Например, разные блоки могут обращаться за данными к бэкенду, используя AJAX,<ph id="2">&lt;br /&gt;</ph>или совершать однотипные операции с DOM-деревом и т.д. Чтобы избежать ненужных повторов в коде, общую функциональность можно инкапсулировать в виде модулей, а затем добавлять к блокам.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Наследование позволяет повторно использовать функциональность блока, расширяя ее новой логикой.<ph id="1">&lt;br /&gt;</ph>В <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept> доступно несколько механизмов наследования. Выбор конкретного механизма зависит от специфики создаваемого блока.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher-simple"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Простое наследование</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В случае простого наследования создаваемый блок объявляется как наследник существующего. Для этого нужно:</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Указать базовый блок в зависимостях модульной системы.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Передать ссылку на базовый блок в специальном поле <bpt id="1">&lt;code&gt;</bpt>baseBlock<ept id="1">&lt;/code&gt;</ept> декларации.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, блок <bpt id="1">&lt;code&gt;</bpt>bblock<ept id="1">&lt;/code&gt;</ept> наследуется от блока <bpt id="2">&lt;code&gt;</bpt>ablock<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('ablock', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {}));

});

modules.define('bblock', ['i-bem__dom', 'ablock'], function(provide, BEMDOM, ABlock) {

provide(BEMDOM.decl({ block : this.name, baseBlock : ABlock }));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такой механизм позволяет использовать методы базового блока внутри производного.<ph id="1">&lt;br /&gt;</ph>Для вызова одноименных методов базового блока служит <bpt id="2">&lt;a href="i-bem-js-context.ru.md#spec-fields"&gt;</bpt>вспомогательное свойство<ept id="2">&lt;/a&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>this.__base<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> В <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept> можно создавать цепочки наследования – блок наследуется от другого,<ph id="3">&lt;br /&gt;</ph>который, в свою очередь, наследуется от третьего и т.д.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher-over"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Доопределение блока</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы создать вариант уже существующего блока с измененной или дополненной функциональностью, можно <bpt id="1">&lt;strong&gt;</bpt>доопределить<ept id="1">&lt;/strong&gt;</ept> базовый блок на <bpt id="2">&lt;em&gt;</bpt>уровне переопределения<ept id="2">&lt;/em&gt;</ept> проекта.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для этого в проекте создается декларация нового блока с тем же именем, что и у базового. В результате блоку будет доступна вся функциональностью базового. Реализация одноименных методов и модификаторов, при этом, будет взята из новой декларации.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('ablock', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {})); // Объявляем базовый блок

});

modules.define('ablock', function(provide, ABlock) {

provide(ABlock.decl({})); // Доопределяем базовый блок

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такая схема наследования часто используется при работе с библиотечными блоками.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher-over-modifier"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" resname="----id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Добавление модификатора к блоку</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В соответствии с БЭМ-методологией состояния блока должны описываться <bpt id="1">&lt;a href="i-bem-js-states.ru.md#modifiers"&gt;</bpt>модификаторами<ept id="1">&lt;/a&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Поэтому чтобы расширить функциональность блока часто нужно реализовать поддержку новых модификаторов.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для добавления модификатора необходимо передать методу <bpt id="1">&lt;code&gt;</bpt>decl<ept id="1">&lt;/code&gt;</ept> доопределяемого блока:</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хэш с ключами <bpt id="1">&lt;code&gt;</bpt>modName<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>modVal<ept id="2">&lt;/code&gt;</ept>. Значением для <bpt id="3">&lt;code&gt;</bpt>modName<ept id="3">&lt;/code&gt;</ept> служит строка – имя модификатора. Значением <bpt id="4">&lt;code&gt;</bpt>modVal<ept id="4">&lt;/code&gt;</ept> – строка со значением модификатора.</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хэш методов, которые будут доступны для блока с соответствующим модификатором. При наличии одноименных методов и модификаторов, будет использована их реализация из хэша.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('ablock', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {})); // Объявляем базовый блок

});

modules.define('ablock', function(provide, ABlock) {

provide(ABlock.decl({ modName : 'm1', modVal : 'v1' }, {})); // Доопределяем базовый блок с модификтором _m1_v1

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> <bpt id="2">&lt;a href="./i-bem-js-context.ru.md"&gt;</bpt>Cтатические методы<ept id="2">&lt;/a&gt;</ept> блока будут доступны всем его экземплярам <bpt id="3">&lt;em&gt;</bpt>вне зависимости от значений модификаторов<ept id="3">&lt;/em&gt;</ept>.<ph id="4">&lt;br /&gt;</ph>Модификаторы — это свойства экземпляра блока, а статические методы принадлежат классу<ph id="5">&lt;br /&gt;</ph>блока и не учитывают состояния модификаторов.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher-mixins"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Блоки-миксы</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> для добавления востребованной функциональности к блокам используется специальный<ph id="2">&lt;br /&gt;</ph>тип блоков – <bpt id="3">&lt;strong&gt;</bpt>блоки-миксы<ept id="3">&lt;/strong&gt;</ept>. Главная особенность блоков-миксов состоит в том, что они не участвуют в цепочке наследования. Это позволяет примешивать реализованную в них функциональность к другим блокам без риска нарушить их <bpt id="4">&lt;a href="i-bem-js-context.ru.md#spec-fields"&gt;</bpt>связи с родительскими блоками<ept id="4">&lt;/a&gt;</ept> (<bpt id="5">&lt;code&gt;</bpt>this.__base<ept id="5">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher-mixins-declwithmix"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" resname="---id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Примешивание блока-микса</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы примешать к блоку один или несколько блоков-миксов, необходимо в декларации блока присвоить значение опциональному полю <bpt id="1">&lt;code&gt;</bpt>baseMix<ept id="1">&lt;/code&gt;</ept>. Значением служит массив строк – имен примешиваемых блоков-миксов:</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom', 'foo', 'bar'], function(provide, BEMDOM) {

provide(BEMDOM.decl({ block : this.name, baseMix : ['foo', 'bar']},
    { /* методы экземпляра */ },
    { /* статические методы */ }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="inher-mixins-mixindecl"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="---id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Декларация блока-микса</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В качестве блоков-миксов можно использовать только блоки, созданные с помощью <bpt id="1">&lt;code&gt;</bpt>declMix<ept id="1">&lt;/code&gt;</ept>.<ph id="2">&lt;br /&gt;</ph>Метод принимает декларацию блока в формате, аналогичном методу <bpt id="3">&lt;code&gt;</bpt>decl<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('mymix', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.declMix('mymix', // только строка с именем
    { /* методы экземпляра */ },
    { /* статические методы */ }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Блок-микс нельзя инстанцировать и использовать как самостоятельный блок.</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="trigger-decl"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu77" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Декларация триггеров</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-states.ru.md"&gt;</bpt>Триггеры<ept id="1">&lt;/a&gt;</ept>, выполняемые при установке модификаторов, описываются в декларации блока. Для этого в хэше методов экземпляра блока зарезервированы свойства:</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>beforeSetMod<ept id="1">&lt;/code&gt;</ept> — триггеры, вызываемые до установки <bpt id="2">&lt;strong&gt;</bpt>модификаторов блока<ept id="2">&lt;/strong&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>beforeElemSetMod<ept id="1">&lt;/code&gt;</ept> — триггеры, вызываемые до установки <bpt id="2">&lt;strong&gt;</bpt>модификаторов элементов<ept id="2">&lt;/strong&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod<ept id="1">&lt;/code&gt;</ept> — триггеры, вызываемые после установки <bpt id="2">&lt;strong&gt;</bpt>модификаторов блока<ept id="2">&lt;/strong&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onElemSetMod<ept id="1">&lt;/code&gt;</ept> — триггеры, вызываемые после установки <bpt id="2">&lt;strong&gt;</bpt>модификаторов элементов<ept id="2">&lt;/strong&gt;</ept> блока.</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('block-name', function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name,
    {
        /* методы экземпляра */
        beforeSetMod: { /* триггеры до установки модификаторов блока*/}
        beforeElemSetMod: { /* триггеры до установки модификаторов элементов*/}
        onSetMod: { /* триггеры после установки модификаторов блока */ }
        onElemSetMod: { /* триггеры после установки модификаторов элементов */ }
    },
    {
        /* статические методы */
    }
));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение свойств <bpt id="1">&lt;code&gt;</bpt>beforeSetMod<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>onSetMod<ept id="2">&lt;/code&gt;</ept> — хэш, связывающий изменения модификаторов с триггерами. Триггер получает аргументами:</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modName<ept id="1">&lt;/code&gt;</ept> – имя модификатора;</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modVal<ept id="1">&lt;/code&gt;</ept> – выставляемое значение модификатора;</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>prevModVal<ept id="1">&lt;/code&gt;</ept> – предыдущее значение модификатора. Для <bpt id="2">&lt;code&gt;</bpt>beforeSetMod<ept id="2">&lt;/code&gt;</ept> это текущее значение модификатора, которое будет заменено на <bpt id="3">&lt;code&gt;</bpt>modVal<ept id="3">&lt;/code&gt;</ept>, если триггер не вернет <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    'mod1': function(modName, modVal, prevModVal) { /* ... */ }, // установка mod1 в любое значение
    'mod2': {
        'val1': function(modName, modVal, prevModVal) { /* ... */ }, // триггер на установку mod2 в значение val1
        'val2': function(modName, modVal, prevModVal) { /* ... */ }, // триггер на установку mod2 в значение val2
        '': function(modName, modVal, prevModVal) { /* ... */ } // триггер на удаление модификатора mod2
    'mod3': {
        'true': function(modName, modVal, prevModVal) { /* ... */ }, // триггер на установку простого модификатора mod3
        '': function(modName, modVal, prevModVal) { /* ... */ }, // триггер на удаление простого модификатора mod3
    },
    '*': function(modName, modVal, prevModVal) { /* ... */ } // триггер на установку любого модификатора в любое значение
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu89" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для триггера на установку любого модификатора блока в любое значение<ph id="1">&lt;br /&gt;</ph>существует сокращенная форма записи:</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>beforeSetMod: function(modName, modVal, prevModVal) { /* ... */ }
onSetMod: function(modName, modVal, prevModVal) { /* ... */ }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu91" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Триггеры на установку <bpt id="1">&lt;strong&gt;</bpt>модификаторов элемента<ept id="1">&lt;/strong&gt;</ept> описываются в свойствах <bpt id="2">&lt;code&gt;</bpt>beforeElemSetMod<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>onElemSetMod<ept id="3">&lt;/code&gt;</ept>. Хэш в значениях свойств имеет дополнительный уровень вложенности — <bpt id="4">&lt;strong&gt;</bpt>имя элемента<ept id="4">&lt;/strong&gt;</ept>.<ph id="5">&lt;br /&gt;</ph>В качестве аргументов триггеру передаются:</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept> — имя элемента;</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modName<ept id="1">&lt;/code&gt;</ept> – имя модификатора;</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modVal<ept id="1">&lt;/code&gt;</ept> – выставляемое значение модификатора;</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>prevModVal<ept id="1">&lt;/code&gt;</ept> – предыдущее значение модификатора. Для <bpt id="2">&lt;code&gt;</bpt>beforeSetMod<ept id="2">&lt;/code&gt;</ept> это текущее значение модификатора, которое будет заменено на <bpt id="3">&lt;code&gt;</bpt>modVal<ept id="3">&lt;/code&gt;</ept>, если триггер не вернет <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    'elem1': {
        'mod1': function(elem, modName, modVal, prevModVal) { /* ... */ }, // триггер на установку mod1 элемента elem 1 в любое значение
        'mod2': {
            'val1': function(elem, modName, modVal, prevModVal) { /* ... */ }, // триггер на установку mod2 элемента elem1 в значение val1
            'val2': function(elem, modName, modVal, prevModVal) { /* ... */ } // триггер на установку mod2 элемента elem1 в значение val2
            }
        },
    'elem2': function(elem, modName, modVal, prevModVal) { /* ... */ } // триггер на установку любого модификатора элемента elem2 в любое значение
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сокращенная запись для триггера на установку любого модификатора элемента <bpt id="1">&lt;code&gt;</bpt>elem1<ept id="1">&lt;/code&gt;</ept> в любое значение:</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>beforeElemSetMod: { 'elem1': function(elem, modName, modVal, prevModVal) { /* ... */ } }
onElemSetMod: { 'elem1': function(elem, modName, modVal, prevModVal) { /* ... */ } }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="i-bem.js---id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">i-bem.js: руководство пользователя</source>
</trans-unit>
      <trans-unit id="tu2" resname="i-bem.js-javascript----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">i-bem.js: JavaScript-фреймворк для БЭМ</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/method/</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> — специализированный JavaScript-фреймворк для веб-разработки<ph id="2">&lt;br /&gt;</ph>в рамках <bpt id="3">&lt;a href="https://ru.bem.info/method/" [#$tu4]&gt;</bpt>БЭМ-методологии<ept id="3">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> позволяет:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">разрабатывать веб-интерфейс в терминах блоков, элементов, модификаторов;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">описывать логику работы блока в декларативном стиле — как набор состояний;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">легко интегрировать JavaScript-код с BEMHTML- или BH-шаблонами и CSS в стиле БЭМ;</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru">гибко переопределять поведение библиотечных блоков.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> не предназначен для замены фреймворка общего назначения, подобного jQuery.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Краткий обзор содержания документа<ept id="1">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-common.ru.md"&gt;</bpt>Общие сведения<ept id="1">&lt;/a&gt;</ept> о фреймворке: связь с предметной областью БЭМ, краткое описание модульной структуры<ph id="2">&lt;br /&gt;</ph>фреймворка, шаблонного проекта и инструментов для сборки кода,<ph id="3">&lt;br /&gt;</ph>написанного с использованием <bpt id="4">&lt;code&gt;</bpt>i-bem.js<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-html-binding.ru.md"&gt;</bpt>Привязка JS-блоков к HTML<ept id="1">&lt;/a&gt;</ept> — разметка JS-блоков в<ph id="2">&lt;br /&gt;</ph>HTML-коде страницы, варианты соотношения HTML-элементов и JS-блоков.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-decl.ru.md"&gt;</bpt>Декларация блока<ept id="1">&lt;/a&gt;</ept> — синтаксис описания JS-блоков.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-params.ru.md"&gt;</bpt>Передача параметров<ept id="1">&lt;/a&gt;</ept> — передача параметров экземпляру блока, получение доступа к параметрам блока из экземпляра.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-dom.ru.md"&gt;</bpt>Работа с DOM-деревом<ept id="1">&lt;/a&gt;</ept> — API для работы с DOM-узлами блоков:<ph id="2">&lt;br /&gt;</ph>элементы, динамическое изменение DOM-дерева (AJAX), поиск DOM-узлов.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-states.ru.md"&gt;</bpt>Состояния блока<ept id="1">&lt;/a&gt;</ept> — модификаторы, триггеры на смену состояний (установку модификаторов).</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-events.ru.md"&gt;</bpt>События<ept id="1">&lt;/a&gt;</ept> — событийная модель <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept>: DOM- и БЭМ-события, делегирование событий.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>Инициализация<ept id="1">&lt;/a&gt;</ept> — инициализация и удаление экземпляров блоков, отложенная и автоматическая инициализация.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-interact.ru.md"&gt;</bpt>Взаимодействие блоков<ept id="1">&lt;/a&gt;</ept> — обращение из блока к другим блокам, классам блоков.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-context.ru.md"&gt;</bpt>Контекст<ept id="1">&lt;/a&gt;</ept> — собственные и статические свойства блока. Статические свойства BEMDOM.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="./i-bem-js-extras.ru.md"&gt;</bpt>Что дальше?<ept id="1">&lt;/a&gt;</ept> — ссылки на документацию и дополнительные материалы.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-context.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="context"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Контекст</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Методы экземпляра блока<ept id="1">&lt;/strong&gt;</ept> исполняются в контексте JS-объекта экземпляра блока. Ключевое слово <bpt id="2">&lt;code&gt;</bpt>this<ept id="2">&lt;/code&gt;</ept> в методах экземпляра блока ссылается на JS-объект <bpt id="3">&lt;strong&gt;</bpt>экземпляра блока<ept id="3">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Статические методы<ept id="1">&lt;/strong&gt;</ept> исполняются в контексте JS-объекта, соответствующего классу блока. Ключевое слово <bpt id="2">&lt;code&gt;</bpt>this<ept id="2">&lt;/code&gt;</ept> в статических методах блока ссылается на <bpt id="3">&lt;strong&gt;</bpt>класс блока<ept id="3">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> При разработке блоков с использованием <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept> внутренним методам блока, не предназначенным для использования извне, принято давать имена, начинающиеся с символа подчеркивания. Например, <bpt id="3">&lt;code&gt;</bpt>_onClick<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu6" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства экземпляра блока</source>
</trans-unit>
      <trans-unit id="tu7" resname="-dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">С DOM-представлением</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>params<ept id="1">&lt;/code&gt;</ept> – хэш параметров, переданных экземпляру блока при инициализации.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>domElem<ept id="1">&lt;/code&gt;</ept> – объект jQuery, содержащий ссылки на DOM-элементы, к которым <bpt id="2">&lt;a href="./i-bem-js-html-binding.ru.md"&gt;</bpt>привязан<ept id="2">&lt;/a&gt;</ept> блок.</source>
</trans-unit>
      <trans-unit id="tu10" resname="-dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Без DOM-представления</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>params<ept id="1">&lt;/code&gt;</ept> – хэш параметров, переданных экземпляру блока при инициализации.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="spec-fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Вспомогательные свойства</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Экземпляр блока предоставляет набор вспомогательных свойств:</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>__self<ept id="1">&lt;/code&gt;</ept> – для доступа к статическим свойствам и методам блока из его экземпляра.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Вызов статического метода <bpt id="2">&lt;code&gt;</bpt>staticMethod<ept id="2">&lt;/code&gt;</ept> в методе <bpt id="3">&lt;code&gt;</bpt>onEvent<ept id="3">&lt;/code&gt;</ept> экземпляра блока <bpt id="4">&lt;code&gt;</bpt>my-block<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('my-block', {
    onEvent : function() {
        this.__self.staticMethod(); // вызов статического метода
        this.doMore();
    }
}, {
    staticMethod : function() { /* ... */ }; // определение статического метода
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>__base<ept id="1">&lt;/code&gt;</ept> – для вызова реализации одноименного метода из базового класса, от которого наследуется данный (<bpt id="2">&lt;code&gt;</bpt>super call<ept id="2">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> вызов базовой реализации метода <bpt id="2">&lt;code&gt;</bpt>_onClick<ept id="2">&lt;/code&gt;</ept> базового класса <bpt id="3">&lt;code&gt;</bpt>button<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl({ block : 'my-button', baseBlock : 'button' }, {
    _onClick : function() {
        this.__base(); // вызываем базовый _onClick
        this.doMore();
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вспомогательные свойства предоставляются модулем <bpt id="1">&lt;a href="../../common.blocks/inherit/inherit.ru.md"&gt;</bpt>inherit<ept id="1">&lt;/a&gt;</ept>, реализующим механизм наследования в <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Статические свойства блока</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="spec-fields-static"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" resname="--1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Вспомогательные свойства</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В декларации статических методов блока доступны вспомогательные свойства:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>__base<ept id="1">&lt;/code&gt;</ept> – для вызова реализации одноименного метода из базового класса, от которого наследуется данный (<bpt id="2">&lt;code&gt;</bpt>super call<ept id="2">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl({ block : 'extra', baseBlock : 'my-block' }, 
    { /* ... */ },
    { 
        staticMethod: function() {
            this.__base();
            this.doMore();
        }
    }
);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" resname="---bemdom-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Статические свойства модуля BEMDOM</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>scope<ept id="1">&lt;/code&gt;</ept> – корневой элемент обрабатываемого DOM-дерева. Позволяет выполнять несколько разных версий <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept> в одном рантайме. По умолчанию содержит ссылку на jQuery объект <bpt id="3">&lt;code&gt;</bpt>body<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>doc<ept id="1">&lt;/code&gt;</ept> – ссылка на jQuery объект <bpt id="2">&lt;code&gt;</bpt>document<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>win<ept id="1">&lt;/code&gt;</ept> – ссылка на jQuery объект <bpt id="2">&lt;code&gt;</bpt>window<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-init.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Инициализация</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Инициализация блока — это создание в памяти браузера JS-объекта,<ph id="1">&lt;br /&gt;</ph>соответствующего экземпляру блока. Инициализация экземпляров блоков выполняется<ph id="2">&lt;br /&gt;</ph>методом <bpt id="3">&lt;code&gt;</bpt>init()<ept id="3">&lt;/code&gt;</ept> модуля <bpt id="4">&lt;code&gt;</bpt>i-bem__dom<ept id="4">&lt;/code&gt;</ept> на заданном фрагменте DOM-дерева.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каждому экземпляру блока можно приписать три состояния:</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">экземпляр блока не инициализирован (JS-объект не создан);</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">экземпляр блока инициализирован (JS-объект создан в памяти браузера);</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">экземпляр блока уничтожен (удалены все ссылки на JS-объект экземпляра<ph id="1">&lt;br /&gt;</ph>блока, и он может быть удален сборщиком мусора).</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> эти состояния экземпляра блока описываются с помощью служебного<ph id="2">&lt;br /&gt;</ph>модификатора <bpt id="3">&lt;code&gt;</bpt>js<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru">До инициализации экземпляр блока не имеет модификатора <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem="..." &gt;...&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru">В момент инициализации экземпляру блока устанавливается модификатор<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>inited<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem my-block_js_inited" data-bem="..."&gt;...&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Если в процессе работы удаляется фрагмент DOM-дерева (при помощи метода <bpt id="1">&lt;code&gt;</bpt>destruct<ept id="1">&lt;/code&gt;</ept> модуля <bpt id="2">&lt;code&gt;</bpt>i-bem__dom<ept id="2">&lt;/code&gt;</ept>), то вместе с ним удаляются экземпляры блоков, все HTML-элементы которых находятся в этом фрагменте. Перед удалением экземпляра блока модификатор <bpt id="3">&lt;code&gt;</bpt>js<ept id="3">&lt;/code&gt;</ept> удаляется, чтобы выполнились <bpt id="4">&lt;a href="#destruct"&gt;</bpt>деструкторы экземпляра<ept id="4">&lt;/a&gt;</ept> блока.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если экземпляр блока был <bpt id="2">&lt;a href="i-bem-js-html-binding.ru.md#distrib-block"&gt;</bpt>привязан к нескольким HTML-элементам<ept id="2">&lt;/a&gt;</ept>, блок будет существовать, пока в HTML-дереве сохраняется хотя бы один элемент, с которым он связан.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если на HTML-элементе размещено несколько экземпляров других блоков, то<ph id="1">&lt;br /&gt;</ph>инициализация одного из них (появление модификатора <bpt id="2">&lt;code&gt;</bpt>js_inited<ept id="2">&lt;/code&gt;</ept>)<ph id="3">&lt;br /&gt;</ph>не влияет на инициализацию остальных.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> На HTML-элементе инициализирован только экземпляр блока <bpt id="2">&lt;code&gt;</bpt>my-block<ept id="2">&lt;/code&gt;</ept>.<ph id="3">&lt;br /&gt;</ph>Экземпляр блока <bpt id="4">&lt;code&gt;</bpt>lazy-block<ept id="4">&lt;/code&gt;</ept> не инициализирован:</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block my-block_js_inited lazy-block i-bem"
    data-bem='{ "my-block": {}, "lazy-block": {} }' &gt;
    ...
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Наличие модификатора <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> позволяет писать разные CSS-стили для<ph id="3">&lt;br /&gt;</ph>блока в зависимости от того, инициализирован он или нет.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="constructor"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Конструктор экземпляра блока</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На изменение значений модификатора <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> можно назначать <bpt id="2">&lt;a href="i-bem-js-states.ru.md#mods-api-trigger"&gt;</bpt>триггеры<ept id="2">&lt;/a&gt;</ept> так же, как и для любых других модификаторов блока.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Триггер на установку модификатора <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> в значение <bpt id="2">&lt;code&gt;</bpt>inited<ept id="2">&lt;/code&gt;</ept> выполняется<ph id="3">&lt;br /&gt;</ph>при создании блока. Этот триггер можно считать <bpt id="4">&lt;strong&gt;</bpt>конструктором экземпляра блока<ept id="4">&lt;/strong&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod: {
    'js': {
        'inited': function() { /* ... */ } // конструктор экземпляра блока
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="destruct"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Деструктор экземпляра блока</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Моментом удаления блока является момент уничтожения всех ссылок на<ph id="1">&lt;br /&gt;</ph>JS-объект блока, после чего он может быть удален из памяти браузера<ph id="2">&lt;br /&gt;</ph>сборщиком мусора.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Триггер на удаление модификатора <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> (установку в пустое значение<ph id="2">&lt;br /&gt;</ph><bpt id="3">&lt;code&gt;</bpt>''<ept id="3">&lt;/code&gt;</ept>) выполняется перед удалением блока. Такой триггер можно считать<ph id="4">&lt;br /&gt;</ph><bpt id="5">&lt;strong&gt;</bpt>деструктором экземпляра блока<ept id="5">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>onSetMod: {
    'js': {
        '': function() { /* ... */ } // деструктор экземпляра блока
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init-wave"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Волны инициализации</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Инициализация экземпляров блоков, присутствующих на странице, не<ph id="1">&lt;br /&gt;</ph>обязательно происходит одновременно. Блоки могут динамически добавляться в ходе<ph id="2">&lt;br /&gt;</ph>работы, инициализироваться по запросу или событию.<ph id="3">&lt;br /&gt;</ph>Инициализация очередной группы блоков называется <bpt id="4">&lt;strong&gt;</bpt>волной инициализации<ept id="4">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Новая волна инициализации создается в следующих случаях:</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#init-auto"&gt;</bpt>Автоматическая инициализация блоков по событию <bpt id="2">&lt;code&gt;</bpt>domReady<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#init-live"&gt;</bpt>Инициализация блока по событию<ept id="1">&lt;/a&gt;</ept> (ленивая инициализация);</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#init-ajax"&gt;</bpt>Явный вызов инициализации блоков на указанном фрагменте DOM-дерева<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init-auto"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Автоматическая инициализация</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фреймворк <bpt id="1">&lt;em&gt;</bpt>i-bem.js<ept id="1">&lt;/em&gt;</ept> позволяет автоматически инициализировать блоки с DOM-представлением в момент наступления DOM-события <bpt id="2">&lt;code&gt;</bpt>domReady<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При автоматической инициализации в памяти браузера будут созданы JS-объекты для всех DOM-узлов, содержащих <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> в атрибуте <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept>. Инициализация выполняется функцией <bpt id="3">&lt;code&gt;</bpt>init<ept id="3">&lt;/code&gt;</ept> модуля <bpt id="4">&lt;a href="https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/" [#$tu40]&gt;</bpt>i-bem__dom<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Включить автоматическую инициализацию можно, указав блок <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> с модификатором <bpt id="2">&lt;code&gt;</bpt>init<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>auto<ept id="3">&lt;/code&gt;</ept> в файле зависимостей <bpt id="4">&lt;code&gt;</bpt>.deps.js<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример файла<ept id="1">&lt;/strong&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>.deps.js<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    shouldDeps: [
        {
            block: 'i-bem',
            elem: 'dom',
            mods: { 'init': 'auto' }
        }
    ]
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;a href="../../common.blocks/page/page.ru.md"&gt;</bpt>page<ept id="1">&lt;/a&gt;</ept> уже содержит в зависимостях <bpt id="2">&lt;code&gt;</bpt>i-bem__dom_init_auto<ept id="2">&lt;/code&gt;</ept>, поэтому если он используется в проекте, не требуется ничего дополнительно подключать.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Блоки, для которых задана ленивая инициализация, не будут инициализированы автоматически.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init-live"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Инициализация по событию (ленивая инициализация)</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если на странице размещено много экземпляров блоков, автоматическая инициализация<ph id="1">&lt;br /&gt;</ph>всех блоков в момент загрузки страницы нежелательна, так как она<ph id="2">&lt;br /&gt;</ph>увеличивает время загрузки и объем памяти, затрачиваемой браузером.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Удобнее инициализировать JS-объекты только в тот момент, когда их функциональность потребуется<ph id="1">&lt;br /&gt;</ph>пользователю: например, по клику на блоке. Такая инициализация называется <bpt id="2">&lt;strong&gt;</bpt>ленивой<ept id="2">&lt;/strong&gt;</ept> или <bpt id="3">&lt;strong&gt;</bpt>live-инициализацией<ept id="3">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для описания условий ленивой инициализации в декларации зарезервировано статическое свойство <bpt id="1">&lt;code&gt;</bpt>live<ept id="1">&lt;/code&gt;</ept>. Свойство <bpt id="2">&lt;code&gt;</bpt>live<ept id="2">&lt;/code&gt;</ept> может иметь значения следующих типов:</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>Boolean<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> — экземпляры блоков данного класса будут инициализированы только при попытке получить соответствующий экземпляр (см. раздел «<bpt id="2">&lt;a href="./i-bem-js-interact.ru.md"&gt;</bpt>Взаимодействие блоков<ept id="2">&lt;/a&gt;</ept>»).</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name,
    {
        onSetMod: {
            'js': {
                'inited': function() { /* ... */ } // этот код будет выполняться
                                                   // при первом обращении к экземпляру блока
            }
        }
    },
    { live: true } // статические методы и свойства
));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>false<ept id="1">&lt;/code&gt;</ept> — позволяет отменить ленивую инициализацию блоков, заданную на другом уровне переопределения.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>Function<ept id="1">&lt;/code&gt;</ept> – функция, выполняемая перед инициализацией <bpt id="2">&lt;strong&gt;</bpt>первого экземпляра<ept id="2">&lt;/strong&gt;</ept> блока заданного класса. Если функция возвращает значение <bpt id="3">&lt;code&gt;</bpt>false<ept id="3">&lt;/code&gt;</ept>, экземпляры блока будут инициализированы <bpt id="4">&lt;a href="#init-auto"&gt;</bpt>автоматически<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom', 'ua'], function(provide, BEMDOM, ua) {

provide(BEMDOM.decl(this.name, {
    onSetMod : {
        'js' : {
            'inited' : function() {
                // выполнится при первом обращении к экземпляру блока
            }
        }
    }
}, {
    live : function() { // выполнится перед инициализацией первого экземпляра блока
        if(ua.msie &amp;&amp; ua.version &lt; 9) { 
                          // отмена ленивой инициализации блока 
            return false; // для старых версий Internet Explorer
        }
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Ленивая инициализация может быть отменена для конкретного экземпляра блока. Для этого нужно указать в <bpt id="2">&lt;a href="./i-bem-js-params.ru.md"&gt;</bpt>параметрах<ept id="2">&lt;/a&gt;</ept> HTML-элемента, к которому привязан экземпляр блока <bpt id="3">&lt;code&gt;</bpt>data-bem='{"live": false}'<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы инициализировать экземпляры блока по наступлению DOM-события или БЭМ-события, в теле функции следует выполнить подписку на <bpt id="1">&lt;a href="i-bem-js-events.ru.md#delegated-events"&gt;</bpt>делегированные события<ept id="1">&lt;/a&gt;</ept> или воспользоваться <bpt id="2">&lt;a href="#init-live-helpers"&gt;</bpt>хелпером<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Экземпляры блока <bpt id="2">&lt;code&gt;</bpt>my-block<ept id="2">&lt;/code&gt;</ept> будут инициализированы по DOM-событию <bpt id="3">&lt;code&gt;</bpt>click<ept id="3">&lt;/code&gt;</ept> на DOM-узле блока. По каждому DOM-событию <bpt id="4">&lt;code&gt;</bpt>click<ept id="4">&lt;/code&gt;</ept> будет вызываться метод экземпляра блока <bpt id="5">&lt;code&gt;</bpt>_onClick<ept id="5">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    onSetMod: {
        'js': {
            'inited': function() { /* ... */ } // выполняется при первом DOM-событии "click"
        }
    },

    _onClick: function(e) { /* ... */ } // выполняется при каждом DOM-событии "click"
}, {
    live: function() {
        this.liveBindTo('click', function(e) {
            this._onClick(e);   // в момент клика будет создан экземпляр 
                                // блока и вызван его метод _onClick
        });
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Свойство <bpt id="2">&lt;code&gt;</bpt>live<ept id="2">&lt;/code&gt;</ept> относится к статическим методам класса блока. Поэтому даже если оно задано в декларации блока с определенным модификатором, <bpt id="3">&lt;code&gt;</bpt>live<ept id="3">&lt;/code&gt;</ept> будет применено ко всем блокам данного класса вне зависимости от модификаторов.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init-live-helpers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Хелперы для инициализации по событию</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для упрощения инициализации по событию в контексте экземпляра блока зарезервирован набор методов-хелперов, позволяющий подписываться на следующие типы событий:</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru">DOM-события:
</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>liveBindTo([elemName], event, [callback])<ept id="1">&lt;/code&gt;</ept> — подписка с отложенной инициализацией на событие на DOM-узле блока или его элементах. Блок будет инициализирован по первому событию <bpt id="2">&lt;code&gt;</bpt>event<ept id="2">&lt;/code&gt;</ept>. Функция-обработчик <bpt id="3">&lt;code&gt;</bpt>callback<ept id="3">&lt;/code&gt;</ept> будет вызываться по событию <bpt id="4">&lt;code&gt;</bpt>event<ept id="4">&lt;/code&gt;</ept> и после инициализации блока.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>liveUnbindFrom([elemName], event, [callback])<ept id="1">&lt;/code&gt;</ept> — удаление подписки с отложенной инициализацией на событие на DOM-узле блока или его элементах.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>liveInitOnEvent([elemName], event, callback)<ept id="1">&lt;/code&gt;</ept> — инициализация по событию на DOM-узле блока или его элементах.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-li" xml:space="preserve">
<source xml:lang="ru">БЭМ-события:
</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>liveInitOnBlockEvent(event, blockName, callback)<ept id="1">&lt;/code&gt;</ept> — инициализация по БЭМ-событию экземпляра другого блока, размещенного на DOM-узле текущего экземпляра блока.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>liveInitOnBlockInsideEvent(event, blockName, [callback])<ept id="1">&lt;/code&gt;</ept> — инициализация по БЭМ-событию экземпляра другого блока, вложенного в DOM-узел текущего экземпляра блока.</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, блок <bpt id="1">&lt;code&gt;</bpt>menu<ept id="1">&lt;/code&gt;</ept> инициализируется по <bpt id="2">&lt;strong&gt;</bpt>БЭМ-событию<ept id="2">&lt;/strong&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>click<ept id="3">&lt;/code&gt;</ept> вложенного в него блока <bpt id="4">&lt;code&gt;</bpt>menu-item<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('menu', ['i-bem__dom', 'menu-item'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    _onItemClick : function(e, data) { 
        // функция-обработчик БЭМ-события click на вложенных "menu-item"
    }
}, {
    live : function() {
        this.liveInitOnBlockInsideEvent('click', 'menu-item', function(e, data) {
            this._onItemClick(e, data);
        });
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init-ajax"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" resname="----dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Инициализация блоков на фрагменте DOM-дерева</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Процедура инициализации JS-объектов может быть вызвана<ph id="1">&lt;br /&gt;</ph>явно для указанного фрагмента DOM-дерева. Часто такая необходимость<ph id="2">&lt;br /&gt;</ph>возникает при разработке AJAX-интерфейсов, когда нужно <bpt id="3">&lt;a href="i-bem-js-dom.ru.md#dynamic"&gt;</bpt>динамически встроить<ept id="3">&lt;/a&gt;</ept> в страницу новые экземпляры блоков либо обновить существующие.</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> следующие функции выполняют динамическую инициализацию блоков:</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>init<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>destruct<ept id="2">&lt;/code&gt;</ept> – Инициализация/уничтожение блоков на указанном фрагменте DOM-дерева.</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>update<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>replace<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>append<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>prepend<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>before<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>after<ept id="6">&lt;/code&gt;</ept> – добавление/замена фрагмента DOM-дерева с одновременной инициализацией блоков на обновленном фрагменте.</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример использования функций, выполняющих динамическую инициализацию см. в разделе «<bpt id="1">&lt;a href="i-bem-js-dom.ru.md#dynamic"&gt;</bpt>Динамическое обновление блоков и элементов в DOM-дереве<ept id="1">&lt;/a&gt;</ept>»</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="destruct-dom"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" resname="----dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Удаление блоков на фрагменте DOM-дерева</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Как и процедура инициализации блоков, процедура удаления может быть вызвана явно для заданного фрагмента DOM-дерева. Например, для динамического удаления экземпляров блоков со страницы при разработке AJAX-интерфейсов.</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Явный вызов процедуры гарантирует корректное удаление:</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-li" xml:space="preserve">
<source xml:lang="ru">вложенных DOM-узлов;</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блоков, примешанных к другим блокам.</source>
</trans-unit>
      <trans-unit id="tu87" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для явного вызова процедуры удаления служит статический метод <bpt id="1">&lt;code&gt;</bpt>BEMDOM.destruct<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод принимает:</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ctx<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{jQuery}<ept id="2">&lt;/code&gt;</ept> – корневой DOM-элемент. Удаляется со всем вложенными DOM-узлами.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>excludeSelf<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept> – не удалять корневой DOM-элемент, если значение <bpt id="3">&lt;code&gt;</bpt>true<ept id="3">&lt;/code&gt;</ept>. По умолчанию <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="init-bem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" resname="-----dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Инициализация и удаление блоков без DOM-представления</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для создания JS-объектов блока без DOM-представления (не привязанного к HTML-элементу) служит метод <bpt id="1">&lt;code&gt;</bpt>BEM.create<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод принимает:</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>name<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String|Object}<ept id="2">&lt;/code&gt;</ept> – имя блока;</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращает экземпляр блока указанного класса.</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Удаление<ept id="1">&lt;/strong&gt;</ept> экземпляров блоков без DOM-представления не может быть<ph id="2">&lt;br /&gt;</ph>выполнено автоматически. Блоки без DOM-представления представляют собой обычные<ph id="3">&lt;br /&gt;</ph>JS-объекты и удаляются в момент удаления всех ссылок на объект блока.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-states.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="states"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Состояния блока</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Проектируя динамический блок в стиле БЭМ, нужно представить всю логику<ph id="1">&lt;br /&gt;</ph>изменений, происходящих в нем, как набор <bpt id="2">&lt;strong&gt;</bpt>состояний<ept id="2">&lt;/strong&gt;</ept> блока. Тогда<ph id="3">&lt;br /&gt;</ph>поведение блока определяется <bpt id="4">&lt;strong&gt;</bpt>триггерами<ept id="4">&lt;/strong&gt;</ept> — callback-функциями, которые<ph id="5">&lt;br /&gt;</ph>выполняются при переходе блока из одного состояния в другое.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Это позволяет писать код блока в декларативном стиле как набор утверждений вида: <bpt id="1">&lt;code&gt;</bpt>описание состояния<ept id="1">&lt;/code&gt;</ept> — <bpt id="2">&lt;code&gt;</bpt>действия, выполняемые при переходе в данное состояние<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu6" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Согласно БЭМ-методологии, состояние блока и его элементов описывается<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;strong&gt;</bpt>модификаторами<ept id="2">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает, в каком из возможных состояний находится блок. Модификатор представляет собой пару: <bpt id="1">&lt;strong&gt;</bpt>имя<ept id="1">&lt;/strong&gt;</ept> и <bpt id="2">&lt;strong&gt;</bpt>значение<ept id="2">&lt;/strong&gt;</ept>. Список допустимых значений модификатора описывает набор состояний блока. Например, для описания размеров блока<ph id="3">&lt;br /&gt;</ph>можно использовать модификатор <bpt id="4">&lt;code&gt;</bpt>size<ept id="4">&lt;/code&gt;</ept> с допустимыми значениями <bpt id="5">&lt;code&gt;</bpt>s<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>m<ept id="6">&lt;/code&gt;</ept> и<ph id="7">&lt;br /&gt;</ph><bpt id="8">&lt;code&gt;</bpt>l<ept id="8">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Простой модификатор<ept id="1">&lt;/strong&gt;</ept> — частный случай, когда важно только наличие<ph id="2">&lt;br /&gt;</ph>или отсутствие модификатора у блока, а его значение несущественно. Например, модификатор, описывающий состояние «отключен»: <bpt id="3">&lt;code&gt;</bpt>disabled<ept id="3">&lt;/code&gt;</ept>. Модификатор с неуказанным значением <bpt id="4">&lt;code&gt;</bpt>i-bem.js<ept id="4">&lt;/code&gt;</ept> интерпретирует как булев и автоматически присваивает ему значение <bpt id="5">&lt;code&gt;</bpt>true<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каждому блоку можно установить один или несколько модификаторов. Блок<ph id="1">&lt;br /&gt;</ph>может не иметь модификаторов. Список допустимых модификаторов и их<ph id="2">&lt;br /&gt;</ph>значений определяет разработчик блока.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификаторы устанавливаются при <bpt id="1">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>инициализации экземпляра блока<ept id="1">&lt;/a&gt;</ept> (если модификаторы и их значения указаны в атрибуте <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept> соответствующего HTML-элемента).</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификаторы могут изменяться как в процессе работы блока (например, как реакция на <bpt id="1">&lt;a href="i-bem-js-events.ru.md#dom-events"&gt;</bpt>DOM-события<ept id="1">&lt;/a&gt;</ept> блока), там и по запросу из других блоков (см. раздел <bpt id="2">&lt;a href="./i-bem-js-interact.ru.md"&gt;</bpt>Взаимодействие блоков<ept id="2">&lt;/a&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При установке, удалении и изменении значений модификаторов, выполняются <bpt id="1">&lt;a href="#mods-api-trigger"&gt;</bpt>триггеры<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если модификаторы были заданы в HTML-элементе блока до момента его инициализации, триггеры на установку данных модификаторов <bpt id="2">&lt;strong&gt;</bpt>не выполняются<ept id="2">&lt;/strong&gt;</ept>. Экземпляр блока в этом случае получает начальное состояние, а не меняет его.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="mods-api"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Управление модификаторами</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Методы экземпляра блока для работы с модификаторами:</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>hasMod([elem], modName, [modVal])<ept id="1">&lt;/code&gt;</ept> – проверяет наличие модификатора. Возвращает <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>, если модификатор <bpt id="3">&lt;code&gt;</bpt>modName<ept id="3">&lt;/code&gt;</ept> установлен.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>getMod([elem], modName)<ept id="1">&lt;/code&gt;</ept> – возвращает значение модификатора <bpt id="2">&lt;code&gt;</bpt>modName<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>getMods([elem], [...modNames])<ept id="1">&lt;/code&gt;</ept> – возвращает хэш со значениями всех модификаторов. Можно получить значения нескольких модификаторов, передав их имена отдельными аргументами (<bpt id="2">&lt;code&gt;</bpt>[...modNames]<ept id="2">&lt;/code&gt;</ept>). Для получения модификаторов элемента можно указать аргумент <bpt id="3">&lt;code&gt;</bpt>[elem]<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>setMod([elem], modName, [modVal=true])<ept id="1">&lt;/code&gt;</ept> – устанавливает модификатор <bpt id="2">&lt;code&gt;</bpt>modName<ept id="2">&lt;/code&gt;</ept>. Если значение <bpt id="3">&lt;code&gt;</bpt>modVal<ept id="3">&lt;/code&gt;</ept> не задано, будет установлен <bpt id="4">&lt;em&gt;</bpt>простой модификатор<ept id="4">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>toggleMod([elem], modName, modVal1, [modVal2], [condition])<ept id="1">&lt;/code&gt;</ept> – переключает значения модификатора. Если передан аргумент <bpt id="2">&lt;code&gt;</bpt>[modVal2]<ept id="2">&lt;/code&gt;</ept>, переключение происходит между <bpt id="3">&lt;code&gt;</bpt>modVal1<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>modVal2<ept id="4">&lt;/code&gt;</ept>, если нет, <bpt id="5">&lt;code&gt;</bpt>modVal1<ept id="5">&lt;/code&gt;</ept> будет поочередно устанавливаться и удаляться. Аргумент <bpt id="6">&lt;code&gt;</bpt>condition<ept id="6">&lt;/code&gt;</ept> в значении <bpt id="7">&lt;code&gt;</bpt>true<ept id="7">&lt;/code&gt;</ept> позволяет инвертировать порядок переключения значений модификатора.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>delMod([elem], modName)<ept id="1">&lt;/code&gt;</ept> – удаляет модификатор <bpt id="2">&lt;code&gt;</bpt>modName<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Метод <bpt id="2">&lt;code&gt;</bpt>changeColor<ept id="2">&lt;/code&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>square<ept id="3">&lt;/code&gt;</ept> переключает модификатор <bpt id="4">&lt;code&gt;</bpt>color<ept id="4">&lt;/code&gt;</ept> между значениями <bpt id="5">&lt;code&gt;</bpt>green<ept id="5">&lt;/code&gt;</ept> и <bpt id="6">&lt;code&gt;</bpt>red<ept id="6">&lt;/code&gt;</ept>, если у блока выставлен модификатор <bpt id="7">&lt;code&gt;</bpt>has-color<ept id="7">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('square', {
    changeColor : function(e) {
        if(this.hasMod('has-color')) {
            this.toggleMod('color', 'green', 'red');
        }
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Эти же методы позволяют управлять модификаторами элементов блока. Для этого первым аргументом передается ссылка на <bpt id="1">&lt;strong&gt;</bpt>DOM-узел элемента<ept id="1">&lt;/strong&gt;</ept> (а не имя элемента).</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Блок <bpt id="2">&lt;code&gt;</bpt>searchbox<ept id="2">&lt;/code&gt;</ept> по клику может выставлять своему элементу <bpt id="3">&lt;code&gt;</bpt>input<ept id="3">&lt;/code&gt;</ept> простой модификатор <bpt id="4">&lt;code&gt;</bpt>clean<ept id="4">&lt;/code&gt;</ept> (подразумеваемое значение — <bpt id="5">&lt;code&gt;</bpt>true<ept id="5">&lt;/code&gt;</ept>):</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('searchbox', {
    _onClick: function() {
        this.setMod(this.elem('input'), 'clean');
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Для изменения значений модификаторов используйте API. Не следует устанавливать модификаторы, самостоятельно изменяя CSS-классы соответствующего DOM-узла.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Полное описание API для управления модификаторами приведено в разделе <bpt id="1">&lt;a href="https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/" [#$tu31]&gt;</bpt>JSDoc<ept id="1">&lt;/a&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="mods-api-trigger"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Триггеры на установку модификаторов</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Выполнение триггеров на установку модификаторов разбито на две фазы:</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>До установки модификатора<ept id="1">&lt;/strong&gt;</ept>. Эта фаза зарезервирована для<ph id="2">&lt;br /&gt;</ph>возможности <bpt id="3">&lt;strong&gt;</bpt>отменить<ept id="3">&lt;/strong&gt;</ept> установку модификатора. Если хотя бы один<ph id="4">&lt;br /&gt;</ph>из триггеров, выполняемых в этой фазе, вернет <bpt id="5">&lt;code&gt;</bpt>false<ept id="5">&lt;/code&gt;</ept>,<ph id="6">&lt;br /&gt;</ph>установки модификатора не произойдет.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>После установки модификатора<ept id="1">&lt;/strong&gt;</ept>. Триггеры, выполняемые в этой<ph id="2">&lt;br /&gt;</ph>фазе, уже не могут отменить установку модификаторов.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Триггеры могут быть привязаны к следующим типам изменений значений модификаторов:</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru">установка <bpt id="1">&lt;em&gt;</bpt>любого<ept id="1">&lt;/em&gt;</ept> модификатора в <bpt id="2">&lt;em&gt;</bpt>любое<ept id="2">&lt;/em&gt;</ept> значение;</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru">установка <bpt id="1">&lt;em&gt;</bpt>конкретного<ept id="1">&lt;/em&gt;</ept> модификатора <bpt id="2">&lt;code&gt;</bpt>modName<ept id="2">&lt;/code&gt;</ept> в <bpt id="3">&lt;em&gt;</bpt>любое<ept id="3">&lt;/em&gt;</ept> значение (в том числе<ph id="4">&lt;br /&gt;</ph>установка простого модификатора в значение <bpt id="5">&lt;code&gt;</bpt>true<ept id="5">&lt;/code&gt;</ept>);</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">установка <bpt id="1">&lt;em&gt;</bpt>конкретного<ept id="1">&lt;/em&gt;</ept> модификатора <bpt id="2">&lt;code&gt;</bpt>modName<ept id="2">&lt;/code&gt;</ept> в <bpt id="3">&lt;em&gt;</bpt>конкретное<ept id="3">&lt;/em&gt;</ept> значение <bpt id="4">&lt;code&gt;</bpt>modVal<ept id="4">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru">установка модификатора в значение <bpt id="1">&lt;code&gt;</bpt>''<ept id="1">&lt;/code&gt;</ept> (пустая строка), что<ph id="2">&lt;br /&gt;</ph>эквивалентно удалению модификатора или установке простого<ph id="3">&lt;br /&gt;</ph>модификатора в значение <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При установке модификатора <bpt id="1">&lt;code&gt;</bpt>modName<ept id="1">&lt;/code&gt;</ept> в значение <bpt id="2">&lt;code&gt;</bpt>modVal<ept id="2">&lt;/code&gt;</ept> триггеры<ph id="3">&lt;br /&gt;</ph>каждой фазы (если они определены) вызываются в том порядке, в котором они<ph id="4">&lt;br /&gt;</ph>перечислены в приведенном выше списке событий (от общего к частному).</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Таким образом, при определении триггера пользователь указывает:</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru">фазу выполнения (до или после установки модификатора);</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-li" xml:space="preserve">
<source xml:lang="ru">тип события (имя и устанавливаемое значение модификатора).</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="mods-api-trigger-phase"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" resname="--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Фазы выполнения</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Дополнительная фаза, предшествующая установке модификатора, позволяет<ph id="1">&lt;br /&gt;</ph>произвести некоторые проверки без риска повлиять на логику, связанную с установкой модификатора. Например, если существуют взаимоисключающие модификаторы, перед установкой одного из них логично проверить, не установлен ли другой.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример<ept id="1">&lt;/strong&gt;</ept>: модификатор <bpt id="2">&lt;code&gt;</bpt>focused<ept id="2">&lt;/code&gt;</ept> не будет установлен блоку <bpt id="3">&lt;code&gt;</bpt>searchbox<ept id="3">&lt;/code&gt;</ept>, если у него есть модификатор <bpt id="4">&lt;code&gt;</bpt>disabled<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('searchbox', {
    beforeSetMod : {
        'focused' : {
            'true' : function() {
                return !this.hasMod('disabled');
            }
        }
    },

    onSetMod : {
        'focused' : {
            'true' : function() { /* ... */ }
        }
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если триггер для фазы, предшествующей установке (<bpt id="1">&lt;code&gt;</bpt>beforeSetMod<ept id="1">&lt;/code&gt;</ept>), возвращает <bpt id="2">&lt;code&gt;</bpt>false<ept id="2">&lt;/code&gt;</ept>, установка модификатора не производится.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подробнее об использовании триггеров читайте в разделе «<bpt id="1">&lt;a href="i-bem-js-decl.ru.md#trigger-decl"&gt;</bpt>Декларация триггеров<ept id="1">&lt;/a&gt;</ept>».</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Триггер на установку модификатора <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> в значение <bpt id="3">&lt;code&gt;</bpt>inited<ept id="3">&lt;/code&gt;</ept> является конструктором экземпляра блока, а в значение <bpt id="4">&lt;code&gt;</bpt>''<ept id="4">&lt;/code&gt;</ept> – деструктором экземпляра блока. Подробности смотрите в разделе «<bpt id="5">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>Инициализация<ept id="5">&lt;/a&gt;</ept>».</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-extras.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="docs"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Что дальше?</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Информацию о БЭМ-методологии, инструментарии и новостях в мире БЭМ смотрите на сайте <bpt id="1">&lt;a href="https://ru.bem.info/" [#$tu4]&gt;</bpt>bem.info<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Полную информацию обо всех методах API <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> можно найти в разделе <bpt id="2">&lt;a href="https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/" [#$tu6]&gt;</bpt>JSDoc<ept id="2">&lt;/a&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>i-bem<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/forum/</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обменяться опытом и задать вопрос опытным пользователям и разработчикам <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> можно на <bpt id="2">&lt;a href="https://ru.bem.info/forum/" [#$tu8]&gt;</bpt>форуме<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примеры использования <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> и дополнительную информацию смотрите в статьях:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/articles/bem-js-main-terms/</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/articles/bem-js-main-terms/" [#$tu11]&gt;</bpt>JavaScript по БЭМ: основные понятия<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tutorials/bem-js-tutorial/</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tutorials/bem-js-tutorial/" [#$tu13]&gt;</bpt>Справочное руководство по i-bem.js<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tutorials/start-with-project-stub/</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tutorials/start-with-project-stub/" [#$tu15]&gt;</bpt>Создаем свой проект на БЭМ<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/articles/firm-card-story/</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/articles/firm-card-story/" [#$tu17]&gt;</bpt>БЭМ-приложение на Leaflet и API 2GIS<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-interact.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="ibc"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Взаимодействие блоков</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках БЭМ-методологии блоки следует разрабатывать так, чтобы свести к минимуму зависимость состояний одних блоков от других. Однако на практике идеал полной независимости блоков недостижим.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Взаимодействие блоков может быть реализовано:</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">с помощью подписки на <bpt id="1">&lt;a href="i-bem-js-events.ru.md#bem-events"&gt;</bpt>БЭМ-события<ept id="1">&lt;/a&gt;</ept> других экземпляров<ph id="2">&lt;br /&gt;</ph>блоков или подписки на <bpt id="3">&lt;a href="i-bem-js-events.ru.md#bem-events-delegated"&gt;</bpt>делегированные БЭМ-события<ept id="3">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">с помощью непосредственного вызова методов других экземпляров<ph id="1">&lt;br /&gt;</ph>блоков или статических методов класса другого блока;</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">через проверку состояний одного блока из другого;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">через <bpt id="1">&lt;em&gt;</bpt>каналы событий<ept id="1">&lt;/em&gt;</ept> (например с помощью элемента <bpt id="2">&lt;a href="../../common.blocks/events/__channels/events__channels.ru.md"&gt;</bpt>channels<ept id="2">&lt;/a&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>events<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Не используйте <bpt id="2">&lt;a href="i-bem-js-events.ru.md#dom-events"&gt;</bpt>DOM-события<ept id="2">&lt;/a&gt;</ept> для<ph id="3">&lt;br /&gt;</ph>организации взаимодействия между блоками. DOM-события предназначены<ph id="4">&lt;br /&gt;</ph>только для реализации внутренних процедур блока.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для реализации взаимодействия блоков <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> предоставляет API:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="i-bem-js-dom.ru.md#api-find"&gt;</bpt>Поиск экземпляров блоков в DOM-дереве<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="i-bem-js-html-binding.ru.md#api-nodom"&gt;</bpt>Доступ к экземплярам блоков без DOM-представления<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#api-calss"&gt;</bpt>Доступ к классам блоков<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="api-class"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Доступ к классам блоков</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JS-компоненты, соответствующие классам блоков, можно получить через <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu17]&gt;</bpt>модульную систему<ept id="1">&lt;/a&gt;</ept>. Это же верно и для блоков <bpt id="2">&lt;a href="i-bem-js-html-binding.ru.md#i-blocks"&gt;</bpt>без DOM-представления<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступ к классам блоков необходим для:</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="i-bem-js-events.ru.md#bem-events-delegated"&gt;</bpt>Делегирования БЭМ-событий<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="i-bem-js-decl.ru.md#inher-over"&gt;</bpt>Доопределения<ept id="1">&lt;/a&gt;</ept> декларации блока.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вызова статических методов класса.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Вызов статического метода <bpt id="2">&lt;code&gt;</bpt>close<ept id="2">&lt;/code&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>popup<ept id="3">&lt;/code&gt;</ept> позволяет закрыть все попапы на странице:</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('switcher', ['i-bem__dom', 'popup'], function(provide, BEMDOM, Popup) {

provide(BEMDOM.decl(this.name,
    {
        onSetMod : {
            'popup' : {
                'disabled' : function() {
                    Popup.close();
                }
            }
        }
    }
));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-html-binding.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="html"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="-js---html-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Привязка JS-блоков к HTML</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">JavaScript-компоненты в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> служат для «оживления» HTML-элементов<ph id="2">&lt;br /&gt;</ph>страницы. Типовая задача JS-блока — установка реакции на события внутри HTML-фрагмента.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> первичным «каркасом» является HTML-дерево документа. В нем размечаются точки, к которым привязаны интерактивные элементы интерфейса — JS-блоки.<ph id="2">&lt;br /&gt;</ph>Точка привязки JS-блока — HTML-элемент (DOM-узел), в атрибуте <bpt id="3">&lt;code&gt;</bpt>class<ept id="3">&lt;/code&gt;</ept> которого<ph id="4">&lt;br /&gt;</ph>указано имя блока, а в атрибуте <bpt id="5">&lt;code&gt;</bpt>data-bem<ept id="5">&lt;/code&gt;</ept> — <bpt id="6">&lt;a href="./i-bem-js-params.ru.md"&gt;</bpt>параметры блока<ept id="6">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При загрузке страницы в браузере выполняется <bpt id="1">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>инициализация блоков<ept id="1">&lt;/a&gt;</ept>. В ходе нее создаются экземпляры блоков — JS-объекты всех блоков, упомянутых в классах HTML-элементов страницы. JS-объект, привязанный к HTML-элементу,<ph id="2">&lt;br /&gt;</ph>обрабатывает происходящие на нем <bpt id="3">&lt;a href="i-bem-js-events.ru.md#dom-events"&gt;</bpt>DOM-события<ept id="3">&lt;/a&gt;</ept> и хранит состояния данного экземпляра блока.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такой способ привязки JavaScript-компонентов к HTML имеет следующие преимущества:</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">естественная деградация интерфейса на клиентах с отключенным JavaScript;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">прогрессивный рендеринг — возможность начинать отрисовку элементов интерфейса до окончания загрузки всех данных страницы (например, изображений).</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="html-syntax"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Механизм привязки блоков</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы привязать блок к HTML-элементу (например, <bpt id="1">&lt;code&gt;</bpt>&lt;div&gt;...&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept>), необходимо:</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Декларировать блок в <bpt id="2">&lt;code&gt;</bpt>i-bem<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/strong&gt;</ept>.<ph id="3">&lt;br/&gt;</ph><ph id="4">&lt;br /&gt;</ph>Cоздать модуль <bpt id="5">&lt;a href="https://github.com/ymaps/modules" [#$tu13]&gt;</bpt>ym<ept id="5">&lt;/a&gt;</ept>, содержащий JS-реализацию блока (<bpt id="6">&lt;a href="./i-bem-js-decl.ru.md"&gt;</bpt>декларацию<ept id="6">&lt;/a&gt;</ept>). Для этого строка с именем блока передается первым аргументом методам <bpt id="7">&lt;code&gt;</bpt>modules.define<ept id="7">&lt;/code&gt;</ept> и <bpt id="8">&lt;code&gt;</bpt>BEMDOM.decl<ept id="8">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom'], function(provide, BEMDOM){

provide(BEMDOM.decl(this.name,
    {
        /* методы экземпляра */
    },
    {
        /* статические методы */
    }
));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На уровне проекта каждый модуль <bpt id="1">&lt;code&gt;</bpt>ym<ept id="1">&lt;/code&gt;</ept> обычно хранится как отдельный файл технологии <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept>. Например, декларация <bpt id="3">&lt;code&gt;</bpt>my-block<ept id="3">&lt;/code&gt;</ept> в проекте может храниться как <bpt id="4">&lt;code&gt;</bpt>my-block/my-block.js<ept id="4">&lt;/code&gt;</ept> – файл <bpt id="5">&lt;code&gt;</bpt>my-block.js<ept id="5">&lt;/code&gt;</ept>, вложенный в папку <bpt id="6">&lt;code&gt;</bpt>my-block<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Отметить блок в HTML-дереве<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br/&gt;</ph><ph id="3">&lt;br /&gt;</ph>Добавить HTML-элементу атрибут <bpt id="4">&lt;code&gt;</bpt>class<ept id="4">&lt;/code&gt;</ept> с именем блока.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt> &lt;div class="my-block"&gt;...&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Разрешить инициализацию экземпляра блока<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br/&gt;</ph><ph id="3">&lt;br /&gt;</ph>Включить класс <bpt id="4">&lt;code&gt;</bpt>i-bem<ept id="4">&lt;/code&gt;</ept> в список классов HTML-элемента. Наличие этого класса укажет фреймворку, что HTML-элемент связан с JS-блоком.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem"&gt;...&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Передать параметры экземпляру блока<ept id="1">&lt;/strong&gt;</ept>.<ph id="2">&lt;br/&gt;</ph><ph id="3">&lt;br /&gt;</ph>Поместить параметры блока в атрибут <bpt id="4">&lt;code&gt;</bpt>data-bem<ept id="4">&lt;/code&gt;</ept>. Параметры блока записываются в формате JSON и представляют собой хэш вида: <bpt id="5">&lt;code&gt;</bpt>имя блока : хэш параметров<ept id="5">&lt;/code&gt;</ept>. Параметры будут переданы экземпляру блока <bpt id="6">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>в момент инициализации<ept id="6">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem='{ "my-block": { "name": "ya" } }'&gt;...&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="html-conection"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" resname="---html--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Связь блоков с HTML-элементами</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Одному HTML-элементу не обязательно должен соответствовать один экземпляр блока. Возможны следующие типы связи между блоками и HTML-элементами:</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#html-simple"&gt;</bpt>Один HTML-элемент — один JS-блок<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#html-mixes"&gt;</bpt>Один HTML-элемент — несколько JS-блоков<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="#distrib-block"&gt;</bpt>Один JS-блок на нескольких HTML-элементах<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="html-simple"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" resname="-html---js--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Один HTML-элемент — один JS-блок</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Самый простой и распространенный способ привязки блоков к HTML.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> HTML-элемент <bpt id="2">&lt;code&gt;</bpt>div<ept id="2">&lt;/code&gt;</ept>, на котором размещен блок <bpt id="3">&lt;code&gt;</bpt>my-block<ept id="3">&lt;/code&gt;</ept>.<ph id="4">&lt;br /&gt;</ph>Параметры блока: пустой список <bpt id="5">&lt;code&gt;</bpt>{}<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="my-block i-bem" data-bem='{ "my-block": {} }'&gt;
    ...
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="html-mixes"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" resname="-html---js--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Один HTML-элемент — несколько JS-блоков</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Техника размещения нескольких блоков на одном HTML-элементе в БЭМ-методологии называется <bpt id="1">&lt;a href="i-bem-js-decl.ru.md#inher-mixins"&gt;</bpt>микс<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> HTML-элемент <bpt id="2">&lt;code&gt;</bpt>div<ept id="2">&lt;/code&gt;</ept>, на котором размещены:</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блок <bpt id="1">&lt;code&gt;</bpt>user<ept id="1">&lt;/code&gt;</ept> с параметром <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept>: <bpt id="3">&lt;code&gt;</bpt>pushkin<ept id="3">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru">блок <bpt id="1">&lt;code&gt;</bpt>avatar<ept id="1">&lt;/code&gt;</ept> с параметром <bpt id="2">&lt;code&gt;</bpt>img<ept id="2">&lt;/code&gt;</ept>: <bpt id="3">&lt;code&gt;</bpt>http://...<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="user avatar i-bem"
    data-bem='{
        "user": { "name": "pushkin" },
        "avatar": { "img": "http://..." }
     }'&gt;
     ...
&lt;/div&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="distrib-block"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" resname="-js----html--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Один JS-блок на нескольких HTML-элементах</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Такой дизайн удобен, если нужно согласовать состояния нескольких компонентов блока.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы привязать экземпляр блока к нескольким HTML-элементам, нужно указать им в атрибуте <bpt id="1">&lt;code&gt;</bpt>data-bem<ept id="1">&lt;/code&gt;</ept> одинаковое значение параметра <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept>. Значением <bpt id="3">&lt;code&gt;</bpt>id<ept id="3">&lt;/code&gt;</ept> может быть произвольная строка.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Экземпляр блока <bpt id="2">&lt;code&gt;</bpt>notebook<ept id="2">&lt;/code&gt;</ept> привязан к HTML-элементам <bpt id="3">&lt;code&gt;</bpt>div<ept id="3">&lt;/code&gt;</ept> и <bpt id="4">&lt;code&gt;</bpt>span<ept id="4">&lt;/code&gt;</ept>.<ph id="5">&lt;br /&gt;</ph>В параметрах блока указан общий <bpt id="6">&lt;code&gt;</bpt>id<ept id="6">&lt;/code&gt;</ept> — <bpt id="7">&lt;code&gt;</bpt>maintab<ept id="7">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;div class="notebook i-bem" data-bem='{ "notebook": { "id": "maintab" }}'&gt;
&lt;/div&gt;
...
&lt;span class="notebook i-bem" data-bem='{ "notebook": { "id": "maintab" }}'&gt;
&lt;/span&gt;<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В результате при инициализации блоков создается один JS-объект, поле <bpt id="1">&lt;a href="./i-bem-js-dom.ru.md"&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>domElem<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept> которого содержит ссылки на jQuery-объекты обоих DOM-узлов.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, виджет «вкладка», где клик по заголовку вкладки (первый HTML-элемент), меняет ее содержимое (второй HTML-элемент).<ph id="1">&lt;br /&gt;</ph>Другой пример: маркер, обозначающий точку на карте (первый элемент), и связанное с ним описание точки в списке рядом (второй элемент).</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Идентификатор <bpt id="1">&lt;code&gt;</bpt>id<ept id="1">&lt;/code&gt;</ept> используется <bpt id="2">&lt;em&gt;</bpt>только в момент инициализации<ept id="2">&lt;/em&gt;</ept> экземпляра блока. Значение <bpt id="3">&lt;code&gt;</bpt>id<ept id="3">&lt;/code&gt;</ept> должно быть уникальным для экземпляров одного блока в рамках одной <bpt id="4">&lt;a href="i-bem-js-init.ru.md#init-wave"&gt;</bpt>волны инициализации<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="i-blocks"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" resname="--dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Блоки без DOM-представления</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Инфраструктурный код, решающий общие задачи интерфейса (связь с бэкэндом, вспомогательные методы), можно оформить в виде блока. Это позволит выражать состояния блока с помощью <bpt id="1">&lt;a href="./i-bem-js-states.ru.md"&gt;</bpt>модификаторов<ept id="1">&lt;/a&gt;</ept>, на изменение которых смогут <bpt id="2">&lt;a href="i-bem-js-states.ru.md#mods-api-trigger"&gt;</bpt>подписаться другие блоки<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы не привязывать такие блоки к HTML-дереву искусственно в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> можно создавать блоки без DOM-представления.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блоки без DOM-представления:</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">не требуют привязки к HTML-коду страницы;</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru">должны быть явно <bpt id="1">&lt;a href="i-bem-js-init.ru.md#init-bem"&gt;</bpt>инициализированы<ept id="1">&lt;/a&gt;</ept> и уничтожены.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="api-nodom"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" resname="-----dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Доступ к экземплярам блоков без DOM-представления</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При создании экземпляра блока без DOM-представления необходимо позаботиться о сохранении ссылки на этот экземпляр для блоков, которым нужно с ним взаимодействовать.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Смотрите также:</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="i-bem-js-init.ru.md#init-bem"&gt;</bpt>Инициализация и удаление блоков без DOM-представления<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-events.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">События</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> поддерживается два вида событий:</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>DOM-события<ept id="1">&lt;/strong&gt;</ept> — jQuery-события на DOM-узле, связанном с<ph id="2">&lt;br /&gt;</ph>блоком. Отражают взаимодействие пользователя с интерфейсом (клик,<ph id="3">&lt;br /&gt;</ph>наведение мыши, ввод текста и т.п.). DOM-события обычно обрабатывает<ph id="4">&lt;br /&gt;</ph>тот экземпляр блока, на DOM-узлах которого они возникают.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>БЭМ-события<ept id="1">&lt;/strong&gt;</ept> — собственные события, генерируемые<ph id="2">&lt;br /&gt;</ph>блоком. Позволяют организовать API для<ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;a href="./i-bem-js-interact.ru.md"&gt;</bpt>взаимодействия с блоком<ept id="4">&lt;/a&gt;</ept>. БЭМ-события обычно обрабатывает<ph id="5">&lt;br /&gt;</ph>экземпляр блока, отслеживающий состояние других блоков, на которых<ph id="6">&lt;br /&gt;</ph>генерируются события.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">DOM-события следует использовать только во <bpt id="1">&lt;em&gt;</bpt>внутренних<ept id="1">&lt;/em&gt;</ept> процедурах блока. Для<ph id="2">&lt;br /&gt;</ph>взаимодействия блока с <bpt id="3">&lt;em&gt;</bpt>внешней<ept id="3">&lt;/em&gt;</ept> средой (другими блоками) предназначены БЭМ-события.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="delegated-events"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu8" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Делегирование событий</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обработка БЭМ-событий и DOM-событий может быть <bpt id="1">&lt;strong&gt;</bpt>делегирована<ept id="1">&lt;/strong&gt;</ept> контейнеру<ph id="2">&lt;br /&gt;</ph>(всему документу или конкретному DOM-узлу). В этом случае контейнер<ph id="3">&lt;br /&gt;</ph>служит точкой обработки событий, возникающих на любом из его<ph id="4">&lt;br /&gt;</ph>дочерних узлов, даже если в момент подписки на события<ph id="5">&lt;br /&gt;</ph>некоторых из дочерних узлов еще не существовало.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, блок меню может содержать вложенные блоки — пункты меню. Обработку<ph id="1">&lt;br /&gt;</ph>кликов на пунктах меню имеет смысл делегировать самому блоку<ph id="2">&lt;br /&gt;</ph>меню. Это, во-первых, позволяет сэкономить затраты ресурсов на<ph id="3">&lt;br /&gt;</ph>подписку на события (дешевле подписаться на одно событие контейнера,<ph id="4">&lt;br /&gt;</ph>чем на много событий элементов). Во-вторых, дает возможность добавлять и удалять пункты меню, не подписываясь на события добавленных пунктов и не отписываясь от событий удаленных.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возможно делегировать как БЭМ-события, так и DOM-события.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="dom-events"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" resname="dom--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">DOM-события</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Работа с DOM-событиями в <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> полностью реализована средствами фреймворка jQuery.</source>
</trans-unit>
      <trans-unit id="tu15" resname="--dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Подписка на DOM-событие</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">У объекта экземпляра блока зарезервирован набор методов для подписки на DOM-события:</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bindTo([elem], event, handler)<ept id="1">&lt;/code&gt;</ept> — на события основного DOM-узла блока и DOM-узлов его элементов.</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bindToDoc(event, [data], handler)<ept id="1">&lt;/code&gt;</ept> – на события DOM-узла <bpt id="2">&lt;code&gt;</bpt>document<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bindToWin(event, [data], handler)<ept id="1">&lt;/code&gt;</ept> – на события DOM-узла <bpt id="2">&lt;code&gt;</bpt>window<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> В момент <bpt id="2">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>инициализации экземпляра блока<ept id="2">&lt;/a&gt;</ept><ph id="3">&lt;br /&gt;</ph><bpt id="4">&lt;code&gt;</bpt>my-block<ept id="4">&lt;/code&gt;</ept> выполняется подписка на событие <bpt id="5">&lt;code&gt;</bpt>click<ept id="5">&lt;/code&gt;</ept>, при наступлении<ph id="6">&lt;br /&gt;</ph>которого блок выставляет себе <bpt id="7">&lt;a href="./i-bem-js-states.ru.md"&gt;</bpt>модификатор<ept id="7">&lt;/a&gt;</ept> <bpt id="8">&lt;code&gt;</bpt>size<ept id="8">&lt;/code&gt;</ept> в значение <bpt id="9">&lt;code&gt;</bpt>big<ept id="9">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('my-block', {
    onSetMod : {
        'js' : {
            'inited': function() {
                this.bindTo('click', function(e) {
                    this.setMod('size', 'big');
                });
            }
        }
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> При <bpt id="2">&lt;a href="./i-bem-js-init.ru.md"&gt;</bpt>инициализации экземпляра блока<ept id="2">&lt;/a&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>my-form<ept id="3">&lt;/code&gt;</ept> выполняется<ph id="4">&lt;br /&gt;</ph>подписка на событие <bpt id="5">&lt;code&gt;</bpt>click<ept id="5">&lt;/code&gt;</ept> элемента <bpt id="6">&lt;code&gt;</bpt>submit<ept id="6">&lt;/code&gt;</ept>, при наступлении<ph id="7">&lt;br /&gt;</ph>которого будет вызвана функция-обработчик <bpt id="8">&lt;code&gt;</bpt>_onSubmit<ept id="8">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('my-block', {
    onSetMod : {
        'js' : {
            'inited': function() {
                this.bindTo('submit', 'click', this._onSubmit);
            }
        }
    },

    _onSubmit : function() { /* ... */ }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Функция-обработчик выполняется в контексте того экземпляра<ph id="2">&lt;br /&gt;</ph>блока, в котором возникло событие.</source>
</trans-unit>
      <trans-unit id="tu25" resname="---dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Удаление подписки на DOM-событие</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Удаление подписки на DOM-события выполняется автоматически при уничтожении экземпляра блока. Тем не менее у объекта экземпляра блока зарезервирован набор методов для удаления подписки вручную во время работы блока:</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>unbindFrom([elem], event, [handler])<ept id="1">&lt;/code&gt;</ept> — удаление подписки на события основного DOM-узла блока и DOM-узлов его элементов.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>unbindFromDoc(event, [handler])<ept id="1">&lt;/code&gt;</ept> – удаление подписки на события DOM-узла <bpt id="2">&lt;code&gt;</bpt>document<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>unbindFromWin(event, [handler])<ept id="1">&lt;/code&gt;</ept> – удаление подписки на события DOM-узла <bpt id="2">&lt;code&gt;</bpt>window<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если при вызове одного из методов не указана функция-обработчик, будут удалены все обработчики, установленные блоком на DOM-узле для этого события.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>_stopKeysListening : function() { 
    this.unbindFromDoc('keydown');  // удаляем все обработчики события 'keydown' 
                                    // установленные блоком DOM-узлу document
} <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" resname="-dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Объект DOM-события</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://api.jquery.com/category/events/event-object/</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Первым аргументом функция-обработчик получает jQuery-объект DOM-события — <bpt id="1">&lt;a href="https://api.jquery.com/category/events/event-object/" [#$tu34]&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>{jQuery.Event}<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Это позволяет использовать методы объекта <bpt id="1">&lt;code&gt;</bpt>stopPropаgation<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>preventDefault<ept id="2">&lt;/code&gt;</ept> для управления распространением события и реакцией на него браузера.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('my-block', {
    onSetMod : {
        'js' : {
            'inited': function() {
                this.bindTo('click', function(e) {
                    e.stopPropаgation(); // останавливаем всплывание события
                    this._onSubmit();
                });
            }
        }
    },

    _onSubmit : function() {
        /* ... */
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">DOM-событие может быть сгенерировано вручную, например, с помощью jQuery-функции <bpt id="1">&lt;code&gt;</bpt>trigger<ept id="1">&lt;/code&gt;</ept>. После объекта события, функция-обработчик DOM-события получит аргументами те параметры, с которыми <bpt id="2">&lt;code&gt;</bpt>trigger<ept id="2">&lt;/code&gt;</ept> была вызвана при создании события.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://api.jquery.com/on/#event-handler</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>N.B.<ept id="1">&lt;/strong&gt;</ept> Параметры окружения и поведение функции-обработчика события идентичны <bpt id="2">&lt;a href="http://api.jquery.com/on/#event-handler" [#$tu39]&gt;</bpt>функции-обработчику<ept id="2">&lt;/a&gt;</ept> jQuery.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="dom-events-delegated"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" resname="-dom--id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Делегирование DOM-событий</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Делегировать обработку DOM-событий рекомендуется с помощью метода <bpt id="1">&lt;code&gt;</bpt>liveBindTo([elem], event, handler)<ept id="1">&lt;/code&gt;</ept>. В <bpt id="2">&lt;a href="./i-bem-js-decl.ru.md"&gt;</bpt>статических методах декларации<ept id="2">&lt;/a&gt;</ept> блока зарезервированно свойство <bpt id="3">&lt;code&gt;</bpt>live<ept id="3">&lt;/code&gt;</ept> для подписки на делегированные DOM-события.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> Все экземпляры блока <bpt id="2">&lt;code&gt;</bpt>menu<ept id="2">&lt;/code&gt;</ept> подписываются на делегированное DOM-событие <bpt id="3">&lt;code&gt;</bpt>click<ept id="3">&lt;/code&gt;</ept> своих элементов <bpt id="4">&lt;code&gt;</bpt>item<ept id="4">&lt;/code&gt;</ept>. Метод <bpt id="5">&lt;code&gt;</bpt>_onItemClick<ept id="5">&lt;/code&gt;</ept> экземпляра блока <bpt id="6">&lt;code&gt;</bpt>menu<ept id="6">&lt;/code&gt;</ept> будет выполняться при клике на любой элемент <bpt id="7">&lt;code&gt;</bpt>item<ept id="7">&lt;/code&gt;</ept> в меню. Не важно, существовал ли этот элемент в момент инициализации экземпляра.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('menu', {
    _onItemClick : function(e) { /* ... */ }
}, {
    live : function() {
        this.liveBindTo('item', 'click', function(e) {
            this._onItemClick(e);
        });
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если в декларации блока задано свойство <bpt id="1">&lt;code&gt;</bpt>live<ept id="1">&lt;/code&gt;</ept>, инициализация экземпляров блока будет <bpt id="2">&lt;em&gt;</bpt>отложена<ept id="2">&lt;/em&gt;</ept> до момента, когда экземпляр блока потребуется в работе (<bpt id="3">&lt;a href="./i-bem-js-init.ru.md#init-live"&gt;</bpt>ленивая инициализация<ept id="3">&lt;/a&gt;</ept>). Таким моментом может стать DOM-событие на экземпляре блока, на которое выполнена делегированная подписка, или обращение к экземпляру блока <bpt id="4">&lt;a href="./i-bem-js-interact.ru.md"&gt;</bpt>из другого блока<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Функция-обработчик выполняется в контексте ближайшего блока данного типа на пути всплывания DOM-события (снизу вверх по DOM-дереву).</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Чтобы воспользоваться делегированными событиями в блоке, не откладывая инициализацию, из функции, заданной в свойстве <bpt id="1">&lt;code&gt;</bpt>live<ept id="1">&lt;/code&gt;</ept>, следует вернуть <bpt id="2">&lt;code&gt;</bpt>false<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('my-block', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name,
    {
        _onClick: function() { /* ... */ }  // будет выполняться каждый раз, 
                                            // когда возникает событие 'click'
    },
    {
        live: function() {
            this.liveBindTo('click', function() { this._onClick() });
            return false; // экземпляры блоков будут инициализированы автоматически
        }
    }
));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-events"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">БЭМ-события</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В отличие от DOM-событий, БЭМ-события генерируются не на DOM-элементах, а на <bpt id="1">&lt;strong&gt;</bpt>экземплярах блоков<ept id="1">&lt;/strong&gt;</ept>. Элементы блоков не могут генерировать БЭМ-события.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-events-subscribe"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Генерация БЭМ-события</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для генерации БЭМ-события используется метод экземпляра блока <bpt id="1">&lt;code&gt;</bpt>emit(event, [data])<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При взаимодействие пользователя с элементом управления блока возникают DOM-события. В ходе их обработки блоком можно создавать БЭМ-события. Это позволяет реализовать уровень абстракции над DOM-событиями. БЭМ-события создаются как реакция на DOM-события, но при соблюдении некоторых условий, например, при наличии или конкретном значении модификатора.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, при клике по кнопке <bpt id="1">&lt;code&gt;</bpt>submit<ept id="1">&lt;/code&gt;</ept> (DOM-событие <bpt id="2">&lt;code&gt;</bpt>click<ept id="2">&lt;/code&gt;</ept>) <bpt id="3">&lt;strong&gt;</bpt>БЭМ-событие<ept id="3">&lt;/strong&gt;</ept> <bpt id="4">&lt;code&gt;</bpt>click<ept id="4">&lt;/code&gt;</ept> генерируется только в том случае, если у блока в этот момент не установлен модификатор <bpt id="5">&lt;code&gt;</bpt>disabled<ept id="5">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('submit', {
    onSetMod: {
        'js': {
            'inited': function() {
                this.bindTo('click', this._onClick); // подписка на DOM-событие "click"
            }
        }
    },

    _onClick: function() {
        if(!this.hasMod('disabled')) {
            this.emit('click'); // создание БЭМ-события "click"
        }
    }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Вторым аргументом <bpt id="1">&lt;code&gt;</bpt>emit<ept id="1">&lt;/code&gt;</ept> можно передать произвольные данные, которые будут доступны как второй аргумент функции-обработчика.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-events-subscribe"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" resname="----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Подписка на БЭМ-события</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для подписки на БЭМ-события экземпляров блоков используется метод экземпляра блока <bpt id="1">&lt;code&gt;</bpt>on(event, [data], handler, [handlerCtx])<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> В момент инициализации HTML-формы (экземпляра блока <bpt id="2">&lt;code&gt;</bpt>my-form<ept id="2">&lt;/code&gt;</ept>) выполняется поиск вложенной в форму кнопки <bpt id="3">&lt;code&gt;</bpt>submit<ept id="3">&lt;/code&gt;</ept> и подписка на ее БЭМ-событие <bpt id="4">&lt;code&gt;</bpt>click<ept id="4">&lt;/code&gt;</ept>. В результате при нажатии на кнопку (экземпляр блока <bpt id="5">&lt;code&gt;</bpt>submit<ept id="5">&lt;/code&gt;</ept>) будет выполнен метод <bpt id="6">&lt;code&gt;</bpt>_onSubmit<ept id="6">&lt;/code&gt;</ept> формы (экземпляр блока <bpt id="7">&lt;code&gt;</bpt>my-form<ept id="7">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('my-form', {
    onSetMod: {
        'js': {
            'inited': function() {
                this.findBlockInside('submit').on(
                    'click', // имя БЭМ-события
                    this._onSubmit, // метод экземпляра блока my-form
                    this); // контекст для выполнения _onSubmit — блок my-form
            }
        }
    },

    _onSubmit: function() { /* ... */ }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> Если не передавать аргумент <bpt id="2">&lt;code&gt;</bpt>[handlerCtx]<ept id="2">&lt;/code&gt;</ept>, контекстом для выполнения функции-обработчика будет тот блок, в котором возникло БЭМ-событие (в примере выше это блок <bpt id="3">&lt;code&gt;</bpt>submit<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-events-unsubscribe"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" resname="-----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Удаление подписки на БЭМ-события</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Удаление подписки на БЭМ-события выполняется автоматически при уничтожении экземпляра блока. Для удаления подписки вручную, используйте метод экземпляра блока<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;code&gt;</bpt>un(event, [handler], [handlerCtx])<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-events-modchange"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu69" resname="----id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">События при изменении модификаторов</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для подписки на БЭМ-события при изменении модификатора блока или элемента используется метод экземпляра блока <bpt id="1">&lt;code&gt;</bpt>on(event, [data], handler, [handlerCtx])<ept id="1">&lt;/code&gt;</ept>. Метод принимает аргументы:</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-li" xml:space="preserve">
<source xml:lang="ru">объект свойств модификатора, на который производится подписка;</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-li" xml:space="preserve">
<source xml:lang="ru">функцию-обработчик, выполняющуюся при установке соответствующего модификатора.</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Объект, описывающий модификатор, может содержать следующие зарезервированные свойства:</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modName<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – имя модификатора. Обязательное свойство.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modVal<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – значение модификатора. Обязательное свойство. Со значением <bpt id="3">&lt;code&gt;</bpt>*<ept id="3">&lt;/code&gt;</ept> производится подписка на установку модификатора в <bpt id="4">&lt;strong&gt;</bpt>любое<ept id="4">&lt;/strong&gt;</ept> значение. Со значением <bpt id="5">&lt;code&gt;</bpt>''<ept id="5">&lt;/code&gt;</ept> – на <bpt id="6">&lt;strong&gt;</bpt>удаление<ept id="6">&lt;/strong&gt;</ept> модификатора. Подробнее смотрите в разделе <bpt id="7">&lt;a href="i-bem-js-states.ru.md#mods-api-trigger"&gt;</bpt>триггеры на установку модификаторов<ept id="7">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – имя элемента (для модификаторов элементов).</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> В момент инициализации блок <bpt id="2">&lt;code&gt;</bpt>form<ept id="2">&lt;/code&gt;</ept> подписывается на событие при изменении модификатора у вложенного блока <bpt id="3">&lt;code&gt;</bpt>submit<ept id="3">&lt;/code&gt;</ept>. К примеру, можно подписаться на:</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">установку модификатора <bpt id="1">&lt;code&gt;</bpt>disabled<ept id="1">&lt;/code&gt;</ept> в любое значение;</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl('form', {
onSetMod: {
    'js': {
        'inited': function() {
            var submit = findBlockInside('submit');
            submit.on({ modName : 'disabled', modVal : '*' }, function() {});
        }
    }
},
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">установку модификатора <bpt id="1">&lt;code&gt;</bpt>'disabled'<ept id="1">&lt;/code&gt;</ept> в значение <bpt id="2">&lt;code&gt;</bpt>'true'<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>submit.on({ modName : 'disabled', modVal : 'true' }, function() {});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">удаление модификатора <bpt id="1">&lt;code&gt;</bpt>'disabled'<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>submit.on({ modName : 'disabled', modVal : '' }, function() {});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">удаление модификатора <bpt id="1">&lt;code&gt;</bpt>m1<ept id="1">&lt;/code&gt;</ept> у элемента <bpt id="2">&lt;code&gt;</bpt>'control'<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>submit.on({ elem : 'control', modName : 'm1', modVal : '' }, function() {});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="bem-events-delegated"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu91" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Делегирование БЭМ-событий</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Делегирование БЭМ-событий означает, что блок подписывается на определенное БЭМ-событие <bpt id="1">&lt;strong&gt;</bpt>всех экземпляров<ept id="1">&lt;/strong&gt;</ept> блока с заданным именем <bpt id="2">&lt;strong&gt;</bpt>в пределах заданного контекста<ept id="2">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подписка на делегированные БЭМ-события выполняется с помощью статического метода класса блока <bpt id="1">&lt;code&gt;</bpt>MyBlock.on([ctx], event, [data], handler, [handlerCtx])<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{jQuery} [ctx]<ept id="1">&lt;/code&gt;</ept> — DOM-узел, в пределах которого отслеживаются БЭМ-события (контейнер). Если не указан, в качестве контейнера используется весь документ.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String} event<ept id="1">&lt;/code&gt;</ept> — имя БЭМ-события.</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Object} [data]<ept id="1">&lt;/code&gt;</ept> — произвольные данные, передаваемые функции-обработчику.</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Function} handler<ept id="1">&lt;/code&gt;</ept> — функция-обработчик события.</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Object} [handlerCtx]<ept id="1">&lt;/code&gt;</ept> — контекст функции-обработчика события. Если отсутствует, функция-обработчик будет выполняться в контексте экземпляра блока, в котором произошло событие.</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Пример:<ept id="1">&lt;/strong&gt;</ept> При инициализации экземпляров блока <bpt id="2">&lt;code&gt;</bpt>menu<ept id="2">&lt;/code&gt;</ept> выполняется подписка на БЭМ-событие <bpt id="3">&lt;code&gt;</bpt>click<ept id="3">&lt;/code&gt;</ept> всех ссылок (экземпляров блока <bpt id="4">&lt;code&gt;</bpt>link<ept id="4">&lt;/code&gt;</ept>) в пределах DOM-узла блока (<bpt id="5">&lt;code&gt;</bpt>this.domElem<ept id="5">&lt;/code&gt;</ept>). В качестве контекста функции-обработчика передается текущий экземпляр блока.</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('menu', ['i-bem__dom', 'link'], function(provide, BEMDOM, Link) {

provide(BEMDOM.decl(this.name,
    onSetMod : {
        'js' : {
            'inited' : function() {
                Link.on( // подписка на БЭМ-событие
                    this.domElem, // контейнер — DOM-узел экземпляра блока menu
                    'click', // БЭМ-событие
                    this._onLinkClick, // обработчик
                    this); // контекст обработчика — экземпляр блока menu
            },

            '' : function() {
                Link.un( // удаление подписки на БЭМ-событие
                    this.domElem,
                    'click',
                    this._onLinkClick,
                    this);
            }
        }
    },

    _onLinkClick : function(e) {
        var clickedLink = e.target; // экземпляр блока 'link', 
                                    // на котором произошло БЭМ-событие 'click'
    }
});

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Делегировать можно любые БЭМ-события, в том числе и события при изменении модификаторов.</source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>NB<ept id="1">&lt;/strong&gt;</ept> <bpt id="2">&lt;strong&gt;</bpt>Удаление подписки<ept id="2">&lt;/strong&gt;</ept> на делегированные БЭМ-события никогда не происходит автоматически. Всегда следует явно удалять подписку при<ph id="3">&lt;br /&gt;</ph>помощи статического метода блока <bpt id="4">&lt;code&gt;</bpt>un([ctx], event, [handler], [handlerCtx])<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="api"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu104" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Объект БЭМ-события</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вызове функция-обработчик получает аргументом объект, описывающий БЭМ-событие. Класс объекта БЭМ-события <bpt id="1">&lt;code&gt;</bpt>events.Event<ept id="1">&lt;/code&gt;</ept> определен в <bpt id="2">&lt;a href="https://github.com/ymaps/modules" [#$tu106]&gt;</bpt>ym<ept id="2">&lt;/a&gt;</ept>-модуле <bpt id="3">&lt;a href="../../common.blocks/events/events.vanilla.js"&gt;</bpt><bpt id="4">&lt;code&gt;</bpt>events<ept id="4">&lt;/code&gt;</ept><ept id="3">&lt;/a&gt;</ept> библиотеки bem-core. Объект содержит поля:</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>target<ept id="1">&lt;/code&gt;</ept> — экземпляр блока, в котором произошло БЭМ-событие.</source>
</trans-unit>
      <trans-unit id="tu108" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>data<ept id="1">&lt;/code&gt;</ept> — произвольные дополнительные данные, переданные как аргумент <bpt id="2">&lt;code&gt;</bpt>data<ept id="2">&lt;/code&gt;</ept> при подписке на БЭМ-событие.</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://api.jquery.com/event.result/</source>
</trans-unit>
      <trans-unit id="tu109" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>result<ept id="1">&lt;/code&gt;</ept> — последнее значение, возвращенное обработчиком данного события. Аналогично <bpt id="2">&lt;a href="https://api.jquery.com/event.result/" [#$tu110]&gt;</bpt>jQuery.Event.result<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://api.jquery.com/event.type/</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> — тип события. Аналогично <bpt id="2">&lt;a href="https://api.jquery.com/event.type/" [#$tu112]&gt;</bpt>jQuery.Event.type<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu113" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подробнее о свойствах и методах объекта БЭМ-события читайте в <bpt id="1">&lt;a href="../../common.blocks/events/events.ru.md"&gt;</bpt>документации блока events<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.docs/i-bem-js/i-bem-js-common.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Общие сведения</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro-bem"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu4" resname="---javascript-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">БЭМ-методология и JavaScript</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В БЭМ-методологии веб-интерфейс строится из независимых<ph id="1">&lt;br /&gt;</ph><bpt id="2">&lt;strong&gt;</bpt>блоков<ept id="2">&lt;/strong&gt;</ept> у которых могут быть <bpt id="3">&lt;strong&gt;</bpt>элементы<ept id="3">&lt;/strong&gt;</ept>. И блоки,<ph id="4">&lt;br /&gt;</ph>и элементы могут иметь состояния или особенности, описываемые <bpt id="5">&lt;strong&gt;</bpt>модификаторами<ept id="5">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Работа веб-интерфейса обеспечивается несколькими <bpt id="1">&lt;strong&gt;</bpt>технологиями<ept id="1">&lt;/strong&gt;</ept><ph id="2">&lt;br /&gt;</ph>(HTML, CSS, JS и т.д.). Его реализация разбита на компоненты по блокам. Блок содержит набор <bpt id="3">&lt;strong&gt;</bpt>файлов технологий<ept id="3">&lt;/strong&gt;</ept>, составляющих аспекты его реализации:</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>my-block.css<ept id="1">&lt;/code&gt;</ept> — внешний вид блока;</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>my-block.bemhtml<ept id="1">&lt;/code&gt;</ept> — шаблоны для генерации HTML-представления блока;</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>my-block.js<ept id="1">&lt;/code&gt;</ept> — <bpt id="2">&lt;strong&gt;</bpt>динамическое поведение<ept id="2">&lt;/strong&gt;</ept> блока в браузере.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фреймворк <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> позволяет разложить клиентский JavaScript на компоненты в терминах БЭМ:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Блок<ept id="1">&lt;/strong&gt;</ept> — JS-компонент, описывающий логику работы однотипных элементов интерфейса. Например, все кнопки могут быть реализованы в виде блока <bpt id="2">&lt;code&gt;</bpt>button<ept id="2">&lt;/code&gt;</ept>. В этом случае, <bpt id="3">&lt;code&gt;</bpt>button.css<ept id="3">&lt;/code&gt;</ept> определяет внешний вид всех кнопок, а <bpt id="4">&lt;code&gt;</bpt>button.js<ept id="4">&lt;/code&gt;</ept> — логику их работы.<ph id="5">&lt;br /&gt;</ph>На каждой странице может размещаться более одного <bpt id="6">&lt;strong&gt;</bpt>экземпляра блока<ept id="6">&lt;/strong&gt;</ept> (например, кнопки). Каждому экземпляру блока соответствует JS-объект, в памяти браузера, хранящий его состояние. JS-объект содержит ссылку на DOM-узел, к которому привязан данный экземпляр блока.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Элементы<ept id="1">&lt;/strong&gt;</ept> — DOM-узлы, вложенные в DOM-узел блока, с атрибутом <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept>, указывающим на их роль в БЭМ-предметной области (имя блока и элемента). Элементы блока доступны через [JS-API][dom] экземпляра блока.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Модификаторы<ept id="1">&lt;/strong&gt;</ept> — предоставляют информацию о состоянии блока и его элементов. Состояние модификаторов записывается в атрибуте <bpt id="2">&lt;code&gt;</bpt>class<ept id="2">&lt;/code&gt;</ept> на DOM-узлах блока и элементов. Управление модификаторами производится через <bpt id="3">&lt;a href="i-bem-js-states.ru.md#mods-api"&gt;</bpt>JS-API<ept id="3">&lt;/a&gt;</ept> экземпляра блока.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro-build"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Сборка</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Разработка в рамках БЭМ-методологии ведется модульно — каждый блок<ph id="1">&lt;br /&gt;</ph>программируется отдельно. Финальный исходный код веб-страниц<ph id="2">&lt;br /&gt;</ph>формируется из кода отдельных блоков с помощью процедур <bpt id="3">&lt;strong&gt;</bpt>сборки<ept id="3">&lt;/strong&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В файловой системе блок удобно представлять в виде каталога, а реализацию блока в каждой из технологий — в виде отдельного файла:</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>    desktop.blocks/
        my-block/
            my-block.css
            my-block.js
            my-block.bemhtml
            ...

    desktop.blocks/
        other-block/
            other-block.css
            other-block.js
            other-block.bemhtml
            ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для каждой веб-страницы код использованных на ней блоков может быть собран в единые файлы:</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>    desktop.bundles/
        index/
            index.html
            index.css
            index.js
            ...<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Существует два инструмента, поддерживающих БЭМ-предметную область, для сборки кода результирующих веб-страниц из отдельных описаний блоков:</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/" [#$tu23]&gt;</bpt>bem-tools<ept id="1">&lt;/a&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/enb-bem/</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/enb-make/enb-modules</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a href="https://ru.bem.info/tools/bem/enb-bem/" [#$tu25]&gt;</bpt>ENB<ept id="1">&lt;/a&gt;</ept> совместно с <bpt id="2">&lt;a href="https://github.com/enb-make/enb-modules" [#$tu26]&gt;</bpt>enb-modules<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Оба инструмента позволяют автоматизировать создание HTML-разметки для <bpt id="1">&lt;a href="./i-bem-js-html-binding.ru.md"&gt;</bpt>привязки JS-блоков<ept id="1">&lt;/a&gt;</ept> и <bpt id="2">&lt;a href="./i-bem-js-params.ru.md"&gt;</bpt>передачи параметров экземпляру блока<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro-name"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" resname="-i-bem.js---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Почему i-bem.js так называется</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В соответствии с БЭМ-методологией, базовая JS-библиотека БЭМ-платформы изначально разрабатывалась<ph id="1">&lt;br /&gt;</ph>как особый служебный блок. Такой подход позволяет работать с базовыми библиотеками так же, как<ph id="2">&lt;br /&gt;</ph>и с обычными блоками. В частности, структурировать код в терминах элементов и модификаторов и<ph id="3">&lt;br /&gt;</ph>гибко настраивать поведение библиотеки на разных уровнях переопределения.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служебным блокам в БЭМ было принято давать имена с префиксом <bpt id="1">&lt;code&gt;</bpt>i-<ept id="1">&lt;/code&gt;</ept>. Таким образом, имя <bpt id="2">&lt;code&gt;</bpt>i-bem.js<ept id="2">&lt;/code&gt;</ept><ph id="3">&lt;br /&gt;</ph>читается как <bpt id="4">&lt;em&gt;</bpt>реализация блока <bpt id="5">&lt;code&gt;</bpt>i-bem<ept id="5">&lt;/code&gt;</ept> в технологии <bpt id="6">&lt;code&gt;</bpt>JS<ept id="6">&lt;/code&gt;</ept><ept id="4">&lt;/em&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="intro-use"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="--i-bem.js-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Как использовать i-bem.js</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Фреймворк <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> входит в состав библиотеки <bpt id="2">&lt;a href="https://ru.bem.info/libs/bem-core/" [#$tu35]&gt;</bpt>bem-core<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Реализация <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> состоит из двух модулей:</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Модуль <bpt id="2">&lt;a href="https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/" [#$tu38]&gt;</bpt>i-bem<ept id="2">&lt;/a&gt;</ept><ept id="1">&lt;/strong&gt;</ept>.<ph id="3">&lt;br/&gt;</ph><ph id="4">&lt;br /&gt;</ph>Базовая реализация JS-блока <bpt id="5">&lt;code&gt;</bpt>i-bem<ept id="5">&lt;/code&gt;</ept>, от которой наследуются все блоки в<ph id="6">&lt;br /&gt;</ph><bpt id="7">&lt;code&gt;</bpt>i-bem.js<ept id="7">&lt;/code&gt;</ept>. Блок <bpt id="8">&lt;code&gt;</bpt>i-bem<ept id="8">&lt;/code&gt;</ept> написан с расчетом на использование в любом<ph id="9">&lt;br /&gt;</ph>JS-окружении: как на клиенте, так и на сервере например, в<ph id="10">&lt;br /&gt;</ph>Node.js).</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;strong&gt;</bpt>Модуль <bpt id="2">&lt;a href="https://ru.bem.info/libs/bem-core/current/desktop/i-bem/jsdoc/" [#$tu40]&gt;</bpt>i-bem__dom<ept id="2">&lt;/a&gt;</ept><ept id="1">&lt;/strong&gt;</ept>.<ph id="3">&lt;br/&gt;</ph><ph id="4">&lt;br /&gt;</ph>Базовая реализация блока, привязанного к DOM-узлу.<ph id="5">&lt;br /&gt;</ph>Рассчитан на использование на клиенте, опирается на работу браузеров с DOM. Зависит от <bpt id="6">&lt;code&gt;</bpt>jQuery<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Зависимости:</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru">jQuery (только для модуля <bpt id="1">&lt;code&gt;</bpt>i-bem__dom<ept id="1">&lt;/code&gt;</ept>). При использовании <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept> отдельная установка<ph id="3">&lt;br /&gt;</ph> jQuery не требуется.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/ymaps/modules</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tools/bem/</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Модульная система <bpt id="1">&lt;a href="https://github.com/ymaps/modules" [#$tu44]&gt;</bpt>ym/modules<ept id="1">&lt;/a&gt;</ept>. При использовании<ph id="2">&lt;br /&gt;</ph> <bpt id="3">&lt;a href="https://ru.bem.info/tools/bem/" [#$tu45]&gt;</bpt>bem-tools<ept id="3">&lt;/a&gt;</ept> с технологией <bpt id="4">&lt;code&gt;</bpt>.browser.js<ept id="4">&lt;/code&gt;</ept> (и производных от нее)<ph id="5">&lt;br /&gt;</ph> эта зависимость удовлетворяется автоматически.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/tutorials/project-stub/</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Можно использовать <bpt id="1">&lt;code&gt;</bpt>i-bem.js<ept id="1">&lt;/code&gt;</ept> как часть полного стека<ph id="2">&lt;br /&gt;</ph>БЭМ-инструментов. В этом случае свой проект удобно создавать на основе<ph id="3">&lt;br /&gt;</ph>шаблонного репозитория <bpt id="4">&lt;a href="https://ru.bem.info/tutorials/project-stub/" [#$tu47]&gt;</bpt>project-stub<ept id="4">&lt;/a&gt;</ept>, в котором настроена автоматическая установка зависимых библиотек и сборка.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если не планируется использование других технологий БЭМ-платформы, достаточно поместить код библиотеки <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept> в существующий проект.</source>
</trans-unit>
    </body>
  </file>
  <file original="desktop.blocks/page/page.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="page-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">page</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На уровне переопределения <bpt id="1">&lt;code&gt;</bpt>desktop.blocks<ept id="1">&lt;/code&gt;</ept> блок предоставляет шаблон, создающий дополнительный HTML-элемент <bpt id="2">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-x-ua-compatible"&gt;</bpt>x-ua-compatible<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Управляет поведением создаваемого блоком HTML-элемента <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> с атрибутом <bpt id="2">&lt;code&gt;</bpt>http-equiv<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>X-UA-Compatible<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu11" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css"&gt;</bpt>css<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Элемент служит для подключения CSS.</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-conditional-comment"&gt;</bpt>conditional-comment<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Помогает использовать условные комментарии.</source>
</trans-unit>
      <trans-unit id="tu21" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля элементов блока</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css"&gt;</bpt>css<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css-declfields-ie"&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>ie<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Используется для указания применимости стилей к Internet Explorer версий 6-9 и подключения специальных стилей для Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-conditional-comment"&gt;</bpt>conditional-comment<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-conditional-comment-declfields-condition"&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>condition<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет указать условие, при выполнении которого содержимое поля <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> декларации элемента, будет доступно.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu35" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-conditional-comment-declfields-msieOnly"&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>msieOnly<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Указывает, предназначен ли данный условный комментарий для использования исключительно в Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu38" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bh.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Создает HTML-элемент <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> с атрибутом <bpt id="2">&lt;code&gt;</bpt>http-equiv<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>X-UA-Compatible<ept id="3">&lt;/code&gt;</ept>, определяющий совместимость с юзер-агентами. По умолчанию, значением атрибута <bpt id="4">&lt;code&gt;</bpt>content<ept id="4">&lt;/code&gt;</ept> элемента является <bpt id="5">&lt;code&gt;</bpt>IE=edge<ept id="5">&lt;/code&gt;</ept> (совместим с последними версиями Internet Explorer).</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" resname="---1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля блока</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-x-ua-compatible"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" resname="-x-ua-compatible-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>x-ua-compatible<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Управляет поведением создаваемого блоком HTML-элемента <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> с атрибутом <bpt id="2">&lt;code&gt;</bpt>http-equiv<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>X-UA-Compatible<ept id="3">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-li" xml:space="preserve">
<source xml:lang="ru">со значением <bpt id="1">&lt;code&gt;</bpt>false<ept id="1">&lt;/code&gt;</ept> HTML-элемент <bpt id="2">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="2">&lt;/code&gt;</ept> не будет создаваться.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-li" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu52" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
block : 'page',
title : 'Hello, World!',
'x-ua-compatible' : false,
content : 'Отмена создания HTML-элемента &lt;meta&gt;'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">строчное значение будет присвоено свойству <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> HTML-элемента <bpt id="2">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Hello, World!',
    'x-ua-compatible' : 'IE=6',
    content : 'Совместим с Internet Explorer 6'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-css"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" resname="-css-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>css<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-css-declfields-ie"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" resname="--ie-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>ie<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Используется для указания применимости стилей к Internet Explorer версий 6-9 и подключения специальных стилей Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимы следующие значения:</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru">строка вида <bpt id="1">&lt;code&gt;</bpt>'lt IE 8'<ept id="1">&lt;/code&gt;</ept> – элемент <bpt id="2">&lt;code&gt;</bpt>&lt;link&gt;<ept id="2">&lt;/code&gt;</ept> будет обернут в условные комментарии, для использования в соответствующих версиях Internet Explorer (для текущего примера <bpt id="3">&lt;code&gt;</bpt>lt IE 8<ept id="3">&lt;/code&gt;</ept> – ниже восьмой версии).</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>false<ept id="1">&lt;/code&gt;</ept> – будут использоваться условные комментарии, предотвращающие использование стилей в IE 9 и ниже.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> – используется в случае, если в проекте есть отдельный CSS для каждой версии Internet Explorer. Значением свойства <bpt id="2">&lt;code&gt;</bpt>url<ept id="2">&lt;/code&gt;</ept>, при этом, должна быть строка с путем и именем файла без суффикса. Во время подключения создаются элементы <bpt id="3">&lt;code&gt;</bpt>&lt;link&gt;<ept id="3">&lt;/code&gt;</ept> с отдельным суффиксом для каждой версии. Другими словами, при значении <bpt id="4">&lt;code&gt;</bpt>url<ept id="4">&lt;/code&gt;</ept> равном <bpt id="5">&lt;code&gt;</bpt>foo.com/index<ept id="5">&lt;/code&gt;</ept> будут подключены стили <bpt id="6">&lt;code&gt;</bpt>foo.com/index.ie6.css<ept id="6">&lt;/code&gt;</ept>, <bpt id="7">&lt;code&gt;</bpt>foo.com/index.ie7.css<ept id="7">&lt;/code&gt;</ept> и т.д. до <bpt id="8">&lt;code&gt;</bpt>...ie9.css<ept id="8">&lt;/code&gt;</ept>. При этом каждый HTML-элемент будет обернут в условный комментарий, обеспечивающий его подключение только в соответствующей версии Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Page title',
    head : [
        { elem : 'css', url : 'example.css', ie : false },
        { elem : 'css', url : 'example.ie.css', ie : 'lt IE 8' }
    ],
    content : 'Страница с отдельными CSS правилами для IE'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-conditional-comment"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu69" resname="-conditional-comment-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>conditional-comment<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет обернуть содержимое поля <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept>, определенное в BEMJSON-декларации элемента, в условные комментарии. Условие, при котором содержимое поля будет доступно, определяется специализированным полем <bpt id="2">&lt;code&gt;</bpt>condition<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    block : 'page',
    title : 'page__conditional-comments',
    styles : 
        {
            elem : 'conditional-comment',
            condition : '&lt;= IE 8',
            content : { elem : 'css', url : '_page.ie.css' }
        },
    scripts : 
        {
            elem : 'conditional-comment',
            condition : 'lte IE 8',
            content : { elem : 'js', url : '//yastatic.net/es5-shims/0.0.1/es5-shims.min.js' }
        }
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-conditional-comment-declfields-condition"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" resname="--condition-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>condition<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Условие, при выполнении которого содержимое поля <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> декларации элемента, будет доступно. Например, определенная версия Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение поля составляется из:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-li" xml:space="preserve">
<source xml:lang="ru">квантора – <bpt id="1">&lt;code&gt;</bpt>&gt;<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>&lt;<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>=<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>&lt;=<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>&gt;=<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>lt<ept id="6">&lt;/code&gt;</ept>, <bpt id="7">&lt;code&gt;</bpt>gt<ept id="7">&lt;/code&gt;</ept>, <bpt id="8">&lt;code&gt;</bpt>e<ept id="8">&lt;/code&gt;</ept> или <bpt id="9">&lt;code&gt;</bpt>!<ept id="9">&lt;/code&gt;</ept> (логическое «не»);</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-li" xml:space="preserve">
<source xml:lang="ru">слова <bpt id="1">&lt;code&gt;</bpt>IE<ept id="1">&lt;/code&gt;</ept> отделенного с обеих сторон пробелами;</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-li" xml:space="preserve">
<source xml:lang="ru">номера версии (6, 7, 8, 9). Может отсутствовать, если указан квантор <bpt id="1">&lt;code&gt;</bpt>!<ept id="1">&lt;/code&gt;</ept>. Тогда, значение поля <bpt id="2">&lt;code&gt;</bpt>content<ept id="2">&lt;/code&gt;</ept> будет доступно для всех браузеров, кроме Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    block : 'page',
    head :
        {
            elem : 'conditional-comment',
            condition : '! IE',
            content : 'Not for IE'
        }
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-conditional-comment-declfields-msieOnly"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" resname="--msieonly-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>msieOnly<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Указывает на то, предназначен ли данный условный комментарий для использования исключительно в Internet Explorer. Со значением <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> поле можно не указывать.</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    block : 'page',
    head :
        {
            elem : 'conditional-comment',
            condition : '&gt; IE 8',
            msieOnly : false,
            content : 'For IE9+ and all other browsers'
        }
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="desktop.blocks/page/__conditional-comment/page__conditional-comment.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="-conditional-comments--page-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>conditional-comments<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>page<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({
    block : 'page',
    title : 'page__conditional-comments',
    head : [
        {
            elem : 'conditional-comment',
            condition : '&lt;= IE 8',
            content : { elem : 'css', url : '_page.ie.css' }
        },
        {
            elem : 'conditional-comment',
            condition : '! IE',
            content : 'Not for IE'
        },
        {
            elem : 'conditional-comment',
            condition : '&gt; IE 8',
            msieOnly : false,
            content : 'For IE9+ and all other browsers'
        }
    ],
    scripts : [
        {
            elem : 'conditional-comment',
            condition : 'lte IE 8',
            content : { elem : 'js', url : '//yastatic.net/es5-shims/0.0.1/es5-shims.min.js' }
        }
    ]
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="desktop.blocks/ua/ua.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="ua-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">ua</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На уровне <bpt id="1">&lt;code&gt;</bpt>desktop<ept id="1">&lt;/code&gt;</ept>, блок предоставляет объект, содержащий набор свойств, указывающих особенности браузера.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-chrome"&gt;</bpt>chrome<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип браузера: Google Chrome.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-opera"&gt;</bpt>opera<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип браузера: Opera.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-msie"&gt;</bpt>msie<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип браузера: Microsoft Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-mozilla"&gt;</bpt>mozilla<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип браузера: Mozilla Firefox.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-safari"&gt;</bpt>safari<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип браузера: Safari.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-webkit"&gt;</bpt>webkit<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Браузер построен на движке WebKit.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-version"&gt;</bpt>version<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия браузера.</source>
</trans-unit>
      <trans-unit id="tu29" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок позволяет определить:</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Тип браузера.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Совместимость с WebKit.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Версию браузера.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('ua', function(ua) {

console.dir(ua);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-chrome"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" resname="-chrome-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>chrome<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип браузера. <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если Google Chrome.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-opera"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" resname="-opera-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>opera<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип браузера. <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если Opera.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-msie"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" resname="-msie-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>msie<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип браузера. <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если Microsoft Internet Explorer.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-mozilla"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" resname="-mozilla-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>mozilla<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип браузера. <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если Mozilla Firefox.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-safari"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" resname="-safari-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>safari<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип браузера. <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если Safari.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-webkit"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" resname="-webkit-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>webkit<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если браузер построен на движке WebKit.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-version"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" resname="-version-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>version<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение – строка с версией браузера вида <bpt id="1">&lt;code&gt;</bpt>'600.2.5'<ept id="1">&lt;/code&gt;</ept> (для Safari). Если определить версию браузера не удается, в качестве значения устанавливается <bpt id="2">&lt;code&gt;</bpt>'0'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="touch.blocks/page/page.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="page-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">page</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На уровне переопределения <bpt id="1">&lt;code&gt;</bpt>touch.blocks<ept id="1">&lt;/code&gt;</ept> блок предоставляет шаблоны, создающие дополнительный набор HTML-элементов внутри <bpt id="2">&lt;code&gt;</bpt>head<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-meta-declfields-zoom"&gt;</bpt>zoom<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Наличие масштабирования.</source>
</trans-unit>
      <trans-unit id="tu11" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-icon"&gt;</bpt>icon<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет задать ссылку на значки Web Clips, для отображения на рабочем столе iOS при добавлении ссылки на сайт.</source>
</trans-unit>
      <trans-unit id="tu18" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля элементов блока</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-icon"&gt;</bpt>icon<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-icon-declfields-src"&gt;</bpt>src{X}<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Используются для указания пути к файлу значка.</source>
</trans-unit>
      <trans-unit id="tu27" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bh.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок создает HTML-элементы:</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> с атрибутом <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>'format-detection'<ept id="3">&lt;/code&gt;</ept>. Значением <bpt id="4">&lt;code&gt;</bpt>content<ept id="4">&lt;/code&gt;</ept> служит <bpt id="5">&lt;code&gt;</bpt>'telephone=no'<ept id="5">&lt;/code&gt;</ept>. Элемент отключает автоматическое распознавание телефонных номеров в html-коде и их набор по нажатию.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;link&gt;<ept id="1">&lt;/code&gt;</ept> с атрибутом <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>'apple-mobile-web-app-capable'<ept id="3">&lt;/code&gt;</ept>. Значением <bpt id="4">&lt;code&gt;</bpt>content<ept id="4">&lt;/code&gt;</ept> служит <bpt id="5">&lt;code&gt;</bpt>'yes'<ept id="5">&lt;/code&gt;</ept>. Элемент задает для страницы полноэкранный режим отображения на устройствах с iOS.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> с атрибутом <bpt id="2">&lt;code&gt;</bpt>name<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>'viewport'<ept id="3">&lt;/code&gt;</ept>. Элемент позволяет управлять масштабированием страницы. По умолчанию, масштабирование отключено. Для включения используйте специализированное поле <bpt id="4">&lt;code&gt;</bpt>zoom<ept id="4">&lt;/code&gt;</ept> со значением <bpt id="5">&lt;code&gt;</bpt>true<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Кроме того, к элементу </source>
</trans-unit>
      <trans-unit id="tu38" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/desktop.blocks/ua/ua.ru.md</source>
</trans-unit>
      <trans-unit id="tu37" xml:space="preserve">
<source xml:lang="ru"> с классом <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept> подмешивается блок <bpt id="2">&lt;a href="https://github.com/bem/bem-core/blob/v2/desktop.blocks/ua/ua.ru.md" [#$tu38]&gt;</bpt>ua<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" resname="---1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля блока</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-zoom"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" resname="--zoom-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>zoom<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Управляет масштабированием страницы. Определяет значение атрибута <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept> HTML-элемент <bpt id="2">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="2">&lt;/code&gt;</ept> с атрибутом <bpt id="3">&lt;code&gt;</bpt>name<ept id="3">&lt;/code&gt;</ept> в значении <bpt id="4">&lt;code&gt;</bpt>'viewport'<ept id="4">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-li" xml:space="preserve">
<source xml:lang="ru">со значением <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> – <bpt id="2">&lt;code&gt;</bpt>'initial-scale=1'<ept id="2">&lt;/code&gt;</ept>. Масштабирование включено. Масштаб по умолчанию устанавливается равным 100%.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-li" xml:space="preserve">
<source xml:lang="ru">без значения или <bpt id="1">&lt;code&gt;</bpt>false<ept id="1">&lt;/code&gt;</ept> – <bpt id="2">&lt;code&gt;</bpt>'maximum-scale=1,initial-scale=1,user-scalable=0'<ept id="2">&lt;/code&gt;</ept>. Масштаб по умолчанию устанавливается равным 100%. Масштабирование отключено.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Hello, World!',
    zoom : true,
    content : 'Включение масштабирования страницы'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-icon"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" resname="-icon-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>icon<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет задать ссылку на значки Web Clips, для отображения на рабочем столе iOS при добавлении ссылки на сайт. Ссылка задается через специализированное поле <bpt id="1">&lt;code&gt;</bpt>src{X}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-icon-declfields-src"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" resname="--srcx-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>src{X}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Поле вида <bpt id="1">&lt;code&gt;</bpt>src{X}<ept id="1">&lt;/code&gt;</ept> используются для указания пути к файлу значка. В зависимости от значения <bpt id="2">&lt;code&gt;</bpt>{X}<ept id="2">&lt;/code&gt;</ept> элемент <bpt id="3">&lt;code&gt;</bpt>icon<ept id="3">&lt;/code&gt;</ept> преобразуется в HTML-элемент:</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>src16<ept id="1">&lt;/code&gt;</ept> – <bpt id="2">&lt;code&gt;</bpt>&lt;link&gt;<ept id="2">&lt;/code&gt;</ept> c атрибутом <bpt id="3">&lt;code&gt;</bpt>rel<ept id="3">&lt;/code&gt;</ept> со значением <bpt id="4">&lt;code&gt;</bpt>'shortcut icon'<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>src57<ept id="1">&lt;/code&gt;</ept> – <bpt id="2">&lt;code&gt;</bpt>&lt;link&gt;<ept id="2">&lt;/code&gt;</ept> c атрибутами:
</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>sizes<ept id="1">&lt;/code&gt;</ept> со значением <bpt id="2">&lt;code&gt;</bpt>'57x57'<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>rel<ept id="1">&lt;/code&gt;</ept> со значением <bpt id="2">&lt;code&gt;</bpt>'apple-touch-icon-precomposed'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>src72<ept id="1">&lt;/code&gt;</ept> – <bpt id="2">&lt;code&gt;</bpt>&lt;link&gt;<ept id="2">&lt;/code&gt;</ept> c атрибутами:
</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>sizes<ept id="1">&lt;/code&gt;</ept> со значением <bpt id="2">&lt;code&gt;</bpt>'72x72'<ept id="2">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>rel<ept id="1">&lt;/code&gt;</ept> со значением <bpt id="2">&lt;code&gt;</bpt>'apple-touch-icon-precomposed'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>src114<ept id="1">&lt;/code&gt;</ept> – <bpt id="2">&lt;code&gt;</bpt>&lt;link&gt;<ept id="2">&lt;/code&gt;</ept> c атрибутом <bpt id="3">&lt;code&gt;</bpt>rel<ept id="3">&lt;/code&gt;</ept> со значением <bpt id="4">&lt;code&gt;</bpt>'apple-touch-icon-precomposed'<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Page title',
    head : { elem : 'icon', src72 : 'example.png' },
    content : 'Страница с подключенным значком'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="touch.blocks/ua/ua.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="ua-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">ua</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">На уровне <bpt id="1">&lt;code&gt;</bpt>touch<ept id="1">&lt;/code&gt;</ept>, блок предоставляет объект, содержащий набор свойств, указывающих особенности мобильного устройства.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-ua"&gt;</bpt>ua<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Значение HTTP-заголовка юзер-агента.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-ios"&gt;</bpt>ios<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{undefined}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы iOS.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-android"&gt;</bpt>android<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{undefined}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы Android.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-bada"&gt;</bpt>bada<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{undefined}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы Bada OS.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-wp"&gt;</bpt>wp<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{undefined}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы Windows Phone.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-other"&gt;</bpt>other<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Мобильная платформа неопределена.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-opera"&gt;</bpt>opera<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия браузера Opera.</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-chrome"&gt;</bpt>chrome<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия браузера Chrome.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-iphone"&gt;</bpt>iphone<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Устройство – iPhone.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-ipad"&gt;</bpt>ipad<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Устройство – iPad.</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-screenSize"&gt;</bpt>screenSize<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Размер экрана устройства.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-connection"&gt;</bpt>connection<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип активного соединения.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-dpr"&gt;</bpt>dpr<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Number}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Относительная плотность пикселей.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-flash"&gt;</bpt>flash<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{undefined}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия Adobe Flash.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-video"&gt;</bpt>video<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Поддержка видео.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-width"&gt;</bpt>width<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Number}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Ширина рабочей области экрана в px.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-height"&gt;</bpt>height<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Number}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Высота рабочей области экрана в px.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-landscape"&gt;</bpt>landscape<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Ориентация устройства.</source>
</trans-unit>
      <trans-unit id="tu62" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-dom"&gt;</bpt>dom<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu67" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Предоставляет набор модификаторов на основании свойств блока <bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept> на тач-уровне.</source>
</trans-unit>
      <trans-unit id="tu69" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы элемента блока</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Модификатор</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Допустимые значения</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-dom"&gt;</bpt>dom<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu76" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-platform"&gt;</bpt>platform<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu77" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'ios'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'android'<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>'bada'<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>'wp'<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>'other'<ept id="5">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu79" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Мобильная платформа пользовательского устройства.</source>
</trans-unit>
      <trans-unit id="tu80" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu81" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-browser"&gt;</bpt>browser<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'opera'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'chrome'<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип браузера.</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu86" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-ios"&gt;</bpt>ios<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'8'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'7'<ept id="2">&lt;/code&gt;</ept> ...</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu89" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия операционной системы для устройств iOS.</source>
</trans-unit>
      <trans-unit id="tu90" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu91" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-ios-subversion"&gt;</bpt>ios-subversion<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'81'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'80'<ept id="2">&lt;/code&gt;</ept> ...</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Подверсия операционной системы для устройств iOS.</source>
</trans-unit>
      <trans-unit id="tu95" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu96" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-android"&gt;</bpt>android<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'4'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'3'<ept id="2">&lt;/code&gt;</ept> ...</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Версия операционной системы для устройств Android.</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu101" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-screen-size"&gt;</bpt>screen-size<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu102" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'large'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'normal'<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>'small'<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu103" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu104" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Размер экрана устройства.</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu106" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-svg"&gt;</bpt>svg<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu107" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'yes'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'no'<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu108" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu109" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Поддержка формата SVG.</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu111" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-orient"&gt;</bpt>orient<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu112" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>'landscape'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'portrait'<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu113" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu114" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Ориентация устройства.</source>
</trans-unit>
      <trans-unit id="tu115" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu118" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bh.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu119" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu120" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок позволяет определить:</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Версию мобильной платформы.</source>
</trans-unit>
      <trans-unit id="tu123" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Типа браузера.</source>
</trans-unit>
      <trans-unit id="tu124" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Версию браузера.</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Тип соединения.</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Наличие поддержки видео и SVG.</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Поддержку технологии Adobe Flash.</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Ориентацию и размер экрана.</source>
</trans-unit>
      <trans-unit id="tu129" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Соотношение сторон экрана устройства.</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('ua', function(ua) {

console.dir(ua);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu131" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu132" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-ua"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu134" resname="-ua-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип мобильного браузера.</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-ios"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu138" resname="-ios-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>ios<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu139" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String|undefined}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы. Строка с номером версии, если платформа распознана как iOS.</source>
</trans-unit>
      <trans-unit id="tu141" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-android"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu142" resname="-android-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>android<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu143" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String|undefined}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы. Строка с номером версии, если платформа распознана как Android.</source>
</trans-unit>
      <trans-unit id="tu145" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-bada"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu146" resname="-bada-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>bada<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu147" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String|undefined}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu148" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы. Строка с номером версии, если платформа распознана как Bada OS.</source>
</trans-unit>
      <trans-unit id="tu149" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-wp"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu150" resname="-wp-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>wp<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu151" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String|undefined}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия мобильной платформы. Строка с номером версии, если платформа распознана как Windows Phone.</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-other"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu154" resname="-other-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>other<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu155" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Мобильная платформа неопределена. Устанавливается в значение <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> для всех мобильных платформ, кроме вышеперечисленных.</source>
</trans-unit>
      <trans-unit id="tu157" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-opera"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu158" resname="-opera-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>opera<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu159" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu160" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия браузера Opera.</source>
</trans-unit>
      <trans-unit id="tu161" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-chrome"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu162" resname="-chrome-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>chrome<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu163" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия браузера Chrome.</source>
</trans-unit>
      <trans-unit id="tu165" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-iphone"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu166" resname="-iphone-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>iphone<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu167" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu168" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> характеризует устройство как iPhone.</source>
</trans-unit>
      <trans-unit id="tu169" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-ipad"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu170" resname="-ipad-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>ipad<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu171" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> характеризует устройство как iPad.</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-screenSize"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu174" resname="-screensize-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>screenSize<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu175" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Размер экрана устройства.</source>
</trans-unit>
      <trans-unit id="tu177" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступны следующие значения:</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>large<ept id="1">&lt;/code&gt;</ept> – размер экрана больше 320 px.</source>
</trans-unit>
      <trans-unit id="tu179" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>normal<ept id="1">&lt;/code&gt;</ept> – размер экрана равен 320 px.</source>
</trans-unit>
      <trans-unit id="tu180" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>small<ept id="1">&lt;/code&gt;</ept> – размер экрана меньше 320 px.</source>
</trans-unit>
      <trans-unit id="tu181" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-connection"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu182" resname="-connection-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>connection<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu183" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu184" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип активного сетевого соединения.</source>
</trans-unit>
      <trans-unit id="tu185" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступны следующие значения:</source>
</trans-unit>
      <trans-unit id="tu186" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>wifi<ept id="1">&lt;/code&gt;</ept> – соединение по Wi-Fi.</source>
</trans-unit>
      <trans-unit id="tu187" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>3g<ept id="1">&lt;/code&gt;</ept> – соединение по 3G.</source>
</trans-unit>
      <trans-unit id="tu188" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>2g<ept id="1">&lt;/code&gt;</ept> – соединение по EDGE и GSM.</source>
</trans-unit>
      <trans-unit id="tu189" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-dpr"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu190" resname="-dpr-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>dpr<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu191" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Number}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu192" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Коэффициент относительной плотности пикселей. Характеризует отношение физических пикселей устройства к аппаратно независимым (dppx). Позволяет определить использует ли устройство дисплей с повышенной плотностью пикселей (например, Retina). По умолчанию <bpt id="1">&lt;code&gt;</bpt>1<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu193" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, можно проверить, что устройство использует Retina и отдавать браузеру изображения с высоким разрешением:</source>
</trans-unit>
      <trans-unit id="tu194" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('ua', function(ua) {

var imgFile = ua.dpr === 1 ? 'image.png' : 'image@2x.png';
// ···

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu195" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-flash"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu196" resname="-flash-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>flash<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu197" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String|undefined}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu198" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Версия Adobe Flash. <bpt id="1">&lt;code&gt;</bpt>undefined<ept id="1">&lt;/code&gt;</ept>, если Flash недоступен.</source>
</trans-unit>
      <trans-unit id="tu199" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-video"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu200" resname="-video-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>video<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu201" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu202" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если видео поддерживается.</source>
</trans-unit>
      <trans-unit id="tu203" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-svg"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu204" resname="-svg-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>svg<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu205" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu206" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept>, если SVG поддерживается.</source>
</trans-unit>
      <trans-unit id="tu207" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-width"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu208" resname="-width-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>width<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu209" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Number}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu210" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Ширина рабочей области экрана в пикселях.</source>
</trans-unit>
      <trans-unit id="tu211" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-height"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu212" resname="-height-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>height<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu213" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Number}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu214" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Высота рабочей области экрана в пикселях.</source>
</trans-unit>
      <trans-unit id="tu215" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-landscape"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu216" resname="-landscape-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>landscape<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu217" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu218" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение <bpt id="1">&lt;code&gt;</bpt>true<ept id="1">&lt;/code&gt;</ept> при горизонтальной ориентации.</source>
</trans-unit>
    </body>
  </file>
  <file original="touch.blocks/ua/__dom/ua__dom.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><it id="1" pos="open">&lt;a preserve="1" name="#elems-dom"&gt;</it></source>
</trans-unit>
      <trans-unit id="tu2" resname="-dom--ua-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>dom<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>ua<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент служит для дополнения базовой БЭМ-сущности блока <bpt id="1">&lt;code&gt;</bpt>ua<ept id="1">&lt;/code&gt;</ept> набором модификаторов на основе данных, собранных блоком <bpt id="2">&lt;code&gt;</bpt>ua<ept id="2">&lt;/code&gt;</ept> на touch-уровне.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Это позволяет учитывать особенности мобильного устройства, проверяя наличие и значение модификаторов.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('ios-test', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    onSetMod: {
        js: {
            inited: function() {
                this.findBlockOutside('ua').hasMod('platform', 'ios') &amp;&amp;
                    this.setMod('ios');
            }
        },
        'ios': function() {
            console.log('You are iOS user');
        }
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент автоматически подключается с блоком <bpt id="1">&lt;code&gt;</bpt>page<ept id="1">&lt;/code&gt;</ept>. Не требуется подключать его вручную, если в проекте используется <bpt id="2">&lt;code&gt;</bpt>page<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu8" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Модификаторы элемента</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значения всех модификаторов элемента, кроме <bpt id="1">&lt;code&gt;</bpt>orient<ept id="1">&lt;/code&gt;</ept>, устанавливаются в момент инициализации блока и остаются неизменными.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-platform"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" resname="-platform-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>platform<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'ios'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'android'<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>'bada'<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>'wp'<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>'other'<ept id="5">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает мобильную платформу пользовательского устройства.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ios<ept id="1">&lt;/code&gt;</ept> – iOS.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>android<ept id="1">&lt;/code&gt;</ept> – Android.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bada<ept id="1">&lt;/code&gt;</ept> – Bada OS.</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>wp<ept id="1">&lt;/code&gt;</ept> – Windows Phone.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>other<ept id="1">&lt;/code&gt;</ept> – все остальные мобильные платформы.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-browser"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" resname="-browser-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>browser<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'opera'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'chrome'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает тип мобильного браузера.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>opera<ept id="1">&lt;/code&gt;</ept> – Opera.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>chrome<ept id="1">&lt;/code&gt;</ept> – Chrome.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-ios"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" resname="-ios-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>ios<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'8'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'7'<ept id="2">&lt;/code&gt;</ept> ...</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает версию операционной системы для устройств iOS.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-ios-subversion"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="-ios-subversion-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>ios-subversion<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'81'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'80'<ept id="2">&lt;/code&gt;</ept> ...</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает подверсию операционной системы для устройств iOS. Номер подверсии состоит из номера версии и первого символа после разделителя. Номер указывается без символов-разделителей <bpt id="1">&lt;code&gt;</bpt>'.'<ept id="1">&lt;/code&gt;</ept>. Например, для iOS версии 8.1.3 значением модификатора будет <bpt id="2">&lt;code&gt;</bpt>'81'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-android"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="-android-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>android<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'4'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'3'<ept id="2">&lt;/code&gt;</ept> ...</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает версию операционной системы для устройств Android.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-screen-size"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" resname="-screen-size-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>screen-size<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'large'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'normal'<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>'small'<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает размер экрана пользовательского устройства.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>large<ept id="1">&lt;/code&gt;</ept> – размер экрана больше 320 px.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>normal<ept id="1">&lt;/code&gt;</ept> – размер экрана равен 320 px.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>small<ept id="1">&lt;/code&gt;</ept> – размер экрана меньше 320 px.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-svg"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" resname="-svg-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>svg<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'yes'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'no'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает на наличие у пользовательского устройства поддержки формата SVG.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>yes<ept id="1">&lt;/code&gt;</ept> – поддержка SVG присутствует.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>no<ept id="1">&lt;/code&gt;</ept> – поддержка SVG отсутствует.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-orient"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" resname="-orient-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>orient<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'landscape'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'portrait'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор указывает текущую ориентацию устройства.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>landscape<ept id="1">&lt;/code&gt;</ept> – горизонтальная ориентация.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>portrait<ept id="1">&lt;/code&gt;</ept> – вертикальная ориентация.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значение модификатора изменяется динамически при смене ориентации устройства. Поэтому можно подписываться на изменение значения модификатора:</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('inner', ['i-bem__dom'], function(provide, BEMDOM) {

provide(BEMDOM.decl(this.name, {
    onSetMod: {
        js: {
            inited: function() {
                this._ua = this
                    .findBlockOutside('ua')
                    .on({ modName : 'orient', modVal : '*' }, this._onOrientChange, this);

                this.setMod('orient', this._ua.getMod('orient'));
            },
            '': function() {
                this._ua.un({ modName : 'orient', modVal : '*' }, this._onOrientChange, this);
            }
        },

        'orient': {
            'portrait': function() {
                this._reDraw('portrait');
            },
            'landscape': function() {
                this._reDraw('landscape');
            }
        }
    },

    _onOrientChange: function(e, data) {
        // переключаемся между значениям собственного модификатора `orient`
        this.setMod(data.modName, data.modVal);
    },

    _reDraw: function(orient) {
        // обновляем содержимое контейнера `inner` при смене ориентации устройства
        console.log(orient);
        BEMDOM.update(this.domElem, orient);
    }
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В примере блок-контейнер <bpt id="1">&lt;code&gt;</bpt>inner<ept id="1">&lt;/code&gt;</ept>, вложенный в <bpt id="2">&lt;code&gt;</bpt>page<ept id="2">&lt;/code&gt;</ept>, подменяет свое содержимое при смене ориентации устройства.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/tick/tick.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="tick-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">tick</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект для работы с регулярно генерируемым событием <bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept> (для реализации паттерна polling).</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">События объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-tick"&gt;</bpt>tick<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Регулярно генерируемое событие.</source>
</trans-unit>
      <trans-unit id="tu9" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-start"&gt;</bpt>start<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Запускает генерацию события <bpt id="1">&lt;code preserve="1"&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept>, если она еще не запущена.</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-stop"&gt;</bpt>stop<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Останавливает генерацию события <bpt id="1">&lt;code preserve="1"&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept>, если она еще не остановлена.</source>
</trans-unit>
      <trans-unit id="tu19" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Модификатор</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Допустимые значения</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-start"&gt;</bpt>start<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>'auto'<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Автоматический запуск генерации события</source>
</trans-unit>
      <trans-unit id="tu28" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">События объекта</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-tick"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu35" resname="-tick-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>tick<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подписавшись на событие, можно использовать его для реализации паттерна polling.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Событие генерируется с интервалом в 50 миллисекунд.</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок наследуется от клсаса <bpt id="1">&lt;code&gt;</bpt>Emitter<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept>, что позволяет вызывать методы класса.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('tick', function(tick) {

var update = function() { /* ... */ };

tick
    .on('tick', update) // подписываемся на событие tick 
    .start(); // запускаем генерацию события tick

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-start"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" resname="-start-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>start<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Запускает генерацию события <bpt id="1">&lt;a href="#fields-tick"&gt;</bpt>tick<ept id="1">&lt;/a&gt;</ept>, если они еще не запущены. Событие <bpt id="2">&lt;code&gt;</bpt>tick<ept id="2">&lt;/code&gt;</ept> генерируется через интервал в 50 миллисекунд после вызова метода.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-stop"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" resname="-stop-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>stop<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Останавливает генерацию события <bpt id="1">&lt;a href="#fields-tick"&gt;</bpt>tick<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-start"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" resname="-start-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>start<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'auto'<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок с модификатором <bpt id="1">&lt;code&gt;</bpt>start<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>auto<ept id="2">&lt;/code&gt;</ept> используется для автоматического запуска генерации события <bpt id="3">&lt;a href="#fields-tick"&gt;</bpt>tick<ept id="3">&lt;/a&gt;</ept>. Событие начинает генерироваться в момент инициализации блока.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/next-tick/next-tick.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="next-tick-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">next-tick</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет функцию, производящую асинхронный вызов callback-функции, переданной аргументом, в следующем витке событийного цикла.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>next-tick<ept id="1">&lt;/code&gt;</ept> – полифил, реализующий:</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru">симуляцию событийного цикла для старых версий браузеров;</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">унифицированный интерфейс для работы с различными браузерами и NodeJS.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Функция подходит для случаев, когда нужно, чтобы callback был выполнен после того, как другие функции в рамках событийного цикла отработали. Например, чтобы убедиться что доступны данные, динамически вычислявшиеся в текущем цикле.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>fn<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Function}<ept id="2">&lt;/code&gt;</ept> – функция, которую нужно вызвать в следующем событийном цикле. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['next-tick', 'events'], function(nextTick, events) {
    var event = new events.Event();

    nextTick(function() { event.emit('click') }); 

    // ··· 

    event.on('click', function(e) { console.log(e.type) })
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" resname="--callback-id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Порядок вызова callback</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В рамках событийного цикла работы блок формирует очередь, добавляя каждую следующую callback функцию в ее конец. Порядок вызова callback сохраняется. Например:</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['next-tick'], function(nextTick) {
    var order = [];

    nextTick(function() { order.push(1); });
    nextTick(function() { order.push(2); });
    nextTick(function() { order.push(3); });
    nextTick(function() { console.log(order)); }; // should be [1, 2, 3]
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" resname="---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/cookie/cookie.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="cookie-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">cookie</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект, содержащий набор методов для работы с куки браузера (JS-свойство <bpt id="1">&lt;code&gt;</bpt>document.cookie<ept id="1">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-get"&gt;</bpt>get<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} name<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{null}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Cлужит для получения значения, хранящегося в куки браузера.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-set"&gt;</bpt>set<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} name<ept id="2">&lt;/code&gt;</ept>, <ph id="3">&lt;br&gt;</ph><bpt id="4">&lt;code preserve="1"&gt;</bpt>{String} val<ept id="4">&lt;/code&gt;</ept>, <ph id="5">&lt;br&gt;</ph><bpt id="6">&lt;code preserve="1"&gt;</bpt>[{Object} options]<ept id="6">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Cлужит для записи куки с заданным именем.</source>
</trans-unit>
      <trans-unit id="tu14" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-get"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" resname="-get-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>get<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод служит для получения значения, хранящегося в куки, для имени переданного аргументом.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>name<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – имя куки. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение:</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> в случае если куки с заданным именем было установлено. Значение автоматически декодируется с помощью <bpt id="2">&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent" [#$tu27]&gt;</bpt>decodeURIComponent<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>null<ept id="1">&lt;/code&gt;</ept> если куки с заданным именем отсутствует.</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('cookie', function(cookie) {

cookie.set('mycookie', 'foobar');
console.log(cookie.get('mycookie')); // 'foobar'
console.log(cookie.get('foo')); // null
    
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-set"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" resname="-set-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>set<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод служит для записи куки с заданным именем. Помимо имени и значения, методу можно передать хеш с дополнительными параметрами куки.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>name<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – имя куки. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>val<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> | <bpt id="3">&lt;code&gt;</bpt>{null}<ept id="3">&lt;/code&gt;</ept> – строка со значением, ассоциируемым с именем. При установке в качестве значения <bpt id="4">&lt;code&gt;</bpt>null<ept id="4">&lt;/code&gt;</ept> куки будет удалено. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>options<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] – хеш с дополнительными параметрами. В хеше допустимы следующие свойства:
</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>expires<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Number}<ept id="2">&lt;/code&gt;</ept> – срок жизни куки в сутках. При отрицательном значении куки будет удалено. Альтернативно, можно передать в качестве значения сформированный объект даты (<bpt id="3">&lt;code&gt;</bpt>new Date()<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>path<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – путь от корня домена внутри которого будет доступно куки.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>domain<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – домен в явном виде. По умолчанию – текущий.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>secure<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept> – логический флаг, указывающий на необходимость принудительного использования с куки шифрованного соединения SSL. По умолчанию <bpt id="3">&lt;code&gt;</bpt>false<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращает объект <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('cookie', function(cookie) {

cookie.set('mycookie', 'foobar', {
    expires : 1, // срок жизни одни сутки
    path : '/', // доступно для всех страниц домена
    secure : true // передавать куки только по SSL
});
console.log(cookie.get('mycookie')); // 'foobar'

cookie.set('mycookie', null }); // удаляем куки
console.log(cookie.get('mycookie')); // null

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/objects/objects.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="objects-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">objects</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект, содержащий набор методов для работы с объектами JavaScript.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-extend"&gt;</bpt>extend<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{Object} target<ept id="3">&lt;/code&gt;</ept>, <ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>{Object} source<ept id="5">&lt;/code&gt;</ept><it id="6" pos="close">&lt;/code&gt;</it>)</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Расширяет объект свойствами другого объекта.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isEmpty"&gt;</bpt>isEmpty<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{Object} obj<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет выяснить пуст ли переданный объект.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-each"&gt;</bpt>each<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{Object} obj<ept id="3">&lt;/code&gt;</ept>, <ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>{Function} fn<ept id="5">&lt;/code&gt;</ept>, <ph id="6">&lt;br&gt;</ph><bpt id="7">&lt;code preserve="1"&gt;</bpt>[{Object} ctx]<ept id="7">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Итеративно обходит собственные свойства объекта.</source>
</trans-unit>
      <trans-unit id="tu17" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-extend"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" resname="-extend-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>extend<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Расширяет объект свойствами другого объекта. Копируются только собственные свойства, не полученные по цепочке прототипов.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>target<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – целевой объект. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>source<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – объект, свойства которого добавляются к целевому. Может быть передано несколько объектов. Свойства каждого из них будут добавлены к целевому. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>. Целевой объект с добавленными свойствами.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['objects'], function(objects) {
    var obj1 = { a : 1, b : 2 },
        obj2 = { b : 3, c : 4 };

    console.log(objects.extend(obj1, obj2)); // { a : 1, b : 3, c : 4 }
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isEmpty"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" resname="-isempty-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isEmpty<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет выяснить пуст ли переданный объект. Другими словами, имеет ли объект собственные свойства.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>obj<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – объект для проверки. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. В случае, если объект не имеет собственных свойств – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['objects'], function(objects) {
    var obj1 = {},
        obj2 = { foo : 'bar' };

    console.log(objects.isEmpty(obj1)); // true
    console.log(objects.isEmpty(obj2)); // false
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-each"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" resname="-each-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>each<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для итерации по собственным свойствам объекта. Для каждого собственного свойства вызывается функция-обработчик.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>obj<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – объект, обход свойств которого производится. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>fn<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Function}<ept id="2">&lt;/code&gt;</ept> – функция-обработчик, вызываемая для каждого свойства. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>ctx<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] – контекст обработчика.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Функция-обработчик получает в качестве аргументов значение и ключ свойства объекта, для которого была вызвана.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['objects'], function(objects) {
    objects.each(
        { a : 1, b : 2 },
        function(val, key) {
            console.log(key, val);
        });
    // a 1
    // b 2
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/page/page.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="page-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">page</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет шаблоны, создающие набор HTML-элементов верхнего уровня страницы: <bpt id="1">&lt;code&gt;</bpt>&lt;html&gt;<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>&lt;head&gt;<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>&lt;body&gt;<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-doctype"&gt;</bpt>doctype<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет переопределить строку DTD текущего документа.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-title"&gt;</bpt>title<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет указать содержимое <bpt id="1">&lt;code&gt;</bpt>&lt;title&gt;<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-favicon"&gt;</bpt>favicon<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет указать URL значка страницы (фавиконки).</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-head"&gt;</bpt>head<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет дополнить содержимое <bpt id="1">&lt;code&gt;</bpt>&lt;head&gt;<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-styles"&gt;</bpt>styles<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет подключать таблицы стилей CSS.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-scripts"&gt;</bpt>scripts<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет подключать скрипты в тело документа.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-content"&gt;</bpt>content<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет указать содержимое страницы.</source>
</trans-unit>
      <trans-unit id="tu29" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css"&gt;</bpt>css<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu35" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для подключения CSS по ссылке или в виде строки.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-js"&gt;</bpt>js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для подключения JS по ссылке или в виде строки.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-meta"&gt;</bpt>meta<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMJSON<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для создания HTML-элементов <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu42" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля элементов блока</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css"&gt;</bpt>css<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css-declfields-url"&gt;</bpt>url<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет задать URL для загрузки стилей.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu52" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css-declfields-content"&gt;</bpt>content<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для задания стилей в виде строки</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-js"&gt;</bpt>js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css-declfields-url"&gt;</bpt>url<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет задать URL для загрузки скрипта.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu60" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-css-declfields-content"&gt;</bpt>content<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для задания скриптов в виде строки</source>
</trans-unit>
      <trans-unit id="tu63" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bh.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu67" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок отвечает за создание HTML-элементов верхнего уровня, подключение к странице CSS, JS, элементов <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> и указание заголовка. Для этого в BEMJSON-декларации блока и элементов блока зарезервированы специализированные поля.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" resname="---1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля блока</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-doctype"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="-doctype-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>doctype<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет явно указать строку с DTD (Document Type Definition) текущего документа. Если свойство не задано, по умолчанию будет использоваться <bpt id="1">&lt;code&gt;</bpt>&lt;!DOCTYPE html&gt;<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-title"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu76" resname="-title-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>title<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu77" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Название страницы. Становится HTML-элементом <bpt id="1">&lt;code&gt;</bpt>&lt;title&gt;<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    content : 'Блок page'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu80" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-favicon"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" resname="-favicon-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>favicon<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет указать URL значка страницы (фавиконки):</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    favicon : 'favicon.ico',
    content : 'Страница с пользовательской фавиконкой'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-head"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu86" resname="-head-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>head<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет дополнить содержимое <bpt id="1">&lt;code&gt;</bpt>HTML<ept id="1">&lt;/code&gt;</ept>-элемента <bpt id="2">&lt;code&gt;</bpt>&lt;head&gt;<ept id="2">&lt;/code&gt;</ept>, определенное в шаблоне блока:</source>
</trans-unit>
      <trans-unit id="tu89" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    head: [
        { elem : 'js', url : 'jquery-min.js' },
        { elem : 'meta', attrs : { name : 'description', content : 'Yet another webdev blog' } }
    ],
    content : 'Страница с подключенным JS и meta-данными'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-styles"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu91" resname="-styles-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>styles<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет подключить <bpt id="1">&lt;code&gt;</bpt>CSS<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu94" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    styles : { elem : 'css', url : '_index.css' },
    content : 'Страница с подключенным CSS'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-scripts"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu96" resname="-scripts-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>scripts<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu98" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет подключать JS в тело страницы в конец HTML-элемента <bpt id="1">&lt;code&gt;</bpt>&lt;body&gt;<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu99" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    scripts : { elem : 'js', url : '_index.js' },
    content : 'Страница со скриптом подключенным в body'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-content"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu101" resname="-content-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{BEMJSON}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu103" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет указать содержимое страницы.</source>
</trans-unit>
      <trans-unit id="tu104" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    content : {
        block : 'link',
        mods : { pseudo : 'yes', togcolor : 'yes', color : 'green' },
        url : '#',
        target : '_blank',
        title : 'Кликни меня',
        content : 'Псевдоссылка, меняющая цвет по клику'
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu106" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu107" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-css"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu108" resname="-css-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>css<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu109" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для подключения CSS по ссылке или в виде строки. В зависимости от того, указано ли в декларации элемента поле <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept>, создается HTML-элемент с тегом:</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;link&gt;<ept id="1">&lt;/code&gt;</ept> и свойством <bpt id="2">&lt;code&gt;</bpt>stylesheet<ept id="2">&lt;/code&gt;</ept>, если <bpt id="3">&lt;code&gt;</bpt>url<ept id="3">&lt;/code&gt;</ept> есть.</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>&lt;style&gt;<ept id="1">&lt;/code&gt;</ept>, если поле <bpt id="2">&lt;code&gt;</bpt>url<ept id="2">&lt;/code&gt;</ept> неуказано. В этом случае предполагается, что содержимое элемента передается с помощью свойства <bpt id="3">&lt;code&gt;</bpt>content<ept id="3">&lt;/code&gt;</ept> BEMJSON-декларации элемента.</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-css-declfields-content"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu113" resname="--content-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu114" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для явной передачи содержимого HTML-элементу <bpt id="1">&lt;code&gt;</bpt>&lt;style&gt;<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Page title',
    styles : {
        elem : 'css',
        content : '.page { color: #f00 }'
    },
    content : 'Страница с тэгом &lt;style&gt;'
 }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu117" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-css-declfields-url"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu118" resname="--url-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu119" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет задать URL для загрузки таблицы CSS. Значение поля <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept> BEMJSON-декларации передается свойству <bpt id="2">&lt;code&gt;</bpt>href<ept id="2">&lt;/code&gt;</ept> создаваемого HTML-элемента.</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-js"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu122" resname="-js-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu123" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для подключения JS по ссылке или в виде строки. Создает HTML-элемент <bpt id="1">&lt;code&gt;</bpt>&lt;script&gt;<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu124" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-js-declfields-content"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu125" resname="--content-1-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>content<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu126" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для явной передачи содержимого HTML-элементу <bpt id="1">&lt;code&gt;</bpt>&lt;script&gt;<ept id="1">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu128" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Page title',
    scripts : {
        elem : 'js',
        content : 'console.log(document.title)'
    },
    content : 'Страница с тэгом &lt;script&gt;'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu129" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-js-declfields-url"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu130" resname="--url-1-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированное поле <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu131" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>String<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu132" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет задать URL для загрузки скрипта. Значение поля <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept> BEMJSON-декларации передается свойству <bpt id="2">&lt;code&gt;</bpt>src<ept id="2">&lt;/code&gt;</ept> создаваемого HTML-элемента.</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Page title',
    styles : { elem : 'css', url : '_index.css' },
    content : 'Страница с тэгом style'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu134" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-meta"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu135" resname="-meta-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>meta<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu136" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для создания HTML-элементов <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> и указания для них пользовательских метаданных. Метаданные передаются как ключи и значения хеша атрибутов – свойства <bpt id="2">&lt;code&gt;</bpt>attrs<ept id="2">&lt;/code&gt;</ept> BEMJSON-декларации элемента:</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block : 'page',
    title : 'Заголовок страницы',
    head : [
        { elem : 'css', url : 'example.css' },
        { elem : 'meta', attrs : { name : 'keywords', content : 'js, css, html' } }
    ],
    content : 'Страница с подключенным CSS и meta-данными'
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu139" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</source>
</trans-unit>
      <trans-unit id="tu138" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подробнее смотрите в документации к <bpt id="1">&lt;code&gt;</bpt>&lt;meta&gt;<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta" [#$tu139]&gt;</bpt>на MDN<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/clearfix/clearfix.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="clearfix-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">clearfix</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.456bereastreet.com/archive/200603/new_clearing_method_needed_for_ie7/</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет СSS-класс, реализующий прием верстки <bpt id="1">&lt;strong&gt;</bpt>clearfix<ept id="1">&lt;/strong&gt;</ept>, также известный как <bpt id="2">&lt;a href="http://www.456bereastreet.com/archive/200603/new_clearing_method_needed_for_ie7/" [#$tu3]&gt;</bpt>Easy Clearing Hack<ept id="2">&lt;/a&gt;</ept>. Прием позволяет отменить обтекание для элементов с CSS-свойством <bpt id="3">&lt;code&gt;</bpt>float<ept id="3">&lt;/code&gt;</ept>, без внесения изменений в исходную HTML-структуру документа.</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок можно использовать в качестве контейнера для элементов со свойством <bpt id="1">&lt;code&gt;</bpt>float<ept id="1">&lt;/code&gt;</ept>, или примешивая его к такому контейнеру.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пример использования в качестве контейнера:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>[{
    block: 'header',
    attrs: { style: 'border: 2px solid blue;' },
    content: 'Top element'
},
{
    block: 'clearfix',
    attrs: { style: 'border: 2px dotted yellow;' },
    content: [
    {
        block: 'float',
        attrs: { style: 'float: left; border: 1px solid green;' },
        content: 'Floating item 1'
    },
    {
        block: 'float',
        attrs: { style: 'float: left; border: 1px solid green;' },
        content: 'Floating item 2'
    }]
},
{
    block: 'footer',
    attrs: { style: 'border: 2px solid red' },
    content: 'Footer'
}]<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Примешивание к блоку-контейнеру:</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>[{
    block: 'header',
    attrs: { style: 'border: 2px solid blue;' },
    content: 'Top element'
},
{
    block: 'some-container',
    mix: [{ block: 'clearfix' }],
    attrs: { style: 'border: 2px dotted yellow;' },
    content: [
    {
        block: 'float',
        attrs: { style: 'float: left; border: 1px solid green;' },
        content: 'Floating item 1'
    },
    {
        block: 'float',
        attrs: { style: 'float: left; border: 1px solid green;' },
        content: 'Floating item 2'
    }]
},
{
    block: 'footer',
    attrs: { style: 'border: 2px solid red' },
    content: 'Footer'
}]<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>css<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/loader/loader.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="loader-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">loader</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>loader<ept id="1">&lt;/code&gt;</ept> служит для загрузки и подключения скриптов по URL.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Модификатор</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Допустимые значения</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-type"&gt;</bpt>type<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>'js'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code preserve="1"&gt;</bpt>'bundle'<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет по URL получить и подключить JS-код или бандл.</source>
</trans-unit>
      <trans-unit id="tu13" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Функции, подключаемые модификаторами блока</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Модификатор</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Функция</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-type-js"&gt;</bpt>js<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">loader(<ph id="1">&lt;br&gt;</ph><bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} id<ept id="2">&lt;/code&gt;</ept>, <ph id="3">&lt;br&gt;</ph><bpt id="4">&lt;code preserve="1"&gt;</bpt>{String} url<ept id="4">&lt;/code&gt;</ept>, <ph id="5">&lt;br&gt;</ph><bpt id="6">&lt;code preserve="1"&gt;</bpt>[{Function} success]<ept id="6">&lt;/code&gt;</ept>, <ph id="7">&lt;br&gt;</ph><bpt id="8">&lt;code preserve="1"&gt;</bpt>[{Function} error]<ept id="8">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Загружает и подключает фрагмент JavaScript-кода.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-type-bundle"&gt;</bpt>bundle<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru">loader(<ph id="1">&lt;br&gt;</ph><bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} url<ept id="2">&lt;/code&gt;</ept>, <ph id="3">&lt;br&gt;</ph><bpt id="4">&lt;code preserve="1"&gt;</bpt>{Function} success<ept id="4">&lt;/code&gt;</ept>, <ph id="5">&lt;br&gt;</ph><bpt id="6">&lt;code preserve="1"&gt;</bpt>[{Function} error]<ept id="6">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Загружает и подключает пакет, собранный из CSS и JS-файлов – «бандл».</source>
</trans-unit>
      <trans-unit id="tu26" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="-type-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предоставляет набор функций для загрузки и подключение различных типов данных.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'js'<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>'bundle'<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: <bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В зависимости от значения модификатора <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> блок <bpt id="2">&lt;code&gt;</bpt>loader<ept id="2">&lt;/code&gt;</ept> позволяет получить по URL и подключить:</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept> – фрагмент JS-кода.<ph id="2">&lt;br /&gt;</ph></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bundle<ept id="1">&lt;/code&gt;</ept> – пакет, собранный из CSS и JS-файлов – «бандл».</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type-js"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" resname="-type---js-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предоставляет функцию, позволяющую загрузить и подключить фрагмент JS-кода.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>url<ept id="2">&lt;/code&gt;</ept> – URL загружаемого фрагмента JS-кода. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>success<ept id="2">&lt;/code&gt;</ept>] – callback-функция, выполняемая по завершению загрузки кода.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>error<ept id="2">&lt;/code&gt;</ept>] – callback-функция, выполняемая при ошибке в ходе загрузки кода.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, <bpt id="1">&lt;code&gt;</bpt>loader_type_js<ept id="1">&lt;/code&gt;</ept> может использоваться для загрузки и подключения jQuery:</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('jquery', ['loader_type_js'], function(provide, loader) {

    loader(
        ‘//yastatic.net/jquery/2.1.4/jquery.min.js',
        function() { provide(jQuery) });

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/jquery/jquery.js</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Расширенный пример смотрите в блоке <bpt id="1">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/jquery/jquery.js" [#$tu51]&gt;</bpt>common.blocks/jquery<ept id="1">&lt;/a&gt;</ept> библиотеки <bpt id="2">&lt;code&gt;</bpt>bem-core<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type-bundle"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" resname="-type---bundle-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>bundle<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предоставляет функцию, позволяющую загрузить и подключить пакет, собранный из CSS и JS-файлов – «бандл».</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> – идентификатор бандла. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>url<ept id="2">&lt;/code&gt;</ept> – путь до файла бандла в формате URL. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>onSuccess<ept id="2">&lt;/code&gt;</ept> – callback, вызываемая по завершению загрузки бандла. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>onError<ept id="2">&lt;/code&gt;</ept>] – callback, вызываемая при неудачной загрузке бандла.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/forum/</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Спецификации технологии <bpt id="1">&lt;code&gt;</bpt>bundle<ept id="1">&lt;/code&gt;</ept> находятся в процессе разработки. Для получения детальной информации пишите на <bpt id="2">&lt;a href="https://ru.bem.info/forum/" [#$tu62]&gt;</bpt>форум<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu63" resname="--_loaded-id" restype="x-h6" xml:space="preserve">
<source xml:lang="ru">Статический метод <bpt id="1">&lt;code&gt;</bpt>_loaded<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Функция, подключаемая с модификатором <bpt id="1">&lt;code&gt;</bpt>type_bundle<ept id="1">&lt;/code&gt;</ept>, обладает статическим методом – <bpt id="2">&lt;code&gt;</bpt>_loaded<ept id="2">&lt;/code&gt;</ept>. Он используется как вспомогательный после успешной загрузки бандла.</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> – идентификатор бандла. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/inherit/inherit.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="inherit-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">inherit</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет функцию, реализующую механизмы для объявления и наследования классов.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Способы использования функции</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способ</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Сигнатура</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#runmode-declare"&gt;</bpt>Объявление базового класса<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">inherit(<ph id="1">&lt;br&gt;</ph><bpt id="2">&lt;code preserve="1"&gt;</bpt>{Object} props<ept id="2">&lt;/code&gt;</ept>, <ph id="3">&lt;br&gt;</ph><bpt id="4">&lt;code preserve="1"&gt;</bpt>[{Object} staticProps]<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для создания (декларации), базового класса на основе свойств объекта.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#runmode-extend"&gt;</bpt>Создание производного класса<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru">inherit(<ph id="1">&lt;br&gt;</ph><bpt id="2">&lt;code preserve="1"&gt;</bpt>{Function} <ept id="2">&lt;/code&gt;</ept>|<bpt id="3">&lt;code preserve="1"&gt;</bpt> {Array} BaseClass<ept id="3">&lt;/code&gt;</ept>, <ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>{Object} props<ept id="5">&lt;/code&gt;</ept>, <ph id="6">&lt;br&gt;</ph><bpt id="7">&lt;code preserve="1"&gt;</bpt>[{Object} staticProps]<ept id="7">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет наследовать и доопределять свойства и методы базового класса.</source>
</trans-unit>
      <trans-unit id="tu17" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля объявляемого класса</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип данных</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-__constructor"&gt;</bpt>__constructor<ept id="1">&lt;/a&gt;</ept> | <bpt id="2">&lt;code preserve="1"&gt;</bpt>{Function}<ept id="2">&lt;/code&gt;</ept> | Функция, которая будет вызвана в ходе создании экземпляра класса. |</source>
</trans-unit>
      <trans-unit id="tu22" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Специализированные поля экземпляра объявляемого класса</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Поле</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип данных</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#declfields-__self"&gt;</bpt>__self<ept id="1">&lt;/a&gt;</ept> | <bpt id="2">&lt;code preserve="1"&gt;</bpt>{*}<ept id="2">&lt;/code&gt;</ept> | Позволяет получить доступ к классу из его экземпляра. |<ph id="3">&lt;br /&gt;</ph>| <bpt id="4">&lt;a preserve="1" href="#declfields-__base"&gt;</bpt>__base<ept id="4">&lt;/a&gt;</ept> | <bpt id="5">&lt;code preserve="1"&gt;</bpt>{Function}<ept id="5">&lt;/code&gt;</ept> | Позволяет внутри производного класса использовать методы базового (supercall). |</source>
</trans-unit>
      <trans-unit id="tu27" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Функция <bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> позволяет:</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-li" xml:space="preserve">
<source xml:lang="ru">создавать класс по декларации;</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru">задавать метод-конструктор;</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru">использовать миксины;</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru">вызывать методы базовой реализации (super call);</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru">получать доступ к статическим свойствам класса из его экземпляра.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок является основой механизма наследования блоков в <bpt id="1">&lt;code&gt;</bpt>bem-core<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Функция полиморфна и, в зависимости от типа первого аргумента, может быть использована для:</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-li" xml:space="preserve">
<source xml:lang="ru">тип <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> – объявления базового класса.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">тип <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> – создания производного класса на основе базового.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сигнатуры других аргументов функции зависят от способа выполнения.</source>
</trans-unit>
      <trans-unit id="tu42" resname="---1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Способы использования функции</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runmode-declare"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Объявление базового класса</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ позволяет объявить базовый класс, передав функции объект со свойствами класса.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>props<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – объект с собственными свойствами базового класса. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>staticProps<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] – объект со статическими свойствами базового класса.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept>. Полностью сформированный класс.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var props = {}, // объект свойств базового класса
    baseClass = inherit(props); // базовый класс

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" resname="-----id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Базовый класс со статическими свойствами</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Свойства объекта <bpt id="1">&lt;code&gt;</bpt>staticProps<ept id="1">&lt;/code&gt;</ept> добавляются как статические к создаваемому классу:</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var A = inherit(props, {
    callMe : function() {
        console.log('mr.Static');
    }
});

A.callMe(); // mr.Static

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" resname="----1-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированные поля объявляемого класса</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-__constructor"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" resname="-__constructor-id" restype="x-h6" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>__constructor<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept>. Объект собственных свойств базового класса может содержать зарезервированное свойство <bpt id="2">&lt;code&gt;</bpt>__constructor<ept id="2">&lt;/code&gt;</ept> – функцию, которая будет автоматически вызвана при создании экземпляра класса.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var A = inherit({
        __constructor : function(property) { // конструктор
            this.property = property;
        },

        getProperty : function() {
            return this.property + ' of instanceA';
        }
    }),
    aInst = new A('Property');

aInst.getProperty(); // Property of instanceA

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="runmode-extend"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Создание производного класса</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ позволяет создать производный класс на основе базового класса и объектов статических и собственных свойств.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BaseClass<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Function} | {Array}<ept id="2">&lt;/code&gt;</ept> – базовый класс. Может быть массивом функций-миксинов. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>props<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – собственные свойства (добавляются к прототипу). Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>staticProps<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] – статические свойства.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если один из объектов содержит свойства, которые уже есть в базовом классе – свойства базового класса будут переопределены.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept>. Производный класс.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var A = inherit({
        getType : function() {
            return 'A';
        }
    }
});

// класс, производный от A
var B = inherit(A, {
    getAll : function() { // переопределение + 'super' call
        return this.getType() + 'B';
    }
});

var instanceOfB = new B();

instanceOfB.getType(); // возвращает 'AB'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu69" resname="-----id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Создание производного класса с миксинами</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При объявлении производного класса можно указать дополнительный набор функций. Их свойства будут примешаны к создаваемому классу. Для этого первым аргументом <bpt id="1">&lt;code&gt;</bpt>inherit<ept id="1">&lt;/code&gt;</ept> нужно указать массив, первым элементом которого должен быть базовый класс, а последующими – примешиваемые функции:</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var A = inherit({
    getA : function() {
        return 'A';
    }
});

var B = inherit({
    getB : function() {
        return 'B';
    }
});

// класс, производный от A и B
var C = inherit([A, B], {
    getAll : function() {
        return this.getA() + this.getB();
    }
});

var instanceOfC = new C();

instanceOfC.getAll(); // возвращает 'AB'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="-----1-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Специализированные поля экземпляра объявляемого класса</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-__self"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu74" resname="-__self-id" restype="x-h6" xml:space="preserve">
<source xml:lang="ru">Поле <bpt id="1">&lt;code&gt;</bpt>__self<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>*<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет получить доступ к классу из его экземпляра:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var A = inherit({
        getStaticProperty : function() {
            return this.__self.staticMethod; // доступ к статическим методам
        }
    }, {    
        staticProperty : 'staticA',

        staticMethod : function() {
            return this.staticProperty;
        }
    }),
    aInst = new A();

aInst.getStaticProperty(); //staticA

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="declfields-__base"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu79" resname="base-id" restype="x-h6" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>__base<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu80" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет внутри производного класса вызывать одноименные методы базового (supercall). При использовании в статическом методе, будет вызван одноименный статический метод базового класса:</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['inherit'], function(inherit) {

var A = inherit({
    getType : function() {
        return 'A';
    }
}, {    
    staticProperty : 'staticA',

    staticMethod : function() {
        return this.staticProperty;
    }
});

// класс, производный от A
var B = inherit(A, {
    getType : function() { // переопределение + 'super' call
        return this.__base() + 'B';
    }
}, {
    staticMethod : function() { // статическое переопределение + 'super' call
        return this.__base() + ' of staticB';
    }
});

var instanceOfB = new B();

instanceOfB.getType(); // возвращает 'AB'
B.staticMethod(); // возвращает 'staticA of staticB'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="extra-examples"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Дополнительные примеры</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/inherit</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Дополнительные примеры смотрите в репозитории библиотеки <bpt id="1">&lt;a href="https://github.com/dfilatov/inherit" [#$tu86]&gt;</bpt>inherit<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/keyboard/keyboard.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="keyboard-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">keyboard</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предназначен для работы с клавиатурным вводом.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-codes"&gt;</bpt>codes<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Предоставляет объект, содержащий набор констант – имен часто используемых клавиатурных кодов.</source>
</trans-unit>
      <trans-unit id="tu11" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы элементов блока</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-codes"&gt;</bpt>codes<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">BACKSPACE</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">TAB</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru">ENTER</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru">CAPS_LOCK</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru">ESC</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru">SPACE</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu34" restype="x-td" xml:space="preserve">
<source xml:lang="ru">PAGE_UP</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu37" restype="x-td" xml:space="preserve">
<source xml:lang="ru">PAGE_DOWN</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu40" restype="x-td" xml:space="preserve">
<source xml:lang="ru">END</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu43" restype="x-td" xml:space="preserve">
<source xml:lang="ru">HOME</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu46" restype="x-td" xml:space="preserve">
<source xml:lang="ru">LEFT</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu49" restype="x-td" xml:space="preserve">
<source xml:lang="ru">UP</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu52" restype="x-td" xml:space="preserve">
<source xml:lang="ru">RIGHT</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu55" restype="x-td" xml:space="preserve">
<source xml:lang="ru">DOWN</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu58" restype="x-td" xml:space="preserve">
<source xml:lang="ru">INSERT</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu61" restype="x-td" xml:space="preserve">
<source xml:lang="ru">DELETE</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu66" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-codes"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" resname="-codes-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>codes<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предоставляет объект, содержащий набор констант – имен часто используемых клавиатурных кодов.</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-codes-fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" resname="----id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Значениями имен (свойств объекта) являются коды клавиш. Использование осмысленных имен вместо кодов клавиш делает код понятнее.</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, метод <bpt id="1">&lt;code&gt;</bpt>_onKeyDown<ept id="1">&lt;/code&gt;</ept> использует имена клавиш <bpt id="2">&lt;code&gt;</bpt>UP<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>DOWN<ept id="3">&lt;/code&gt;</ept> при проверке поля <bpt id="4">&lt;code&gt;</bpt>keyCode<ept id="4">&lt;/code&gt;</ept> объекта события:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'input',
    ['i-bem__dom', 'keyboard__codes'],
    function(provide, BEMDOM, keyCodes) {

provide(BEMDOM.decl(this.name, /** @lends input.prototype */{
    onSetMod : {
        'js': {
            inited: function() {
                this.bindTo('keydown', this._onKeyDown);
            }
        }
    },

    _onKeyDown : function(e) {
        if((e.keyCode === keyCodes.UP || e.keyCode === keyCodes.DOWN) &amp;&amp; !e.shiftKey) {
            // ...
        }
    }
}));
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступен следующий набор свойств:</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BACKSPACE<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu80" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>TAB<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ENTER<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu82" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>CAPS_LOCK<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu83" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ESC<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>SPACE<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu85" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>PAGE_UP<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu86" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>PAGE_DOWN<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>END<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu88" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>HOME<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu89" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>LEFT<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu90" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>UP<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu91" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>RIGHT<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu92" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>DOWN<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu93" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>INSERT<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>DELETE<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/querystring/querystring.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="querystring-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">querystring</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект, содержащий набор методов для работы со строкой запроса формата URI.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-parse"&gt;</bpt>parse<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} str<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Формирует объект на основании параметров запроса адресной строки.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-stringify"&gt;</bpt>stringify<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{Object} obj<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Формирует строку запроса на основании свойств объекта.</source>
</trans-unit>
      <trans-unit id="tu14" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-uri"&gt;</bpt>uri<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Элемент предназначен для декодирования строки из формата URI.</source>
</trans-unit>
      <trans-unit id="tu21" resname="----1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-uri"&gt;</bpt>uri<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-uri-fields-decodeURI"&gt;</bpt>decodeURI<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} str<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для декодирования URI.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-uri-fields-decodeURIComponent"&gt;</bpt>decodeURIComponent<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} str<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для декодирования URI компонента.</source>
</trans-unit>
      <trans-unit id="tu34" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="----2-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-parse"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" resname="-parse-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>parse<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Формирует объект на основании строки параметров в формате URI.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>str<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – строка с параметрами в виде пар ключ-значение. Ключ отделяется от значения символом <bpt id="3">&lt;code&gt;</bpt>=<ept id="3">&lt;/code&gt;</ept>. Пары разделяются символом <bpt id="4">&lt;code&gt;</bpt>&amp;<ept id="4">&lt;/code&gt;</ept>. В процессе обработки, ключи и значения декодируются из формата URI. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>. Объект, сформированный на основании параметров адресной строки.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-stringify"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" resname="-stringify-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>stringify<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Формирует строку запроса в формате URI на основании объекта.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>obj<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – объект, на основании которого формируется строка. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>. Имена свойств в строке отделяются от значений символом <bpt id="2">&lt;code&gt;</bpt>=<ept id="2">&lt;/code&gt;</ept>, пары разделяются символом <bpt id="3">&lt;code&gt;</bpt>&amp;<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-uri"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu54" resname="-uri-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>uri<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент предоставляет объект, содержащий набор методов для декодирования строки из формата URI.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-name-fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" resname="----3-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Оба метода являются оберткой над соответствующими стандартными методами JavaScript <bpt id="1">&lt;code&gt;</bpt>decodeURI<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>decodeURIComponent<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В ходе работы методы проверяют соответствие формата переданной строки UTF-8. При несоответствии генерируется ошибка.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-uri-fields-decodeURI"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" resname="-decodeuri-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>decodeURI<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURI</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для декодирования URI. Метод идентичен стандартному методу JavaScript <bpt id="1">&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURI" [#$tu63]&gt;</bpt>decodeURI<ept id="1">&lt;/a&gt;</ept>, но поддерживает кириллическую кодировку <bpt id="2">&lt;code&gt;</bpt>CP-1251<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>str<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – строка с последовательностями экранирования. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>. В случае если последовательности экранирования в строке не найдены метод возвращают ее без изменений.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('querystring__uri', function(uri){
    uri.decodeURI("https://developer.mozilla.org/ru/docs/JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B");
    // "https://developer.mozilla.org/ru/docs/JavaScript_шеллы"
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-uri-fields-decodeURIComponent"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu69" resname="-decodeuricomponent-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>decodeURIComponent<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu71" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для декодирование компонента URI. Метод идентичен стандартному методу JavaScript <bpt id="1">&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent" [#$tu71]&gt;</bpt>decodeURIComponent<ept id="1">&lt;/a&gt;</ept>, но поддерживает кириллическую кодировку <bpt id="2">&lt;code&gt;</bpt>CP-1251<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu72" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>str<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – строка с последовательностями экранирования. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>. В случае если последовательности экранирования в строке не найдены метод возвращают ее без изменений.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('querystring__uri', function(uri){
    uri.decodeURIComponent("JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B");
    // "JavaScript_шеллы"
})<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/functions/functions.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="functions-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">functions</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект, содержащий набор методов для работы с функциями JavaScript.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип или возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isFunction"&gt;</bpt>isFunction<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code&gt;</bpt>obj<ept id="2">&lt;/code&gt;</ept> <bpt id="3">&lt;code&gt;</bpt>{*}<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, является ли переданный аргумент функцией.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-noop"&gt;</bpt>noop<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Пустая функция.</source>
</trans-unit>
      <trans-unit id="tu14" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-debounce"&gt;</bpt>debounce<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Декоратор функции. Объединяет несколько вызовов функции, производимых в заданном временном интервале, в один.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-throttle"&gt;</bpt>throttle<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Декоратор функции. Ограничивает частоту выполнения функции до одного раза в указанный период.</source>
</trans-unit>
      <trans-unit id="tu24" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu29" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isFunction"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" resname="-isfunction-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isFunction<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод проверяет, является ли переданный аргумент функцией.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>obj<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{*}<ept id="2">&lt;/code&gt;</ept> – проверяемый объект. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. В случае, если аргумент является функцией – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('functions', function(func) {
    var a = function(){},
        b = {};
    console.log(func.isFunction(a)); // true
    console.log(func.isFunction(b)); // false
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-noop"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="-noop-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>noop<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Пустая функция (<bpt id="1">&lt;code&gt;</bpt>function() {}<ept id="1">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет аргументов и возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>noop<ept id="1">&lt;/code&gt;</ept> можно использовать в ситуациях, когда для работы требуется функция, но нет смысла добавлять логику. Например в качестве «заглушки» для базовых классов при проектировании в парадигме ООП.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('base-class', ['inherit', 'functions'], function(provide, inherit, functions) {

provide(inherit({
    getData : function() {
        this._sendRequest();
    },

    _sendRequest : functions.noop
}));

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элементы блока реализуют набор декораторов функций.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Декораторы добавляют функции логику, не меняя ее оригинальной сигнатуры.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-debounce"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" resname="-debounce-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>debounce<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Декоратор, откладывающий вызовов функции до истечения задержки. После каждой попытки вызова задержка начинает отсчитываться заново.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>fn<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Function}<ept id="2">&lt;/code&gt;</ept> — оригинальная функция. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>timeout<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Number}<ept id="2">&lt;/code&gt;</ept> — время задержки в миллисекундах. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>invokeAsap<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept>] — режим работы <bpt id="3">&lt;code&gt;</bpt>debounce<ept id="3">&lt;/code&gt;</ept>. По умолчанию используется первый режим (соответствует значению <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>context<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] — контекст для выполнения оригинальной функции.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В зависимости от значения аргумента <bpt id="1">&lt;code&gt;</bpt>invokeAsap<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>debounce<ept id="2">&lt;/code&gt;</ept> может работать в двух режимах:</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Вызов оригинальной функции производится по истечению задержки после последней попытки вызова.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Первый вызов оригинальной функции производится сразу же при вызове декорированной функции. Дальнейшее поведение аналогично режиму 1.</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept>. Декорированная функция.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('functions__debounce', function(provide, debounce) {

function log() {
    console.log('hello!');
}

var debouncedLog = debounce(log, 300);
setInterval(debouncedLog, 50);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-throttle"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu61" resname="-throttle-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>throttle<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Декоратор позволяет «затормозить» функцию. Она будет выполняться не чаще одного раза в указанный период, сколько бы раз в течение этого периода ни была вызвана. Все промежуточные вызовы игнорируются.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>fn<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Function}<ept id="2">&lt;/code&gt;</ept> — оригинальная функция. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>period<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Number}<ept id="2">&lt;/code&gt;</ept> — интервал между вызовами в миллисекундах. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>context<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] — контекст для выполнения оригинальной функции.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept>. Декорированная функция.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод удобно использовать, например, для установки ресурсоемких обработчиков для часто генерируемых событий – <bpt id="1">&lt;code&gt;</bpt>resize<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>pointermove<ept id="2">&lt;/code&gt;</ept> и т.п.</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require('functions__throttle', function(provide, throttle) {

function log() {
    console.log('hello!');
}

var throttledLog = throttle(log, 300);
setInterval(throttledLog, 50);

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В результате, функция будет выполняться не чаще чем раз в 300 миллисекунд.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/vow/vow.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="vow-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">vow</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/dfilatov/vow</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет библиотеку <bpt id="1">&lt;a href="https://github.com/dfilatov/vow" [#$tu3]&gt;</bpt>Vow<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://promisesaplus.com/</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Vow – библиотека для работы с промисами, реализующая стандарт <bpt id="1">&lt;a href="http://promisesaplus.com/" [#$tu5]&gt;</bpt>Promises/A+<ept id="1">&lt;/a&gt;</ept> и поддержку спецификации <bpt id="2">&lt;a href="https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects" [#$tu6]&gt;</bpt>ES6 Promises<ept id="2">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Использование</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['vow'], function(vow) {
    // ...
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://dfilatov.github.io/vow/</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">С полным API библиотеки вы можете ознакомиться здесь <bpt id="1">&lt;a href="http://dfilatov.github.io/vow/" class="uri" [#$tu10] class="uri"&gt;</bpt>http://dfilatov.github.io/vow/<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu11" resname="---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/idle/idle.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="idle-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">idle</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект, содержащий набор методов для генерации события в момент прекращения пользовательской активности (т.е. пользователь работает с другим окном или не совершает действий).</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">События объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Доступен следующий набор событий:</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-idle"&gt;</bpt>idle<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Браузер простаивает.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-wakeup"&gt;</bpt>wakeup<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Пользователь возобновил активность.</source>
</trans-unit>
      <trans-unit id="tu12" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-start"&gt;</bpt>start<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Запуск отслеживания пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-stop"&gt;</bpt>stop<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Остановка отслеживания пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isIdle"&gt;</bpt>isIdle<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверка текущего состояния.</source>
</trans-unit>
      <trans-unit id="tu25" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Модификатор</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Допустимые значения</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#modifiers-start"&gt;</bpt>start<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>auto<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Автоматический запуск отслеживания пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu34" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подписавшись на события блока можно приостанавливать выполнение операций, например, отображение анимации, при отсутствии пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок наследуется от класса <bpt id="1">&lt;code&gt;</bpt>Emitter<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept>, что позволяет вызывать его методы.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['idle'], function(idle) {

idle
    .on({
        idle : function() {
            // обработчик события idle
        },
        wakeup : function() {
            // обработчик события wakeup
        }
    })
    .start(); // запуск генерации событий

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">События объекта</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-idle"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" resname="-idle-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>idle<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется при прекращении пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-wakeup"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" resname="-wakeup-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>wakeup<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется в момент возобновления пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-start"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" resname="-start-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>start<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Запуск отслеживания пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['idle'], function(idle) {

idle.start()

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-stop"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" resname="-stop-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>stop<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для прекращения отслеживания пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['idle'], function(idle) {

idle.start() // начинаем отслеживать активность
idle.stop() // прекращаем отслеживать активность

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isIdle"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" resname="-isidle-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isIdle<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для проверки наличия пользовательской активности.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. В случае если активность отсутствует – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['idle'], function(idle) {

idle.isIdle() // true или false, в зависимости от текущего состояния

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu69" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификаторы блока</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-start"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="-start-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>start<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Допустимые значения: <bpt id="1">&lt;code&gt;</bpt>'auto'<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Способ использования: подключается в файле зависимостей <bpt id="1">&lt;code&gt;</bpt>deps.js<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu75" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Автоматический запуск отслеживания пользовательской активности.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/ua/ua.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="ua-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">ua</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок служит для сбора данных о браузере пользователя.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-svg"&gt;</bpt>svg<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>deps<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, поддерживает ли браузер формат SVG.</source>
</trans-unit>
      <trans-unit id="tu11" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bh.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu14" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>bemhtml<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок подключает инлайновый скрипт, добавляющий тегу <bpt id="1">&lt;code&gt;</bpt>&lt;html&gt;<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>CSS<ept id="2">&lt;/code&gt;</ept>-классы, указывающие, включен ли JavaScript – <bpt id="3">&lt;code&gt;</bpt>ua_js_no<ept id="3">&lt;/code&gt;</ept>/<bpt id="4">&lt;code&gt;</bpt>ua_js_yes<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет визуального представления на странице.</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-core/blob/v2/common.blocks/page/page.ru.md</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Используется внутри блока <bpt id="1">&lt;a href="https://github.com/bem/bem-core/blob/v2/common.blocks/page/page.ru.md" [#$tu19]&gt;</bpt>page<ept id="1">&lt;/a&gt;</ept> и самостоятельно подключать его к странице обычно не требуется.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-svg"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" resname="-svg-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>svg<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент подключает инлайновый скрипт, добавляющий тегу <bpt id="1">&lt;code&gt;</bpt>&lt;html&gt;<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>CSS<ept id="2">&lt;/code&gt;</ept>-классы, указывающие, поддерживается ли SVG – <bpt id="3">&lt;code&gt;</bpt>ua_svg_no<ept id="3">&lt;/code&gt;</ept>/<bpt id="4">&lt;code&gt;</bpt>ua_svg_yes<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет визуального представления на странице.</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для использования включите элемент в файл зависимостей <bpt id="1">&lt;code&gt;</bpt>deps.js<ept id="1">&lt;/code&gt;</ept> блока, которому требуются данные о поддержке SVG:</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>({ shouldDeps: { block : 'ua', elem : 'svg' } })<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/identify/identify.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="identify-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">identify</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет функцию для работы с уникальными идентификаторами, которая позволяет:</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-li" xml:space="preserve">
<source xml:lang="ru">создавать идентификаторы объектов;</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru">проверять у объектов наличие идентификатора;</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">создавать уникальную строку-идентификатор.</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>obj<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept>] – идентифицируемый объект.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>onlyGet<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Boolean}<ept id="2">&lt;/code&gt;</ept>] – флаг для проверки наличия у объекта идентификатора. Если <bpt id="3">&lt;code&gt;</bpt>true<ept id="3">&lt;/code&gt;</ept>, функция будет возвращать строку с идентификатором только если объект был заранее идентифицирован. По умолчанию <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>. Строка с идентификатором, присвоенным объекту. При последующих вызовах всегда будет возвращаться один и тот же идентификатор.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['identify'], function(identify) {
    var a = {},
        b = {},
        identA = identify(a);

    console.log(identA === identify(a)); // true
    console.log(identA === identify(b)); // false
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При вызове без аргументов, функция будет каждый раз возвращать строку с уникальным идентификатором.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['identify'], function(identify) {
    var a = identify(),
        b = identify();

    console.log(a === b); // false
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/dom/dom.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="dom-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">dom</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет объект, содержащий набор методов для работы с DOM-деревом.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-contains"&gt;</bpt>contains<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{jQuery} domElem<ept id="3">&lt;/code&gt;</ept>,<ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>{jQuery} ctx<ept id="5">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, содержит ли один DOM-элемент другой.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-getFocused"&gt;</bpt>getFocused<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{jQuery} domElem<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{jQuery}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для получения ссылки на DOM-элемент в фокусе.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-containsFocus"&gt;</bpt>containsFocus<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{jQuery} domElem<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверят, содержит ли DOM-элемент или его потомки фокус.</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isFocusable"&gt;</bpt>isFocusable<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{jQuery} domElem<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверят, может ли DOM-элемент находиться в фокусе.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isEditable"&gt;</bpt>isEditable<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{jQuery} domElem<ept id="3">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверят, возможен ли в DOM-элементе ввод текста.</source>
</trans-unit>
      <trans-unit id="tu23" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu26" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" resname="----1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-contains"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" resname="-contains-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>contains<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод позволяет проверить содержит ли некоторый DOM-элемент <bpt id="1">&lt;code&gt;</bpt>ctx<ept id="1">&lt;/code&gt;</ept> элемент <bpt id="2">&lt;code&gt;</bpt>domElem<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>ctx<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{jQuery}<ept id="2">&lt;/code&gt;</ept> – DOM-элемент внутри которого производится поиск. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>domElem<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{jQuery}<ept id="2">&lt;/code&gt;</ept> – искомый DOM-элемент. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. Если искомый элемент найден – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['dom', 'jquery'], function(dom, $) {

/*
&lt;div class="block1"&gt;
  &lt;div class="block2"&gt;&lt;/div&gt;
&lt;/div&gt;
*/

dom.contains($('.block1'), $('.block2'));  // true

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-getFocused"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="-getfocused-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>getFocused<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод служит для получения ссылки на DOM-элемент, находящийся в фокусе.</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{jQuery}<ept id="1">&lt;/code&gt;</ept> – объект в фокусе.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['dom'], function(dom) {

dom.getFocused(); // ссылка на элемент в фокусе

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-containsFocus"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu45" resname="-containsfocus-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>containsFocus<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод проверяет находится ли в фокусе переданный аргументом DOM-элемент или один из его потомков.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>domElem<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{jQuery}<ept id="2">&lt;/code&gt;</ept> – проверяемый DOM-элемент. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. Если искомый элемент в фокусе – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['dom', 'jquery'], function(dom, $) {

/*
&lt;div class="block1"&gt;
  &lt;input class="block1__control"&gt;&lt;/div&gt;
&lt;/div&gt;
*/

$('.block1__control').focus();
dom.containsFocus($('.block1'));  // true

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isFocusable"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" resname="-isfocusable-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isFocusable<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод проверят может ли браузер пользователя установить фокус на переданный аргументом DOM-элемент.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>domElem<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{jQuery}<ept id="2">&lt;/code&gt;</ept> – проверяемый DOM-элемент. Обязательный аргумент. Если в jQuery-цепочке несколько DOM-элементов, то проверяется первый из них.</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. Если фокус может быть установлен – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['dom', 'jquery'], function(dom, $) {

/*
&lt;div class="menu"&gt;
  &lt;a preserve="1" class="menu__item" href="/"&gt;Link 1&lt;/a&gt;
&lt;/div&gt;
*/

dom.isFocusable($('.menu__item')); // true

/*
&lt;div class="menu"&gt;
  &lt;span class="menu__item menu__item_current"&gt;Link 1&lt;/span&gt;
&lt;/div&gt;
*/

dom.isFocusable($('.menu__item')); // false

}); <ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu58" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isEditable"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" resname="-iseditable-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isEditable<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод проверят возможен ли в переданном аргументом DOM-элементе ввод текста. Другими словами, с помощью метода можно проверить является ли элемент полем ввода, текстовой областью и т.п.</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>domElem<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{jQuery}<ept id="2">&lt;/code&gt;</ept> – проверяемый DOM-элемент. Обязательный аргумент. Если в jQuery-цепочке несколько DOM-элементов, то проверяется первый из них.</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. Если ввод текста в элементе возможен – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['dom', 'jquery'], function(dom, $) {

dom.isEditable($('input, textarea')); // true

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/strings/strings.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="strings-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">strings</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет хелперы для манипуляций с данными строчного типа.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-escape"&gt;</bpt>escape<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Набор методов для экранирования (эскейпинга) управляющих символов XML и HTML.</source>
</trans-unit>
      <trans-unit id="tu11" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы элементов блока</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип или возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-escape"&gt;</bpt>escape<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-xml"&gt;</bpt>xml<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} str<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для экранирования управляющих символов XML.</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-html"&gt;</bpt>html<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} str<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для экранирования управляющих символов HTML.</source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-attr"&gt;</bpt>attr<ept id="1">&lt;/a&gt;</ept>(<bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} str<ept id="2">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для экранирования управляющих символов в HTML и XML атрибутах.</source>
</trans-unit>
      <trans-unit id="tu28" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu32" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="--1-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-name"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu35" resname="-escape-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>escape<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент предоставляет объект, содержащий набор методов для экранирования (эскейпинга) управляющих символов XML и HTML.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-name-fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-name-fields-xml"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" resname="-xml-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>xml<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для экранирования управляющих символов XML. Обрабатываются символы <bpt id="1">&lt;code&gt;</bpt>&amp;<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>&lt;<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>&gt;<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>str<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – строка для обработки. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>. Строка с экранированными управляющими символами.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-name-fields-html"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" resname="-html-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>html<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для экранирования управляющих символов HTML. Является синонимом метода <bpt id="1">&lt;code&gt;</bpt>xml<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="elems-name-fields-attr"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" resname="-attr-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>attr<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для экранирования управляющих символов в HTML и XML атрибутах. Обрабатываются управляющие символы <bpt id="1">&lt;code&gt;</bpt>"<ept id="1">&lt;/code&gt;</ept>, <bpt id="2">&lt;code&gt;</bpt>\<ept id="2">&lt;/code&gt;</ept>, <bpt id="3">&lt;code&gt;</bpt>'<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>&amp;<ept id="4">&lt;/code&gt;</ept>, <bpt id="5">&lt;code&gt;</bpt>&lt;<ept id="5">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>&gt;<ept id="6">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>str<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – строка для обработки. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>. Строка с экранированными управляющими символами.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://github.com/bem/bem-components/blob/v2/common.blocks/select/select.js#L237</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, в блоке <bpt id="1">&lt;a href="https://github.com/bem/bem-components/blob/v2/common.blocks/select/select.js#L237" [#$tu55]&gt;</bpt><bpt id="2">&lt;code&gt;</bpt>common.blocks/select<ept id="2">&lt;/code&gt;</ept><ept id="1">&lt;/a&gt;</ept> библиотеки <bpt id="3">&lt;code&gt;</bpt>bem-components<ept id="3">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>strings__escape<ept id="4">&lt;/code&gt;</ept> используется для экранирования управляющих символов в свойстве <bpt id="5">&lt;code&gt;</bpt>value<ept id="5">&lt;/code&gt;</ept> HTML-элемента:</source>
</trans-unit>
      <trans-unit id="tu56" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>_createControlHTML : function(name, val) {
        // Using string concatenation to not depend on template engines
        return '&lt;input ' +
            'type="hidden" ' +
            'name="' + name + '" ' +
            'class="' + this.buildClass('control') + '" ' +
            'value="' + escape.attr(typeof val === 'object'? JSON.stringify(val) : val) + '"/&gt;';
    }<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/events/events.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="events-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">events</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок предоставляет набор JS-классов, реализующий механизмы работы с событиями.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu4" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Классы, предоставляемые блоком</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Класс</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Конструктор</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#class-Event"&gt;</bpt>Event<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu9" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Event(<ph id="1">&lt;br&gt;</ph><bpt id="2">&lt;code preserve="1"&gt;</bpt>{String} type<ept id="2">&lt;/code&gt;</ept>, <ph id="3">&lt;br&gt;</ph><bpt id="4">&lt;code preserve="1"&gt;</bpt>{Object} target<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для создания объекта события, изменения и проверки его состояний.</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#class-Emitter"&gt;</bpt>Emitter<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для генерации событий и подписки на них.</source>
</trans-unit>
      <trans-unit id="tu14" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта класса</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Класс</source>
</trans-unit>
      <trans-unit id="tu16" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип или возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#class-Event"&gt;</bpt>Event<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-type"&gt;</bpt>type<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu21" restype="x-td" xml:space="preserve">
<source xml:lang="ru">{String}</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Тип события.</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-result"&gt;</bpt>result<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{<bpt id="2">&lt;em&gt;</bpt>}<it id="8" pos="close">&lt;/code&gt;</it> | Результат, возвращенный последним обработчиком события. |<ph id="3">&lt;br /&gt;</ph>| | <bpt id="4">&lt;a preserve="1" href="#fields-target"&gt;</bpt>target<ept id="4">&lt;/a&gt;</ept> | {Object} | Объект на котором возникло событие. |<ph id="5">&lt;br /&gt;</ph>| | <bpt id="6">&lt;a preserve="1" href="#fields-data"&gt;</bpt>data<ept id="6">&lt;/a&gt;</ept> | <it id="7" pos="open">&lt;code preserve="1"&gt;</it>{<ept id="2">&lt;/em&gt;</ept>}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu26" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Данные, передаваемые как аргумент обработчику.</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu28" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-preventDefault"&gt;</bpt>preventDefault<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет предотвратить выполнение стандартного действия предусмотренного для события.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isDefaultPrevented"&gt;</bpt>isDefaultPrevented<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu34" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, было ли предотвращено выполнение стандартного действия, предусмотренного для события.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu36" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-stopPropagation"&gt;</bpt>stopPropagation<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет остановить всплывание события.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu40" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-isPropagationStopped"&gt;</bpt>isPropagationStopped<ept id="1">&lt;/a&gt;</ept>()</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Проверяет, было ли остановлено всплывание события.</source>
</trans-unit>
      <trans-unit id="tu43" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#class-Emitter"&gt;</bpt>Emitter<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-on"&gt;</bpt>on<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{String} type<ept id="3">&lt;/code&gt;</ept>, <ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>[{Object} data]<ept id="5">&lt;/code&gt;</ept>, <ph id="6">&lt;br&gt;</ph><bpt id="7">&lt;code preserve="1"&gt;</bpt>{Function} fn<ept id="7">&lt;/code&gt;</ept>, <ph id="8">&lt;br&gt;</ph><bpt id="9">&lt;code preserve="1"&gt;</bpt>[{Object} ctx]<ept id="9">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu46" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для подписки на событие определенного типа.</source>
</trans-unit>
      <trans-unit id="tu47" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu48" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-once"&gt;</bpt>once<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{String} type<ept id="3">&lt;/code&gt;</ept>, <ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>[{Object} data]<ept id="5">&lt;/code&gt;</ept>, <ph id="6">&lt;br&gt;</ph><bpt id="7">&lt;code preserve="1"&gt;</bpt>{Function} fn<ept id="7">&lt;/code&gt;</ept>, <ph id="8">&lt;br&gt;</ph><bpt id="9">&lt;code preserve="1"&gt;</bpt>[{Object} ctx]<ept id="9">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для подписки на событие определенного типа. Обработчик выполняется единожды.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu52" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-un"&gt;</bpt>un<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{String} type<ept id="3">&lt;/code&gt;</ept>, <ph id="4">&lt;br&gt;</ph><bpt id="5">&lt;code preserve="1"&gt;</bpt>{Function} fn<ept id="5">&lt;/code&gt;</ept>, <ph id="6">&lt;br&gt;</ph><bpt id="7">&lt;code preserve="1"&gt;</bpt>[{Object} ctx]<ept id="7">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для удаления подписки на событие определенного типа.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu56" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-emit"&gt;</bpt>emit<ept id="1">&lt;/a&gt;</ept>(<ph id="2">&lt;br&gt;</ph><bpt id="3">&lt;code preserve="1"&gt;</bpt>{String<ept id="3">&lt;/code&gt;</ept>|<bpt id="4">&lt;code preserve="1"&gt;</bpt>events:Event} type<ept id="4">&lt;/code&gt;</ept>, <ph id="5">&lt;br&gt;</ph><bpt id="6">&lt;code preserve="1"&gt;</bpt>[{Object} data]<ept id="6">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-td" xml:space="preserve">
<source xml:lang="ru">-</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Служит для генерации события.</source>
</trans-unit>
      <trans-unit id="tu59" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu62" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu63" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-channels"&gt;</bpt>channels<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu64" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu65" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Предназначен для работы с именованными каналами событий.</source>
</trans-unit>
      <trans-unit id="tu66" resname="----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Функции предоставляемые элементами блока</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Функция</source>
</trans-unit>
      <trans-unit id="tu69" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu70" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-channels"&gt;</bpt>channels<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" restype="x-td" xml:space="preserve">
<source xml:lang="ru">channels(<ph id="1">&lt;br&gt;</ph><bpt id="2">&lt;code preserve="1"&gt;</bpt>[{String} id]<ept id="2">&lt;/code&gt;</ept>, <ph id="3">&lt;br&gt;</ph><bpt id="4">&lt;code preserve="1"&gt;</bpt>[{Boolean} drop]<ept id="4">&lt;/code&gt;</ept>)</source>
</trans-unit>
      <trans-unit id="tu73" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>|<bpt id="2">&lt;code preserve="1"&gt;</bpt>{undefined}<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu74" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Создает или удаляет именованный канал событий.</source>
</trans-unit>
      <trans-unit id="tu75" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu77" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>vanilla.js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu78" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Подробности</source>
</trans-unit>
      <trans-unit id="tu79" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="class-Event"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu80" resname="-event-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Класс <bpt id="1">&lt;code&gt;</bpt>Event<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu81" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">С помощью класса можно инстанцировать объект события, указав его тип и источник. Для этого нужно воспользоваться функцией-конструктором <bpt id="1">&lt;code&gt;</bpt>Event<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu82" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu83" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{String}<ept id="2">&lt;/code&gt;</ept> – тип события. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu84" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>target<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>{Object}<ept id="2">&lt;/code&gt;</ept> – объект (источник) на котором событие возникло. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu85" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Event}<ept id="1">&lt;/code&gt;</ept>. Объект события.</source>
</trans-unit>
      <trans-unit id="tu86" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-Event"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu87" resname="-----1-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта класса</source>
</trans-unit>
      <trans-unit id="tu88" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-type"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu89" resname="-type-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu90" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu91" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип события.</source>
</trans-unit>
      <trans-unit id="tu92" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myevent = new events.Event('myevent', this);
console.log(myevent.type); // 'myevent'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu93" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-type"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu94" resname="-target-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>target<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu95" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu96" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Объект, на котором возникло событие.</source>
</trans-unit>
      <trans-unit id="tu97" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-result"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu98" resname="-result-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>result<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu99" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{*}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu100" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Содержит данные, возвращаемые последней функцией-обработчиком события.</source>
</trans-unit>
      <trans-unit id="tu101" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();
myEmitter.on('myevent', function() { return 'hi-hi-hi'; });

var myEvent = new events.Event('myevent');
myEmitter.emit(myEvent)

console.log(myEvent.result);    // 'hi-hi-hi'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu102" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-data"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu103" resname="-data-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>data<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu104" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{*}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu105" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Содержит данные, передаваемые функции-обработчику события в качестве аргумента.</source>
</trans-unit>
      <trans-unit id="tu106" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();
myEmitter.on('myevent', 'my-data', function(e) { console.log(e.data); });

myEmitter.emit('myevent'); // my-data

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu107" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-preventDefault"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu108" resname="-preventdefault-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>preventDefault<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu109" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет предотвратить выполнение стандартного действия предусмотренного для события.</source>
</trans-unit>
      <trans-unit id="tu110" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu111" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu112" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isDefaultPrevented"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu113" resname="-isdefaultprevented-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isDefaultPrevented<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu114" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет проверить было ли предотвращено выполнение стандартного действия для события.</source>
</trans-unit>
      <trans-unit id="tu115" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu116" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. В случае, если выполнение стандартного действия было предотвращено – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu117" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-stopPropagation"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu118" resname="-stoppropagation-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>stopPropagation<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu119" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет остановить всплывание события.</source>
</trans-unit>
      <trans-unit id="tu120" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu121" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не имеет возвращаемого значения.</source>
</trans-unit>
      <trans-unit id="tu122" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-isPropagationStopped"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu123" resname="-ispropagationstopped-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>isPropagationStopped<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu124" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Позволяет проверить, было ли остановлено всплывание события.</source>
</trans-unit>
      <trans-unit id="tu125" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Не принимает аргументов.</source>
</trans-unit>
      <trans-unit id="tu126" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение: <bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept>. В случае, если всплывание события было остановлено – <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu127" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="class-Emitter"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu128" resname="-emitter-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Класс <bpt id="1">&lt;code&gt;</bpt>Emitter<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu129" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Класс позволяет инстанцировать объекты, с помощью которых можно генерировать события и осуществлять подписку на них.</source>
</trans-unit>
      <trans-unit id="tu130" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu131" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-Event"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu132" resname="-----2-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта класса</source>
</trans-unit>
      <trans-unit id="tu133" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-on"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu134" resname="-on-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>on<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu135" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для подписки на событие определенного типа.</source>
</trans-unit>
      <trans-unit id="tu136" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu137" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>type<ept id="2">&lt;/code&gt;</ept> – тип события, на которое производится подписка. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu138" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>data<ept id="2">&lt;/code&gt;</ept>] – дополнительные данные, доступные обработчику как значение поля <bpt id="3">&lt;code&gt;</bpt>e.data<ept id="3">&lt;/code&gt;</ept> объекта события.</source>
</trans-unit>
      <trans-unit id="tu139" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>fn<ept id="2">&lt;/code&gt;</ept> – функция-обработчик, вызываемая для события. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu140" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>ctx<ept id="2">&lt;/code&gt;</ept>] – контекст функции-обработчика.</source>
</trans-unit>
      <trans-unit id="tu141" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращает объект <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu142" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();

myEmitter.on('myevent', function() { console.log('foo'); });
myEmitter.emit('myevent'); // 'foo'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu143" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Кроме того, значением аргумента <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> могут быть:</source>
</trans-unit>
      <trans-unit id="tu144" restype="x-li" xml:space="preserve">
<source xml:lang="ru">несколько типов событий, перечисленных через пробел – чтобы установить для них общую функцию-обработчик;</source>
</trans-unit>
      <trans-unit id="tu145" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();

myEmitter.on('myevent1 myevent2', function(e) { console.log(e.type) });

myEmitter.emit('myevent1'); // 'myevent1'
myEmitter.emit('myevent2'); // 'myevent2'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu146" restype="x-li" xml:space="preserve">
<source xml:lang="ru">хеш вида <bpt id="1">&lt;code&gt;</bpt>{ 'событие-1' : обработчик-1, ... , 'событие-n' : обработчик-n }<ept id="1">&lt;/code&gt;</ept> – чтобы установить сразу несколько обработчиков для разных типов событий;</source>
</trans-unit>
      <trans-unit id="tu147" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();

myEmitter.on({
    myevent1 : function(e) { console.log(e.type) },
    myevent2 : function(e) { console.log(e.type) }
});  

myEmitter.emit('myevent1'); // 'myevent1'
myEmitter.emit('myevent2'); // 'myevent2'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu148" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Сказанное выше верно и для методов <bpt id="1">&lt;code&gt;</bpt>once<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>un<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu149" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-once"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu150" resname="-once-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>once<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu151" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Идентичен методу <bpt id="1">&lt;code&gt;</bpt>on<ept id="1">&lt;/code&gt;</ept>, но выполняется единожды – после первого события подписка удаляется.</source>
</trans-unit>
      <trans-unit id="tu152" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu153" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>type<ept id="2">&lt;/code&gt;</ept> – тип события, на которое производится подписка. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu154" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>data<ept id="2">&lt;/code&gt;</ept>] – дополнительные данные, доступные как значение поля <bpt id="3">&lt;code&gt;</bpt>e.data<ept id="3">&lt;/code&gt;</ept> объекта события.</source>
</trans-unit>
      <trans-unit id="tu155" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>fn<ept id="2">&lt;/code&gt;</ept> – функция-обработчик, вызываемая для события. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu156" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>ctx<ept id="2">&lt;/code&gt;</ept>] – контекст функции-обработчика.</source>
</trans-unit>
      <trans-unit id="tu157" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращает объект <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu158" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();

myEmitter.on('myevent', function() { console.log('foo') });

myEmitter.emit('myevent'); // 'foo'
myEmitter.emit('myevent'); // обработчик не вызывается

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu159" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-un"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu160" resname="-un-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>un<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu161" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для удаления установленной ранее подписки на событие определенного типа.</source>
</trans-unit>
      <trans-unit id="tu162" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu163" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>type<ept id="2">&lt;/code&gt;</ept> – тип события, подписка на которое удаляется. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu164" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Function}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>fn<ept id="2">&lt;/code&gt;</ept>] – удаляемый обработчик.</source>
</trans-unit>
      <trans-unit id="tu165" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>ctx<ept id="2">&lt;/code&gt;</ept>] – контекст обработчика.</source>
</trans-unit>
      <trans-unit id="tu166" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод возвращает ссылку на объект <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu167" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter(),
    shout = function() { console.log('foo') };

myEmitter.on('myevent', shout);
myEmitter.emit('myevent'); // 'foo'

myEmitter.un('myevent', shout);
myEmitter.emit('myevent'); // обработчик не вызывается

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu168" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-emit"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu169" resname="-emit-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Метод <bpt id="1">&lt;code&gt;</bpt>emit<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu170" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Служит для генерации события.</source>
</trans-unit>
      <trans-unit id="tu171" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Метод вызывает все функции-обработчики, заданные для события.</source>
</trans-unit>
      <trans-unit id="tu172" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu173" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{String|events:Event}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>type<ept id="2">&lt;/code&gt;</ept> – генерируемое событие в виде строки или готового объекта события. Обязательный аргумент.</source>
</trans-unit>
      <trans-unit id="tu174" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>data<ept id="2">&lt;/code&gt;</ept>] – дополнительные данные, доступные как второй аргумент функции-обработчика.</source>
</trans-unit>
      <trans-unit id="tu175" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращает объект <bpt id="1">&lt;code&gt;</bpt>this<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu176" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events'], function(events) {

var myEmitter = new events.Emitter();

myEmitter.on('myevent', function(e, data) { console.log(data) });
myEmitter.emit('myevent', 'ololo');  // 'ololo'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu177" resname="---id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Статические методы класса</source>
</trans-unit>
      <trans-unit id="tu178" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Набор и сигнатуры статических методов идентичны набору и сигнатурам методов объекта, инстанцируемого классом.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/events/__channels/events__channels.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="-channels--events-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>channels<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>channels<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>events<ept id="2">&lt;/code&gt;</ept> предназначен для работы с именованными каналами событий. Именные каналы позволяют организовать работу с событиями, используя шаблон проектирования «наблюдатель» (также известный как Publisher-subscriber).</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент реализует функцию, позволяющую:</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-li" xml:space="preserve">
<source xml:lang="ru">получить ссылку на именной канал по <bpt id="1">&lt;code&gt;</bpt>id<ept id="1">&lt;/code&gt;</ept>;</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-li" xml:space="preserve">
<source xml:lang="ru">получить ссылку на стандартный канал;</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-li" xml:space="preserve">
<source xml:lang="ru">удалить канал – стандартный или по <bpt id="1">&lt;code&gt;</bpt>id<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Принимаемые аргументы:</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept>] – Идентификатор канала. Если не задан будет использоваться канал по умолчанию (<bpt id="3">&lt;code&gt;</bpt>'default'<ept id="3">&lt;/code&gt;</ept>).</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-li" xml:space="preserve">
<source xml:lang="ru">[<bpt id="1">&lt;code&gt;</bpt>{Boolean}<ept id="1">&lt;/code&gt;</ept> <bpt id="2">&lt;code&gt;</bpt>drop<ept id="2">&lt;/code&gt;</ept>] – Логический флаг, указывающий (в значении <bpt id="3">&lt;code&gt;</bpt>true<ept id="3">&lt;/code&gt;</ept>) на необходимость удалить канал. По умолчанию <bpt id="4">&lt;code&gt;</bpt>false<ept id="4">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Возвращаемое значение:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{Object}<ept id="1">&lt;/code&gt;</ept>. Объект «класса» <bpt id="2">&lt;code&gt;</bpt>Emitter<ept id="2">&lt;/code&gt;</ept> – именной канал.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{undefined}<ept id="1">&lt;/code&gt;</ept>. В случае если функция была вызвана с параметром <bpt id="2">&lt;code&gt;</bpt>drop<ept id="2">&lt;/code&gt;</ept> в значении <bpt id="3">&lt;code&gt;</bpt>true<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['events__channels'], function(channels) {

var myChannel = channels('my-channel');
myChannel.on('test', function(e, data) { console.log(data.foo) });

myChannel.emit('test', { foo : 'bar' }); // 'bar'

});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/jquery/jquery.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="jquery-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">jquery</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://jquery.com</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок служит для загрузки и подключения на страницу библиотеки <bpt id="1">&lt;a href="https://jquery.com" [#$tu3]&gt;</bpt>jQuery<ept id="1">&lt;/a&gt;</ept> и ее расширений.<ph id="2">&lt;br /&gt;</ph>Расширения подключаются через зависимости от элементов блока.</source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.require(['jquery'], function($) {
    console.log($);
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu6" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Обзор</source>
</trans-unit>
      <trans-unit id="tu7" resname="--id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Элементы блока</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Способы использования</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-config"&gt;</bpt>config<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Настройки jQuery.</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-event"&gt;</bpt>event<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>JS<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Расширения событийной модели jQuery.</source>
</trans-unit>
      <trans-unit id="tu17" resname="-----id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойства и методы элементов блока</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu20" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Тип или возвращаемое значение</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu22" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-config"&gt;</bpt>config<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu23" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#fields-url"&gt;</bpt>url<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code preserve="1"&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu25" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Строка с URL, подключаемой библиотеки jQuery.</source>
</trans-unit>
      <trans-unit id="tu26" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">События элементов блока</source>
</trans-unit>
      <trans-unit id="tu27" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Элемент</source>
</trans-unit>
      <trans-unit id="tu28" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Имя</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-th" xml:space="preserve">
<source xml:lang="ru">Описание</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#elems-event"&gt;</bpt>event<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu31" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerclick"&gt;</bpt>pointerclick<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Позволяет избавиться от задержки события <bpt id="1">&lt;code preserve="1"&gt;</bpt>click<ept id="1">&lt;/code&gt;</ept> на тач-устройствах.</source>
</trans-unit>
      <trans-unit id="tu33" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu34" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerover"&gt;</bpt>pointerover<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu35" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется, когда указатель устройства ввода находится над элементом.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu37" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerenter"&gt;</bpt>pointerenter<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется при входе указателя в активную зону элемента.</source>
</trans-unit>
      <trans-unit id="tu39" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu40" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerdown"&gt;</bpt>pointerdown<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu41" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется при входе устройства ввода в состояние активного нажатия.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu43" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointermove"&gt;</bpt>pointermove<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется при изменении координат указателя.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu46" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerup"&gt;</bpt>pointerup<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется по выходу из состояния активного нажатия.</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu49" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerout"&gt;</bpt>pointerout<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется когда указатель покидает зону над элементаом.</source>
</trans-unit>
      <trans-unit id="tu51" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu52" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerleave"&gt;</bpt>pointerleave<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu53" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется при выходе указателя из активной зоны элемента.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu55" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerpress"&gt;</bpt>pointerpress<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется по событию <bpt id="1">&lt;code preserve="1"&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu57" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu58" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointerrelease"&gt;</bpt>pointerrelease<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu59" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется по событиям <bpt id="1">&lt;code preserve="1"&gt;</bpt>pointerup<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code preserve="1"&gt;</bpt>pointercancel<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-td" xml:space="preserve">
<source xml:lang="ru"/>
</trans-unit>
      <trans-unit id="tu61" restype="x-td" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" href="#events-pointercancel"&gt;</bpt>pointercancel<ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" restype="x-td" xml:space="preserve">
<source xml:lang="ru">Генерируется в случаях, когда не предполагается дальнейшее возникновение pointer-событий или после генерации события <bpt id="1">&lt;code preserve="1"&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu63" resname="---id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Публичные технологии блока</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок реализован в технологиях:</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>js<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/jquery/__event/jquery__event.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="-event--jquery-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>event<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>jquery<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент реализует поддержку дополнительных типов событий jQuery. Дополнительные типы подключаются с помощью соответствующих значений модификатора <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu4" resname="--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Модификаторы элемента</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-name"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu6" resname="-type-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Предоставляет набор полифилов, реализующих уровень абстракции над jQuery-событиями устройств ввода. Это позволяет создавать общую логику для различных платформ (десктопы, телефоны и т.д.) и дополнять ее методами, специфическими для конкретного вида устройств.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Каждый полифил добавляет набор <bpt id="1">&lt;strong&gt;</bpt>pointer-событий<ept id="1">&lt;/strong&gt;</ept>, для создания аппаратно-независимой логики.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все pointer-события являются пользовательскими событиями jQuery. Подписка на pointer-события осуществляется стандартным образом:</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define(
    'pointer-test',
    ['i-bem__dom', 'jquery'],
    function(provide, BEMDOM, $) {

provide(BEMDOM.decl({ block : this.name }, /** @lends pointer-test.prototype */ {
    onSetMod : {
        'js' : {
            'inited' : function() {
                this.bindTo('pointerpress', this.onPress); // при инициализации подписываемся на pointerpress на самом блоке
            }
        }

    },
    onPress : function(e) {
        console.log(e.type);
        this.bindTo('pointerrelease', this.onRelease); // при вызове обработчика для pointerpress подписываемся на pointerrelease
    },
    onRelease : function(e) {
        console.log(e.type);
        this.unbindFrom('pointerrelease', this.onRelease); // при вызове обработчика для pointerrelease отписываемся от pointerrelease
    }
}));
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu11" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">В зависимости от значения модификатора, будут подключены разные полифилы.</source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type-pointer"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu13" resname="-type---pointer-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>pointer<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu14" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификатор для подключения всех типов pointer-событий. Не вводит дополнительной логики.</source>
</trans-unit>
      <trans-unit id="tu15" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type-pointerclick"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" resname="-type---pointerclick-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>pointerclick<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu17" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подключает полифил, реализующий событие <bpt id="1">&lt;code&gt;</bpt>pointerclick<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointerclick"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu19" resname="-pointerclick-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerclick<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется по нажатию левой клавиши мыши или в момент контакта с рабочей поверхностью устройства. Использование <bpt id="1">&lt;code&gt;</bpt>pointerclick<ept id="1">&lt;/code&gt;</ept> позволяет избавиться от задержки события <bpt id="2">&lt;code&gt;</bpt>click<ept id="2">&lt;/code&gt;</ept> на тач-устройствах.</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type-pointernative"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" resname="-type---pointernative-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>pointernative<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">http://www.w3.org/TR/pointerevents/</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подключает полифил, реализующий базовую функциональность модели <bpt id="1">&lt;a href="http://www.w3.org/TR/pointerevents/" [#$tu24]&gt;</bpt>W3C Pointer Events<ept id="1">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">С модификатором доступен следующий набор событий:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointerover"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" resname="-pointerover-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerover<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется в момент:</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Когда указатель находится над элементом.</source>
</trans-unit>
      <trans-unit id="tu30" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Перед событием <bpt id="1">&lt;code&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept>, для устройств, не поддерживающих <bpt id="2">&lt;code&gt;</bpt>hover<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointerenter"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" resname="-pointerenter-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerenter<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется:</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-li" xml:space="preserve">
<source xml:lang="ru">При входе указателя в <bpt id="1">&lt;em&gt;</bpt>активную зону<ept id="1">&lt;/em&gt;</ept> элемента. Когда указатель находится над элементом или одним из его потомков.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-li" xml:space="preserve">
<source xml:lang="ru">По событию <bpt id="1">&lt;code&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept> для устройств, не поддерживающих <bpt id="2">&lt;code&gt;</bpt>hover<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu36" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Событие аналогично <bpt id="1">&lt;code&gt;</bpt>pointerover<ept id="1">&lt;/code&gt;</ept>, но не всплывает.</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointerdown"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu38" resname="-pointerdown-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется в момент, когда устройство ввода входит в состояние <bpt id="1">&lt;em&gt;</bpt>активного нажатия<ept id="1">&lt;/em&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu40" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для мыши – когда хотя бы одна клавиша нажата.</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для перьевых и тач- устройств – состояние контакта с рабочей поверхностью устройства.</source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointermove"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu43" resname="-pointermove-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointermove<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется при изменении координат указателя.</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-eventname"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" resname="-pointerup-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerup<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется по выходу из состояния <bpt id="1">&lt;em&gt;</bpt>активного нажатия<ept id="1">&lt;/em&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для мыши это соответствует переходу от состояния, когда была нажата хотя бы одна клавиша, к состоянию без нажатых клавиш.</source>
</trans-unit>
      <trans-unit id="tu49" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Для перьевых и тач- устройств – моменту разрыва контакта с рабочей поверхностью устройства.</source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointerout"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu51" resname="-pointerout-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerout<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется при выходе указателя из <bpt id="1">&lt;em&gt;</bpt>активной зоны<ept id="1">&lt;/em&gt;</ept> элемента:</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Когда указатель покидает зону над элементом или одним из его потомков.</source>
</trans-unit>
      <trans-unit id="tu54" restype="x-li" xml:space="preserve">
<source xml:lang="ru">После событий <bpt id="1">&lt;code&gt;</bpt>pointerup<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>pointercancel<ept id="2">&lt;/code&gt;</ept> для устройств, не поддерживающих <bpt id="3">&lt;code&gt;</bpt>hover<ept id="3">&lt;/code&gt;</ept>. Например, когда стилус (палец) покидает рабочую зону устройства.</source>
</trans-unit>
      <trans-unit id="tu55" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-pointerleave"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu56" resname="-pointerleave-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerleave<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu57" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется при выходе указателя из <bpt id="1">&lt;em&gt;</bpt>активной зоны<ept id="1">&lt;/em&gt;</ept> элемента:</source>
</trans-unit>
      <trans-unit id="tu58" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Когда указатель покидает зону над элементом или одним из его потомков.</source>
</trans-unit>
      <trans-unit id="tu59" restype="x-li" xml:space="preserve">
<source xml:lang="ru">После событий <bpt id="1">&lt;code&gt;</bpt>pointerup<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>pointercancel<ept id="2">&lt;/code&gt;</ept> для устройств, не поддерживающих <bpt id="3">&lt;code&gt;</bpt>hover<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu60" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Событие аналогично <bpt id="1">&lt;code&gt;</bpt>pointerout<ept id="1">&lt;/code&gt;</ept>, но не всплывает.</source>
</trans-unit>
      <trans-unit id="tu61" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-eventname"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu62" resname="-pointercancel-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointercancel<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu63" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется в случаях, когда:</source>
</trans-unit>
      <trans-unit id="tu64" restype="x-li" xml:space="preserve">
<source xml:lang="ru">Не предполагается дальнейшее возникновение pointer-событий (например, в следствие изменения аппаратных настроек).</source>
</trans-unit>
      <trans-unit id="tu65" restype="x-li" xml:space="preserve">
<source xml:lang="ru">После генерации события <bpt id="1">&lt;code&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept>, если указатель был использован для масштабирования страницы.</source>
</trans-unit>
      <trans-unit id="tu66" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Например, событие генерируется при изменении ориентации устройства пока оно находится в состояние <bpt id="1">&lt;em&gt;</bpt>активного нажатия<ept id="1">&lt;/em&gt;</ept>. Или при превышении лимита на количество одновременных нажатий, поддерживаемых устройством.</source>
</trans-unit>
      <trans-unit id="tu67" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">После генерации события <bpt id="1">&lt;code&gt;</bpt>pointercancel<ept id="1">&lt;/code&gt;</ept> последовательно генерируются события <bpt id="2">&lt;code&gt;</bpt>pointerout<ept id="2">&lt;/code&gt;</ept> и <bpt id="3">&lt;code&gt;</bpt>pointerleave<ept id="3">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu68" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="modifiers-type-pointernative"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu69" resname="-type---pointerpressrealease-id" restype="x-h4" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>type<ept id="1">&lt;/code&gt;</ept> в значении <bpt id="2">&lt;code&gt;</bpt>pointerpressrealease<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu70" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подключает полифил, реализующий события <bpt id="1">&lt;code&gt;</bpt>pointerpress<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>pointerrelease<ept id="2">&lt;/code&gt;</ept>. Полифил использует события Pointer Events.</source>
</trans-unit>
      <trans-unit id="tu71" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-eventname"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu72" resname="-pointerpress-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerpress<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu73" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется по событию <bpt id="1">&lt;code&gt;</bpt>pointerdown<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu74" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="events-eventname"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu75" resname="-pointerrelease-id" restype="x-h5" xml:space="preserve">
<source xml:lang="ru">Событие <bpt id="1">&lt;code&gt;</bpt>pointerrelease<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu76" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Генерируется по событиям <bpt id="1">&lt;code&gt;</bpt>pointerup<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>pointercancel<ept id="2">&lt;/code&gt;</ept>.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/jquery/__config/jquery__config.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="-config--jquery-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Элемент <bpt id="1">&lt;code&gt;</bpt>config<ept id="1">&lt;/code&gt;</ept> блока <bpt id="2">&lt;code&gt;</bpt>jquery<ept id="2">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент предоставляет объект с настройками подключаемой библиотеки jQuery. Настройки хранятся как свойства объекта.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu4" resname="----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Свойства и методы объекта</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;a preserve="1" name="fields-url"&gt;</bpt><ept id="1">&lt;/a&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu6" resname="-url-id" restype="x-h3" xml:space="preserve">
<source xml:lang="ru">Свойство <bpt id="1">&lt;code&gt;</bpt>url<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu7" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Тип: <bpt id="1">&lt;code&gt;</bpt>{String}<ept id="1">&lt;/code&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Содержит строку с URL для загрузки jQuery.<ph id="1">&lt;br /&gt;</ph>В проекте значение свойства может быть переопределено. Тогда при подключении блока будет использовано новое значение, если библиотека jQuery не была подключена предварительно.</source>
</trans-unit>
      <trans-unit id="tu9" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>modules.define('jquery__config', function(provide) {

provide({ url: '//foo.bar/my-custom-jquery.js' });
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/i-bem/i-bem.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок-хелпер, позволяющий создавать другие блоки.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemhtml/</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/bemtree/</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/i-bem/</source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок <bpt id="1">&lt;code&gt;</bpt>i-bem<ept id="1">&lt;/code&gt;</ept> реализован в технологиях <bpt id="2">&lt;a href="https://ru.bem.info/technology/bemhtml/" [#$tu3]&gt;</bpt>BEMHTML<ept id="2">&lt;/a&gt;</ept>, <bpt id="3">&lt;a href="https://ru.bem.info/technology/bemtree/" [#$tu4]&gt;</bpt>BEMTREE<ept id="3">&lt;/a&gt;</ept> и <bpt id="4">&lt;a href="https://ru.bem.info/technology/i-bem/" [#$tu5]&gt;</bpt>JS<ept id="4">&lt;/a&gt;</ept>.</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-data-url" xml:space="preserve">
<source xml:lang="ru">https://ru.bem.info/technology/i-bem/current/i-bem-js/</source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Реализация блока в технологии JS представляет собой <bpt id="1">&lt;a href="https://ru.bem.info/technology/i-bem/current/i-bem-js/" [#$tu7]&gt;</bpt>специализированный JavaScript-фреймворк<ept id="1">&lt;/a&gt;</ept> для веб-разработки в рамках методологии БЭМ.</source>
</trans-unit>
    </body>
  </file>
  <file original="common.blocks/i-bem/__dom/_elem-instances/i-bem__dom_elem-instances.ru.md.html" source-language="ru" target-language="en" datatype="html" build-num="541">
    <body>
      <trans-unit id="tu1" resname="-elem-instances--dom--i-bem-id" restype="x-h1" xml:space="preserve">
<source xml:lang="ru">Модификатор <bpt id="1">&lt;code&gt;</bpt>elem-instances<ept id="1">&lt;/code&gt;</ept> элемента <bpt id="2">&lt;code&gt;</bpt>dom<ept id="2">&lt;/code&gt;</ept> блока <bpt id="3">&lt;code&gt;</bpt>i-bem<ept id="3">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu2" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Подключение данного модификатора позволяет работать с элементами почти так же, как и с обычными блоками, т.е. любой (но не обязательно каждый) элемент может иметь свой BEM-инстанс. API инстансов элементов аналогично API блоков с некоторыми различиями, описанными ниже.</source>
</trans-unit>
      <trans-unit id="tu3" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Декларация</source>
</trans-unit>
      <trans-unit id="tu4" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Декларация элемента</source>
</trans-unit>
      <trans-unit id="tu5" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl({ block: 'menu', elem: 'item' }, { /* properties */ }, { /* static properties */ });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu6" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Декларация модификатора элемента:</source>
</trans-unit>
      <trans-unit id="tu7" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>BEMDOM.decl({
    block: 'menu',
    elem: 'item',
    modName: 'state',
    modVal: 'current'
}, {
    /* properties */
}, {
    /* static properties */
});<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu8" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Модификаторы элементов работают так же, как модификаторы блоков.</source>
</trans-unit>
      <trans-unit id="tu9" resname="bem---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">BEM-инстансы элементов</source>
</trans-unit>
      <trans-unit id="tu10" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для доступа к BEM-инстансам элементов используется хелпер <bpt id="1">&lt;code&gt;</bpt>findElemInstances<ept id="1">&lt;/code&gt;</ept>, API которого аналогично хелперу <bpt id="2">&lt;code&gt;</bpt>findElem<ept id="2">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu11" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// поиск всех вложенных элементов 'item'
this.findElemInstances('item');

// строгий поиск всех вложенных элементов 'item'
this.findElemInstances('item', true);

// поиск всех вложенных модификаторов элементов 'item'
this.findElemInstances('item', 'state', 'current');

// строгий поиск всех вложенных модификаторов элементов 'item'
this.findElemInstances('item', 'state', 'current', true);

// поиск всех элементов 'item' внутри указанного контекста
this.findElemInstances(ctx, 'item');

// строгий поиск всех элементов 'item' внутри указанного контекста
this.findElemInstances(ctx, 'item', true);

// поиск всех модификаторов элементов 'item' внутри указанного контекста
this.findElemInstances(ctx, 'item', 'state', 'current');

// строгий поиск всех модификаторов элементов 'item' внутри указанного контекста
this.findElemInstances(ctx, 'item', 'state', 'current', true);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu12" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При необходимости, инстансы найденных элементов инициализируются.</source>
</trans-unit>
      <trans-unit id="tu13" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Строгий поиск подразумевает фильтрацию элементов вложенных блоков с таким же именем, как у текущего блока:</source>
</trans-unit>
      <trans-unit id="tu14" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'menu',
    content: [
        {
            elem: 'item' // (1)
        },
        {
            block: 'menu',
            content: {
                elem: 'item' // (2)
            }
        }
    ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu15" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; block 'menu'
this.findElemInstances('item');         // найдет инстансы (1) и (2)
this.findElemInstances('item', true);   // найдет только инстанс (1)<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu16" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По аналогии с хелпером <bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept>, кэширующим результаты своей работы, для минимизации количества операций с DOM рекомендуется использовать кэширующий поиск BEM-инстансов элементов:</source>
</trans-unit>
      <trans-unit id="tu17" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// кэширующий поиск всех вложенных элементов 'item'
this.elemInstances('item');

// кэширующий поиск всех вложенных модификаторов элемента 'item'
this.elemInstances('item', 'state', 'current');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu18" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Также с помощью этого хелпера можно вернуть инстансы элементов, расположенных на DOM-нодах указанной jQuery-коллекции:</source>
</trans-unit>
      <trans-unit id="tu19" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.elemInstances(domElem);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu20" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Для поиска одного (первого) BEM-инстанса элемента есть дополнительные формы этих хелперов с аналогичным API:</source>
</trans-unit>
      <trans-unit id="tu21" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// поиск одного вложенного элемента 'item'
this.findElemInstance('item');

// кэширующий поиск одного вложенного элемента 'item'
this.elemInstance('item');

// вернуть инстанс элемента, расположенного на первой DOM-ноде указанной jQuery-коллекции
this.elemInstance(domElem);<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu22" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если необходимо вернуть BEM-инстанс элемента, на DOM-ноде которого подмешаны другие элементы того же блока:</source>
</trans-unit>
      <trans-unit id="tu23" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.elemInstance(this.elemify(domElem, 'item'));<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu24" resname="---id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поиск снаружи контекста</source>
</trans-unit>
      <trans-unit id="tu25" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Существует хелпер для поиска элемента снаружи указанного контекста:</source>
</trans-unit>
      <trans-unit id="tu26" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'menu',
    content: {
        elem: 'item',
        content: {
            elem: 'link'
        }
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu27" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; block 'menu'
this.closestElem(this.elem('link'), 'item');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu28" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">При поиске от имени BEM-инстанса элемента можно не указывать контекст поиска, тогда поиск будет производиться относительно DOM-ноды этого элемента:</source>
</trans-unit>
      <trans-unit id="tu29" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__link'
this.closestElem('item');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu30" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По аналогии с хелперами <bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept> и <bpt id="2">&lt;code&gt;</bpt>findElem<ept id="2">&lt;/code&gt;</ept>, хелпер <bpt id="3">&lt;code&gt;</bpt>closestElem<ept id="3">&lt;/code&gt;</ept> возвращает jQuery-коллекцию. Для доступа к BEM-инстансам элементов снаружи контекста используются хелперы <bpt id="4">&lt;code&gt;</bpt>closestElemInstance<ept id="4">&lt;/code&gt;</ept> и <bpt id="5">&lt;code&gt;</bpt>closestElemInstances<ept id="5">&lt;/code&gt;</ept>:</source>
</trans-unit>
      <trans-unit id="tu31" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; block 'menu'
this.closestElemInstance(this.elem('link'), 'item');
this.closestElemInstances(this.elem('link'), 'item');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu32" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__link'
this.closestElemInstance('item');<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu33" resname="----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Доступ к родительскому блоку</source>
</trans-unit>
      <trans-unit id="tu34" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">По аналогии с методом <bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept> для получения элемента блока существует метод <bpt id="2">&lt;code&gt;</bpt>block<ept id="2">&lt;/code&gt;</ept> для получения блока элемента.</source>
</trans-unit>
      <trans-unit id="tu35" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__item'
this.block() // эквивалентно this.findBlockOutside('menu') с кэшированием результата поиска<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu36" resname="----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Поиск элементов и блоков</source>
</trans-unit>
      <trans-unit id="tu37" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Элемент ищет только вложенные в него элементы:</source>
</trans-unit>
      <trans-unit id="tu38" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>{
    block: 'menu',
    content: [
        {
            elem: 'item',
            content: {
                elem: 'link' // (1)
            }
        },
        {
            elem: 'link' // (2)
        }
    ]
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu39" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__item'
this.findElem('link');  // будет найден только элемент (1).<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu40" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Если нужно найти все элементы <bpt id="1">&lt;code&gt;</bpt>'link'<ept id="1">&lt;/code&gt;</ept>, поиск нужно производить от имени блока-родителя:</source>
</trans-unit>
      <trans-unit id="tu41" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__item'
this.block().findElem('link');    // будут найдены элементы (1) и (2).<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu42" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Все это справедливо также для хелпера <bpt id="1">&lt;code&gt;</bpt>elem<ept id="1">&lt;/code&gt;</ept>, хелперов поиска блоков (<bpt id="2">&lt;code&gt;</bpt>findBlockInside<ept id="2">&lt;/code&gt;</ept> и др.) и описанных выше хелперов для поиска BEM-инстансов элементов.</source>
</trans-unit>
      <trans-unit id="tu43" resname="----id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Реакция на установку модификаторов</source>
</trans-unit>
      <trans-unit id="tu44" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Блок делегирует установку модификаторов тем элементам, у которых есть свои BEM-декларации.<ph id="1">&lt;br /&gt;</ph>Поэтому обработчики <bpt id="2">&lt;code&gt;</bpt>onSetMod<ept id="2">&lt;/code&gt;</ept> элемента выполнятся, если родительский блок установит этому элементу соответствующие модификаторы:</source>
</trans-unit>
      <trans-unit id="tu45" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__item'
onSetMod: {
    'state': {
        'current': function() {
            // код обработчика
        }
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu46" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; block 'menu'
this.setMod(this.elem('item'), 'state', 'current'); // выполнится задекларированный выше обработчик<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu47" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обработчики <bpt id="1">&lt;code&gt;</bpt>onElemSetMod<ept id="1">&lt;/code&gt;</ept> блока выполнятся, если инстанс элемента сам установит себе соответствующие модификаторы:</source>
</trans-unit>
      <trans-unit id="tu48" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; block 'menu'
onElemSetMod: {
    'item': {
        'state': {
            'current': function() {
                // код обработчика
            }
        }
    }
}<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu49" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>// this =&gt; element 'menu__item'
this.setMod('state', 'current'); // выполнится задекларированный выше обработчик<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
      <trans-unit id="tu50" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Обработчики <bpt id="1">&lt;code&gt;</bpt>onElemSetMod<ept id="1">&lt;/code&gt;</ept> в контексте инстанса элемента не используются.</source>
</trans-unit>
      <trans-unit id="tu51" resname="---live--id" restype="x-h2" xml:space="preserve">
<source xml:lang="ru">Отложенная инициализация и live-события</source>
</trans-unit>
      <trans-unit id="tu52" restype="x-paragraph" xml:space="preserve">
<source xml:lang="ru">Рекомендуется по возможности всегда использовать отложенную инициализацию BEM-инстансов элементов. Они, как и обычные блоки, поддерживают все хелперы для работы с live-событиями. Кроме того, хелпер <bpt id="1">&lt;code&gt;</bpt>liveInitOnBlockEvent<ept id="1">&lt;/code&gt;</ept> имеет дополнительную форму для инициализации по событию родительского блока - для этого просто опускается второй параметр (имя блока):</source>
</trans-unit>
      <trans-unit id="tu53" restype="x-pre" xml:space="preserve">
<source xml:lang="ru"><bpt id="1">&lt;code&gt;</bpt>this.liveInitOnBlockEvent('switch', function() { /* обработчик */ });<ept id="1">&lt;/code&gt;</ept></source>
</trans-unit>
    </body>
  </file>
</xliff>
